AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "https://github.com/meta-introspector/typescript-zos-introspector"
Description: "parameters extracted from https://github.com/sekmet/synapzeai"
Parameters:

  AgentCodeName:
    Type: 'String'
    Description: 'Agent codename for setting and finding parameters'
    Default: 'tine_agent_2'

  cacheDir:
    Type: 'String'
    Description: 'Parameter for CACHE_DIR'
    

  redisUrl:
    Type: 'String'
    Description: 'Parameter for REDIS_URL'
    

  serverUrl:
    Type: 'String'
    Description: 'Parameter for SERVER_URL'
    

  serverPort:
    Type: 'Number'
    Description: 'Parameter for SERVER_PORT'
    

  remoteCharacterUrls:
    Type: 'String'
    Description: 'Parameter for REMOTE_CHARACTER_URLS'
    

  useCharacterStorage:
    Type: 'String'
    Description: 'Parameter for USE_CHARACTER_STORAGE'
    Default: 'false'

  defaultLogLevel:
    Type: 'String'
    Description: 'Parameter for DEFAULT_LOG_LEVEL'
    

  logJsonFormat:
    Type: 'String'
    Description: 'Parameter for LOG_JSON_FORMAT'
    Default: 'false'

  expressMaxPayload:
    Type: 'String'
    Description: 'Parameter for EXPRESS_MAX_PAYLOAD'
    

  transcriptionProvider:
    Type: 'String'
    Description: 'Parameter for TRANSCRIPTION_PROVIDER'
    

  walletPrivateKey:
    Type: 'String'
    Description: 'Parameter for WALLET_PRIVATE_KEY'
    

  walletPublicKey:
    Type: 'String'
    Description: 'Parameter for WALLET_PUBLIC_KEY'
    

  tokenizer:
    Type: 'String'
    Description: 'Parameter for tokenizer'
    

  cloudflare:
    Type: 'String'
    Description: 'Parameter for cloudflare'
    

  aws:
    Type: 'String'
    Description: 'Parameter for aws'
    

  verifiableInference:
    Type: 'String'
    Description: 'Parameter for verifiable_inference'
    

  supabaseAnonKey:
    Type: 'String'
    Description: 'Parameter for SUPABASE_ANON_KEY'
    

  mongodbDatabase:
    Type: 'String'
    Description: 'Parameter for MONGODB_DATABASE'
    

  discordApiToken:
    Type: 'String'
    Description: 'Parameter for DISCORD_API_TOKEN'
    

  discordVoiceChannelId:
    Type: 'String'
    Description: 'Parameter for DISCORD_VOICE_CHANNEL_ID'
    

  farcasterNeynarApiKey:
    Type: 'String'
    Description: 'Parameter for FARCASTER_NEYNAR_API_KEY'
    

  farcasterNeynarSignerUuid:
    Type: 'String'
    Description: 'Parameter for FARCASTER_NEYNAR_SIGNER_UUID'
    

  farcasterDryRun:
    Type: 'String'
    Description: 'Parameter for FARCASTER_DRY_RUN'
    Default: 'false'

  farcasterPollInterval:
    Type: 'Number'
    Description: 'Parameter for FARCASTER_POLL_INTERVAL'
    

  telegramAccountPhone:
    Type: 'String'
    Description: 'Parameter for TELEGRAM_ACCOUNT_PHONE'
    

  telegramAccountAppId:
    Type: 'String'
    Description: 'Parameter for TELEGRAM_ACCOUNT_APP_ID'
    

  telegramAccountAppHash:
    Type: 'String'
    Description: 'Parameter for TELEGRAM_ACCOUNT_APP_HASH'
    

  telegramAccountDeviceModel:
    Type: 'String'
    Description: 'Parameter for TELEGRAM_ACCOUNT_DEVICE_MODEL'
    

  telegramAccountSystemVersion:
    Type: 'String'
    Description: 'Parameter for TELEGRAM_ACCOUNT_SYSTEM_VERSION'
    

  twitterUsername:
    Type: 'String'
    Description: 'Parameter for TWITTER_USERNAME'
    

  twitterPassword:
    Type: 'String'
    Description: 'Parameter for TWITTER_PASSWORD'
    

  twitterEmail:
    Type: 'String'
    Description: 'Parameter for TWITTER_EMAIL'
    

  twitter2faSecret:
    Type: 'String'
    Description: 'Parameter for TWITTER_2FA_SECRET'
    

  twitterCookiesAuthToken:
    Type: 'String'
    Description: 'Parameter for TWITTER_COOKIES_AUTH_TOKEN'
    

  twitterCookiesCt0:
    Type: 'String'
    Description: 'Parameter for TWITTER_COOKIES_CT0'
    

  twitterCookiesGuestId:
    Type: 'String'
    Description: 'Parameter for TWITTER_COOKIES_GUEST_ID'
    

  twitterPollInterval:
    Type: 'Number'
    Description: 'Parameter for TWITTER_POLL_INTERVAL'
    

  twitterSearchEnable:
    Type: 'String'
    Description: 'Parameter for TWITTER_SEARCH_ENABLE'
    Default: 'false'

  twitterTargetUsers:
    Type: 'String'
    Description: 'Parameter for TWITTER_TARGET_USERS'
    

  twitterRetryLimit:
    Type: 'Number'
    Description: 'Parameter for TWITTER_RETRY_LIMIT'
    

  twitterSpacesEnable:
    Type: 'String'
    Description: 'Parameter for TWITTER_SPACES_ENABLE'
    Default: 'false'

  enableTwitterPostGeneration:
    Type: 'String'
    Description: 'Parameter for ENABLE_TWITTER_POST_GENERATION'
    Default: 'false'

  postIntervalMin:
    Type: 'Number'
    Description: 'Parameter for POST_INTERVAL_MIN'
    

  postIntervalMax:
    Type: 'Number'
    Description: 'Parameter for POST_INTERVAL_MAX'
    

  postImmediately:
    Type: 'String'
    Description: 'Parameter for POST_IMMEDIATELY'
    Default: 'false'

  actionInterval:
    Type: 'Number'
    Description: 'Parameter for ACTION_INTERVAL'
    

  enableActionProcessing:
    Type: 'String'
    Description: 'Parameter for ENABLE_ACTION_PROCESSING'
    Default: 'false'

  maxActionsProcessing:
    Type: 'Number'
    Description: 'Parameter for MAX_ACTIONS_PROCESSING'
    

  actionTimelineType:
    Type: 'String'
    Description: 'Parameter for ACTION_TIMELINE_TYPE'
    

  twitterApprovalDiscordChannelId:
    Type: 'String'
    Description: 'Parameter for TWITTER_APPROVAL_DISCORD_CHANNEL_ID'
    

  twitterApprovalDiscordBotToken:
    Type: 'String'
    Description: 'Parameter for TWITTER_APPROVAL_DISCORD_BOT_TOKEN'
    

  twitterApprovalEnabled:
    Type: 'String'
    Description: 'Parameter for TWITTER_APPROVAL_ENABLED'
    Default: 'false'

  twitterApprovalCheckInterval:
    Type: 'Number'
    Description: 'Parameter for TWITTER_APPROVAL_CHECK_INTERVAL'
    

  whatsappPhoneNumberId:
    Type: 'String'
    Description: 'Parameter for WHATSAPP_PHONE_NUMBER_ID'
    

  whatsappBusinessAccountId:
    Type: 'String'
    Description: 'Parameter for WHATSAPP_BUSINESS_ACCOUNT_ID'
    

  whatsappWebhookVerifyToken:
    Type: 'String'
    Description: 'Parameter for WHATSAPP_WEBHOOK_VERIFY_TOKEN'
    

  whatsappApiVersion:
    Type: 'String'
    Description: 'Parameter for WHATSAPP_API_VERSION'
    

  instagramUsername:
    Type: 'String'
    Description: 'Parameter for INSTAGRAM_USERNAME'
    

  instagramPassword:
    Type: 'String'
    Description: 'Parameter for INSTAGRAM_PASSWORD'
    

  instagramAppId:
    Type: 'String'
    Description: 'Parameter for INSTAGRAM_APP_ID'
    

  instagramAppSecret:
    Type: 'String'
    Description: 'Parameter for INSTAGRAM_APP_SECRET'
    

  instagramBusinessAccountId:
    Type: 'String'
    Description: 'Parameter for INSTAGRAM_BUSINESS_ACCOUNT_ID'
    

  instagramPostIntervalMin:
    Type: 'Number'
    Description: 'Parameter for INSTAGRAM_POST_INTERVAL_MIN'
    

  instagramPostIntervalMax:
    Type: 'Number'
    Description: 'Parameter for INSTAGRAM_POST_INTERVAL_MAX'
    

  instagramEnableActionProcessing:
    Type: 'String'
    Description: 'Parameter for INSTAGRAM_ENABLE_ACTION_PROCESSING'
    Default: 'false'

  instagramActionInterval:
    Type: 'Number'
    Description: 'Parameter for INSTAGRAM_ACTION_INTERVAL'
    

  instagramMaxActions:
    Type: 'Number'
    Description: 'Parameter for INSTAGRAM_MAX_ACTIONS'
    

  alexaClientId:
    Type: 'String'
    Description: 'Parameter for ALEXA_CLIENT_ID'
    

  alexaClientSecret:
    Type: 'String'
    Description: 'Parameter for ALEXA_CLIENT_SECRET'
    

  simsaiAgentId:
    Type: 'String'
    Description: 'Parameter for SIMSAI_AGENT_ID'
    

  simsaiUsername:
    Type: 'String'
    Description: 'Parameter for SIMSAI_USERNAME'
    

  simsaiDryRun:
    Type: 'String'
    Description: 'Parameter for SIMSAI_DRY_RUN'
    Default: 'false'

  openaiApiUrl:
    Type: 'String'
    Description: 'Parameter for OPENAI_API_URL'
    

  smallOpenaiModel:
    Type: 'String'
    Description: 'Parameter for SMALL_OPENAI_MODEL'
    

  mediumOpenaiModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_OPENAI_MODEL'
    

  largeOpenaiModel:
    Type: 'String'
    Description: 'Parameter for LARGE_OPENAI_MODEL'
    

  embeddingOpenaiModel:
    Type: 'String'
    Description: 'Parameter for EMBEDDING_OPENAI_MODEL'
    

  imageOpenaiModel:
    Type: 'String'
    Description: 'Parameter for IMAGE_OPENAI_MODEL'
    

  useOpenaiEmbedding:
    Type: 'String'
    Description: 'Parameter for USE_OPENAI_EMBEDDING'
    Default: 'false'

  enableOpenAiCommunityPlugin:
    Type: 'String'
    Description: 'Parameter for ENABLE_OPEN_AI_COMMUNITY_PLUGIN'
    Default: 'false'

  openaiDefaultModel:
    Type: 'String'
    Description: 'Parameter for OPENAI_DEFAULT_MODEL'
    

  openaiMaxTokens:
    Type: 'Number'
    Description: 'Parameter for OPENAI_MAX_TOKENS'
    

  openaiTemperature:
    Type: 'Number'
    Description: 'Parameter for OPENAI_TEMPERATURE'
    

  atomaApiUrl:
    Type: 'String'
    Description: 'Parameter for ATOMA_API_URL'
    

  smallAtomaModel:
    Type: 'String'
    Description: 'Parameter for SMALL_ATOMA_MODEL'
    

  mediumAtomaModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_ATOMA_MODEL'
    

  largeAtomaModel:
    Type: 'String'
    Description: 'Parameter for LARGE_ATOMA_MODEL'
    

  eternalaiModel:
    Type: 'String'
    Description: 'Parameter for ETERNALAI_MODEL'
    

  eternalaiChainId:
    Type: 'String'
    Description: 'Parameter for ETERNALAI_CHAIN_ID'
    

  eternalaiRpcUrl:
    Type: 'String'
    Description: 'Parameter for ETERNALAI_RPC_URL'
    

  eternalaiAgentContractAddress:
    Type: 'String'
    Description: 'Parameter for ETERNALAI_AGENT_CONTRACT_ADDRESS'
    

  eternalaiAgentId:
    Type: 'String'
    Description: 'Parameter for ETERNALAI_AGENT_ID'
    

  eternalaiApiKey:
    Type: 'String'
    Description: 'Parameter for ETERNALAI_API_KEY'
    

  eternalaiLog:
    Type: 'String'
    Description: 'Parameter for ETERNALAI_LOG'
    Default: 'false'

  hyperbolicModel:
    Type: 'String'
    Description: 'Parameter for HYPERBOLIC_MODEL'
    

  imageHyperbolicModel:
    Type: 'String'
    Description: 'Parameter for IMAGE_HYPERBOLIC_MODEL'
    

  smallHyperbolicModel:
    Type: 'String'
    Description: 'Parameter for SMALL_HYPERBOLIC_MODEL'
    

  mediumHyperbolicModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_HYPERBOLIC_MODEL'
    

  largeHyperbolicModel:
    Type: 'String'
    Description: 'Parameter for LARGE_HYPERBOLIC_MODEL'
    

  hyperbolicEnv:
    Type: 'String'
    Description: 'Parameter for HYPERBOLIC_ENV'
    

  hyperbolicGranularLog:
    Type: 'String'
    Description: 'Parameter for HYPERBOLIC_GRANULAR_LOG'
    Default: 'false'

  hyperbolicSpash:
    Type: 'String'
    Description: 'Parameter for HYPERBOLIC_SPASH'
    Default: 'false'

  hyperbolicLogLevel:
    Type: 'String'
    Description: 'Parameter for HYPERBOLIC_LOG_LEVEL'
    

  inferaModel:
    Type: 'String'
    Description: 'Parameter for INFERA_MODEL'
    

  inferaServerUrl:
    Type: 'String'
    Description: 'Parameter for INFERA_SERVER_URL'
    

  smallInferaModel:
    Type: 'String'
    Description: 'Parameter for SMALL_INFERA_MODEL'
    

  mediumInferaModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_INFERA_MODEL'
    

  largeInferaModel:
    Type: 'String'
    Description: 'Parameter for LARGE_INFERA_MODEL'
    

  smallVeniceModel:
    Type: 'String'
    Description: 'Parameter for SMALL_VENICE_MODEL'
    

  mediumVeniceModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_VENICE_MODEL'
    

  largeVeniceModel:
    Type: 'String'
    Description: 'Parameter for LARGE_VENICE_MODEL'
    

  imageVeniceModel:
    Type: 'String'
    Description: 'Parameter for IMAGE_VENICE_MODEL'
    

  smallNineteenAiModel:
    Type: 'String'
    Description: 'Parameter for SMALL_NINETEEN_AI_MODEL'
    

  mediumNineteenAiModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_NINETEEN_AI_MODEL'
    

  largeNineteenAiModel:
    Type: 'String'
    Description: 'Parameter for LARGE_NINETEEN_AI_MODEL'
    

  imageNineteenAiMode:
    Type: 'String'
    Description: 'Parameter for IMAGE_NINETEEN_AI_MODE'
    

  smallAkashChatApiModel:
    Type: 'String'
    Description: 'Parameter for SMALL_AKASH_CHAT_API_MODEL'
    

  mediumAkashChatApiModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_AKASH_CHAT_API_MODEL'
    

  largeAkashChatApiModel:
    Type: 'String'
    Description: 'Parameter for LARGE_AKASH_CHAT_API_MODEL'
    

  imageLivepeerModel:
    Type: 'String'
    Description: 'Parameter for IMAGE_LIVEPEER_MODEL'
    

  smallLivepeerModel:
    Type: 'String'
    Description: 'Parameter for SMALL_LIVEPEER_MODEL'
    

  mediumLivepeerModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_LIVEPEER_MODEL'
    

  largeLivepeerModel:
    Type: 'String'
    Description: 'Parameter for LARGE_LIVEPEER_MODEL'
    

  elevenlabsModelId:
    Type: 'String'
    Description: 'Parameter for ELEVENLABS_MODEL_ID'
    

  elevenlabsVoiceId:
    Type: 'String'
    Description: 'Parameter for ELEVENLABS_VOICE_ID'
    

  elevenlabsVoiceStability:
    Type: 'Number'
    Description: 'Parameter for ELEVENLABS_VOICE_STABILITY'
    

  elevenlabsVoiceSimilarityBoost:
    Type: 'Number'
    Description: 'Parameter for ELEVENLABS_VOICE_SIMILARITY_BOOST'
    

  elevenlabsVoiceStyle:
    Type: 'Number'
    Description: 'Parameter for ELEVENLABS_VOICE_STYLE'
    

  elevenlabsVoiceUseSpeakerBoost:
    Type: 'String'
    Description: 'Parameter for ELEVENLABS_VOICE_USE_SPEAKER_BOOST'
    Default: 'false'

  elevenlabsOptimizeStreamingLatency:
    Type: 'Number'
    Description: 'Parameter for ELEVENLABS_OPTIMIZE_STREAMING_LATENCY'
    

  elevenlabsOutputFormat:
    Type: 'String'
    Description: 'Parameter for ELEVENLABS_OUTPUT_FORMAT'
    

  openrouterModel:
    Type: 'String'
    Description: 'Parameter for OPENROUTER_MODEL'
    

  smallOpenrouterModel:
    Type: 'String'
    Description: 'Parameter for SMALL_OPENROUTER_MODEL'
    

  mediumOpenrouterModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_OPENROUTER_MODEL'
    

  largeOpenrouterModel:
    Type: 'String'
    Description: 'Parameter for LARGE_OPENROUTER_MODEL'
    

  redpillModel:
    Type: 'String'
    Description: 'Parameter for REDPILL_MODEL'
    

  smallRedpillModel:
    Type: 'String'
    Description: 'Parameter for SMALL_REDPILL_MODEL'
    

  mediumRedpillModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_REDPILL_MODEL'
    

  largeRedpillModel:
    Type: 'String'
    Description: 'Parameter for LARGE_REDPILL_MODEL'
    

  smallGrokModel:
    Type: 'String'
    Description: 'Parameter for SMALL_GROK_MODEL'
    

  mediumGrokModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_GROK_MODEL'
    

  largeGrokModel:
    Type: 'String'
    Description: 'Parameter for LARGE_GROK_MODEL'
    

  embeddingGrokModel:
    Type: 'String'
    Description: 'Parameter for EMBEDDING_GROK_MODEL'
    

  ollamaModel:
    Type: 'String'
    Description: 'Parameter for OLLAMA_MODEL'
    

  useOllamaEmbedding:
    Type: 'String'
    Description: 'Parameter for USE_OLLAMA_EMBEDDING'
    Default: 'false'

  ollamaEmbeddingModel:
    Type: 'String'
    Description: 'Parameter for OLLAMA_EMBEDDING_MODEL'
    

  smallOllamaModel:
    Type: 'String'
    Description: 'Parameter for SMALL_OLLAMA_MODEL'
    

  mediumOllamaModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_OLLAMA_MODEL'
    

  largeOllamaModel:
    Type: 'String'
    Description: 'Parameter for LARGE_OLLAMA_MODEL'
    

  smallGoogleModel:
    Type: 'String'
    Description: 'Parameter for SMALL_GOOGLE_MODEL'
    

  mediumGoogleModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_GOOGLE_MODEL'
    

  largeGoogleModel:
    Type: 'String'
    Description: 'Parameter for LARGE_GOOGLE_MODEL'
    

  embeddingGoogleModel:
    Type: 'String'
    Description: 'Parameter for EMBEDDING_GOOGLE_MODEL'
    

  googleGenerativeAiApiKey:
    Type: 'String'
    Description: 'Parameter for GOOGLE_GENERATIVE_AI_API_KEY'
    

  smallMistralModel:
    Type: 'String'
    Description: 'Parameter for SMALL_MISTRAL_MODEL'
    

  mediumMistralModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_MISTRAL_MODEL'
    

  largeMistralModel:
    Type: 'String'
    Description: 'Parameter for LARGE_MISTRAL_MODEL'
    

  smallGroqModel:
    Type: 'String'
    Description: 'Parameter for SMALL_GROQ_MODEL'
    

  mediumGroqModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_GROQ_MODEL'
    

  largeGroqModel:
    Type: 'String'
    Description: 'Parameter for LARGE_GROQ_MODEL'
    

  embeddingGroqModel:
    Type: 'String'
    Description: 'Parameter for EMBEDDING_GROQ_MODEL'
    

  mediumNanogptModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_NANOGPT_MODEL'
    

  largeNanogptModel:
    Type: 'String'
    Description: 'Parameter for LARGE_NANOGPT_MODEL'
    

  nanogptApiKey:
    Type: 'String'
    Description: 'Parameter for NANOGPT_API_KEY'
    

  smallAnthropicModel:
    Type: 'String'
    Description: 'Parameter for SMALL_ANTHROPIC_MODEL'
    

  mediumAnthropicModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_ANTHROPIC_MODEL'
    

  largeAnthropicModel:
    Type: 'String'
    Description: 'Parameter for LARGE_ANTHROPIC_MODEL'
    

  smallHeuristModel:
    Type: 'String'
    Description: 'Parameter for SMALL_HEURIST_MODEL'
    

  mediumHeuristModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_HEURIST_MODEL'
    

  largeHeuristModel:
    Type: 'String'
    Description: 'Parameter for LARGE_HEURIST_MODEL'
    

  heuristImageModel:
    Type: 'String'
    Description: 'Parameter for HEURIST_IMAGE_MODEL'
    

  heuristEmbeddingModel:
    Type: 'String'
    Description: 'Parameter for HEURIST_EMBEDDING_MODEL'
    

  useHeuristEmbedding:
    Type: 'String'
    Description: 'Parameter for USE_HEURIST_EMBEDDING'
    Default: 'false'

  gaianetServerUrl:
    Type: 'String'
    Description: 'Parameter for GAIANET_SERVER_URL'
    

  smallGaianetModel:
    Type: 'String'
    Description: 'Parameter for SMALL_GAIANET_MODEL'
    

  smallGaianetServerUrl:
    Type: 'String'
    Description: 'Parameter for SMALL_GAIANET_SERVER_URL'
    

  mediumGaianetModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_GAIANET_MODEL'
    

  mediumGaianetServerUrl:
    Type: 'String'
    Description: 'Parameter for MEDIUM_GAIANET_SERVER_URL'
    

  largeGaianetModel:
    Type: 'String'
    Description: 'Parameter for LARGE_GAIANET_MODEL'
    

  largeGaianetServerUrl:
    Type: 'String'
    Description: 'Parameter for LARGE_GAIANET_SERVER_URL'
    

  gaianetEmbeddingModel:
    Type: 'String'
    Description: 'Parameter for GAIANET_EMBEDDING_MODEL'
    

  useGaianetEmbedding:
    Type: 'String'
    Description: 'Parameter for USE_GAIANET_EMBEDDING'
    Default: 'false'

  volengineModel:
    Type: 'String'
    Description: 'Parameter for VOLENGINE_MODEL'
    

  smallVolengineModel:
    Type: 'String'
    Description: 'Parameter for SMALL_VOLENGINE_MODEL'
    

  mediumVolengineModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_VOLENGINE_MODEL'
    

  largeVolengineModel:
    Type: 'String'
    Description: 'Parameter for LARGE_VOLENGINE_MODEL'
    

  volengineEmbeddingModel:
    Type: 'String'
    Description: 'Parameter for VOLENGINE_EMBEDDING_MODEL'
    

  deepseekApiUrl:
    Type: 'String'
    Description: 'Parameter for DEEPSEEK_API_URL'
    

  smallDeepseekModel:
    Type: 'String'
    Description: 'Parameter for SMALL_DEEPSEEK_MODEL'
    

  mediumDeepseekModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_DEEPSEEK_MODEL'
    

  largeDeepseekModel:
    Type: 'String'
    Description: 'Parameter for LARGE_DEEPSEEK_MODEL'
    

  falAiLoraPath:
    Type: 'String'
    Description: 'Parameter for FAL_AI_LORA_PATH'
    

  letzaiModels:
    Type: 'String'
    Description: 'Parameter for LETZAI_MODELS'
    

  smallGaladrielModel:
    Type: 'String'
    Description: 'Parameter for SMALL_GALADRIEL_MODEL'
    

  mediumGaladrielModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_GALADRIEL_MODEL'
    

  largeGaladrielModel:
    Type: 'String'
    Description: 'Parameter for LARGE_GALADRIEL_MODEL'
    

  galadrielFineTuneApiKey:
    Type: 'String'
    Description: 'Parameter for GALADRIEL_FINE_TUNE_API_KEY'
    

  lmstudioModel:
    Type: 'String'
    Description: 'Parameter for LMSTUDIO_MODEL'
    

  smallLmstudioModel:
    Type: 'String'
    Description: 'Parameter for SMALL_LMSTUDIO_MODEL'
    

  mediumLmstudioModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_LMSTUDIO_MODEL'
    

  largeLmstudioModel:
    Type: 'String'
    Description: 'Parameter for LARGE_LMSTUDIO_MODEL'
    

  secretAiUrl:
    Type: 'String'
    Description: 'Parameter for SECRET_AI_URL'
    

  smallSecretAiModel:
    Type: 'String'
    Description: 'Parameter for SMALL_SECRET_AI_MODEL'
    

  mediumSecretAiModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_SECRET_AI_MODEL'
    

  largeSecretAiModel:
    Type: 'String'
    Description: 'Parameter for LARGE_SECRET_AI_MODEL'
    

  nearaiApiKey:
    Type: 'String'
    Description: 'Parameter for NEARAI_API_KEY'
    

  nearaiModel:
    Type: 'String'
    Description: 'Parameter for NEARAI_MODEL'
    

  smallNearaiModel:
    Type: 'String'
    Description: 'Parameter for SMALL_NEARAI_MODEL'
    

  mediumNearaiModel:
    Type: 'String'
    Description: 'Parameter for MEDIUM_NEARAI_MODEL'
    

  largeNearaiModel:
    Type: 'String'
    Description: 'Parameter for LARGE_NEARAI_MODEL'
    

  imageNearaiModel:
    Type: 'String'
    Description: 'Parameter for IMAGE_NEARAI_MODEL'
    

  coingeckoProApiKey:
    Type: 'String'
    Description: 'Parameter for COINGECKO_PRO_API_KEY'
    

  evmProviderUrl:
    Type: 'String'
    Description: 'Parameter for EVM_PROVIDER_URL'
    

  zilliqaProviderUrl:
    Type: 'String'
    Description: 'Parameter for ZILLIQA_PROVIDER_URL'
    

  avalanchePublicKey:
    Type: 'String'
    Description: 'Parameter for AVALANCHE_PUBLIC_KEY'
    

  solanaPublicKey:
    Type: 'String'
    Description: 'Parameter for SOLANA_PUBLIC_KEY'
    

  solanaCluster:
    Type: 'String'
    Description: 'Parameter for SOLANA_CLUSTER'
    

  solanaAdminPrivateKey:
    Type: 'String'
    Description: 'Parameter for SOLANA_ADMIN_PRIVATE_KEY'
    

  solanaAdminPublicKey:
    Type: 'String'
    Description: 'Parameter for SOLANA_ADMIN_PUBLIC_KEY'
    

  solanaVerifyToken:
    Type: 'String'
    Description: 'Parameter for SOLANA_VERIFY_TOKEN'
    

  solAddress:
    Type: 'String'
    Description: 'Parameter for SOL_ADDRESS'
    

  slippage:
    Type: 'Number'
    Description: 'Parameter for SLIPPAGE'
    

  baseMint:
    Type: 'String'
    Description: 'Parameter for BASE_MINT'
    

  solanaRpcUrl:
    Type: 'String'
    Description: 'Parameter for SOLANA_RPC_URL'
    

  heliusApiKey:
    Type: 'String'
    Description: 'Parameter for HELIUS_API_KEY'
    

  injectivePublicKey:
    Type: 'String'
    Description: 'Parameter for INJECTIVE_PUBLIC_KEY'
    

  injectiveNetwork:
    Type: 'String'
    Description: 'Parameter for INJECTIVE_NETWORK'
    

  abstractPrivateKey:
    Type: 'String'
    Description: 'Parameter for ABSTRACT_PRIVATE_KEY'
    

  abstractRpcUrl:
    Type: 'String'
    Description: 'Parameter for ABSTRACT_RPC_URL'
    

  starknetPrivateKey:
    Type: 'String'
    Description: 'Parameter for STARKNET_PRIVATE_KEY'
    

  starknetRpcUrl:
    Type: 'String'
    Description: 'Parameter for STARKNET_RPC_URL'
    

  lensPrivateKey:
    Type: 'String'
    Description: 'Parameter for LENS_PRIVATE_KEY'
    

  formTestnet:
    Type: 'String'
    Description: 'Parameter for FORM_TESTNET'
    Default: 'false'

  coinbaseApiKey:
    Type: 'String'
    Description: 'Parameter for COINBASE_API_KEY'
    

  coinbasePrivateKey:
    Type: 'String'
    Description: 'Parameter for COINBASE_PRIVATE_KEY'
    

  coinbaseGeneratedWalletId:
    Type: 'String'
    Description: 'Parameter for COINBASE_GENERATED_WALLET_ID'
    

  coinbaseGeneratedWalletHexSeed:
    Type: 'String'
    Description: 'Parameter for COINBASE_GENERATED_WALLET_HEX_SEED'
    

  coinbaseNotificationUri:
    Type: 'String'
    Description: 'Parameter for COINBASE_NOTIFICATION_URI'
    

  cdpApiKeyPrivateKey:
    Type: 'String'
    Description: 'Parameter for CDP_API_KEY_PRIVATE_KEY'
    

  cdpAgentKitNetwork:
    Type: 'String'
    Description: 'Parameter for CDP_AGENT_KIT_NETWORK'
    

  charityAddressBase:
    Type: 'String'
    Description: 'Parameter for CHARITY_ADDRESS_BASE'
    

  charityAddressSol:
    Type: 'String'
    Description: 'Parameter for CHARITY_ADDRESS_SOL'
    

  charityAddressEth:
    Type: 'String'
    Description: 'Parameter for CHARITY_ADDRESS_ETH'
    

  charityAddressArb:
    Type: 'String'
    Description: 'Parameter for CHARITY_ADDRESS_ARB'
    

  charityAddressPol:
    Type: 'String'
    Description: 'Parameter for CHARITY_ADDRESS_POL'
    

  confluxCoreSpaceRpcUrl:
    Type: 'String'
    Description: 'Parameter for CONFLUX_CORE_SPACE_RPC_URL'
    

  confluxEspacePrivateKey:
    Type: 'String'
    Description: 'Parameter for CONFLUX_ESPACE_PRIVATE_KEY'
    

  confluxEspaceRpcUrl:
    Type: 'String'
    Description: 'Parameter for CONFLUX_ESPACE_RPC_URL'
    

  confluxMemeContractAddress:
    Type: 'String'
    Description: 'Parameter for CONFLUX_MEME_CONTRACT_ADDRESS'
    

  mindColdWalletAddress:
    Type: 'String'
    Description: 'Parameter for MIND_COLD_WALLET_ADDRESS'
    

  zerogEvmRpc:
    Type: 'String'
    Description: 'Parameter for ZEROG_EVM_RPC'
    

  zerogPrivateKey:
    Type: 'String'
    Description: 'Parameter for ZEROG_PRIVATE_KEY'
    

  zerogFlowAddress:
    Type: 'String'
    Description: 'Parameter for ZEROG_FLOW_ADDRESS'
    

  iqsolrpc:
    Type: 'String'
    Description: 'Parameter for IQSOlRPC'
    

  squidIntegratorId:
    Type: 'String'
    Description: 'Parameter for SQUID_INTEGRATOR_ID'
    

  squidEvmAddress:
    Type: 'String'
    Description: 'Parameter for SQUID_EVM_ADDRESS'
    

  squidEvmPrivateKey:
    Type: 'String'
    Description: 'Parameter for SQUID_EVM_PRIVATE_KEY'
    

  squidApiThrottleInterval:
    Type: 'Number'
    Description: 'Parameter for SQUID_API_THROTTLE_INTERVAL'
    

  walletSecretSalt:
    Type: 'String'
    Description: 'Parameter for WALLET_SECRET_SALT'
    

  teeLogDbPath:
    Type: 'String'
    Description: 'Parameter for TEE_LOG_DB_PATH'
    

  vlog:
    Type: 'String'
    Description: 'Parameter for VLOG'
    Default: 'false'

  enableTeeLog:
    Type: 'String'
    Description: 'Parameter for ENABLE_TEE_LOG'
    Default: 'false'

  flowPrivateKey:
    Type: 'String'
    Description: 'Parameter for FLOW_PRIVATE_KEY'
    

  flowNetwork:
    Type: 'String'
    Description: 'Parameter for FLOW_NETWORK'
    

  flowEndpointUrl:
    Type: 'String'
    Description: 'Parameter for FLOW_ENDPOINT_URL'
    

  internetComputerAddress:
    Type: 'String'
    Description: 'Parameter for INTERNET_COMPUTER_ADDRESS'
    

  aptosNetwork:
    Type: 'String'
    Description: 'Parameter for APTOS_NETWORK'
    

  mvxNetwork:
    Type: 'String'
    Description: 'Parameter for MVX_NETWORK'
    

  accessTokenManagementTo:
    Type: 'String'
    Description: 'Parameter for ACCESS_TOKEN_MANAGEMENT_TO'
    

  nearWalletPublicKey:
    Type: 'String'
    Description: 'Parameter for NEAR_WALLET_PUBLIC_KEY'
    

  nearAddress:
    Type: 'String'
    Description: 'Parameter for NEAR_ADDRESS'
    

  nearSlippage:
    Type: 'Number'
    Description: 'Parameter for NEAR_SLIPPAGE'
    

  nearRpcUrl:
    Type: 'String'
    Description: 'Parameter for NEAR_RPC_URL'
    

  nearNetwork:
    Type: 'String'
    Description: 'Parameter for NEAR_NETWORK'
    

  zksyncPrivateKey:
    Type: 'String'
    Description: 'Parameter for ZKSYNC_PRIVATE_KEY'
    

  availSeed:
    Type: 'String'
    Description: 'Parameter for AVAIL_SEED'
    

  availAppId:
    Type: 'Number'
    Description: 'Parameter for AVAIL_APP_ID'
    

  availRpcUrl:
    Type: 'String'
    Description: 'Parameter for AVAIL_RPC_URL'
    

  teeMarlinAttestationEndpoint:
    Type: 'String'
    Description: 'Parameter for TEE_MARLIN_ATTESTATION_ENDPOINT'
    

  tonRpcUrl:
    Type: 'String'
    Description: 'Parameter for TON_RPC_URL'
    

  tonRpcApiKey:
    Type: 'String'
    Description: 'Parameter for TON_RPC_API_KEY'
    

  tonNftImagesFolder:
    Type: 'String'
    Description: 'Parameter for TON_NFT_IMAGES_FOLDER'
    

  tonNftMetadataFolder:
    Type: 'String'
    Description: 'Parameter for TON_NFT_METADATA_FOLDER'
    

  pinataApiKey:
    Type: 'String'
    Description: 'Parameter for PINATA_API_KEY'
    

  pinataApiSecret:
    Type: 'String'
    Description: 'Parameter for PINATA_API_SECRET'
    

  suiNetwork:
    Type: 'String'
    Description: 'Parameter for SUI_NETWORK'
    

  minaNetwork:
    Type: 'String'
    Description: 'Parameter for MINA_NETWORK'
    

  storyApiBaseUrl:
    Type: 'String'
    Description: 'Parameter for STORY_API_BASE_URL'
    

  storyApiKey:
    Type: 'String'
    Description: 'Parameter for STORY_API_KEY'
    

  pinataJwt:
    Type: 'String'
    Description: 'Parameter for PINATA_JWT'
    

  cosmosAvailableChains:
    Type: 'String'
    Description: 'Parameter for COSMOS_AVAILABLE_CHAINS'
    

  cronoszkevmPrivateKey:
    Type: 'String'
    Description: 'Parameter for CRONOSZKEVM_PRIVATE_KEY'
    

  spheronProviderProxyUrl:
    Type: 'String'
    Description: 'Parameter for SPHERON_PROVIDER_PROXY_URL'
    

  spheronWalletAddress:
    Type: 'String'
    Description: 'Parameter for SPHERON_WALLET_ADDRESS'
    

  bnbPublicKey:
    Type: 'String'
    Description: 'Parameter for BNB_PUBLIC_KEY'
    

  bscProviderUrl:
    Type: 'String'
    Description: 'Parameter for BSC_PROVIDER_URL'
    

  opbnbProviderUrl:
    Type: 'String'
    Description: 'Parameter for OPBNB_PROVIDER_URL'
    

  bitmindApiToken:
    Type: 'String'
    Description: 'Parameter for BITMIND_API_TOKEN'
    

  passportScorer:
    Type: 'String'
    Description: 'Parameter for PASSPORT_SCORER'
    

  echochambersApiKey:
    Type: 'String'
    Description: 'Parameter for ECHOCHAMBERS_API_KEY'
    

  echochambersUsername:
    Type: 'String'
    Description: 'Parameter for ECHOCHAMBERS_USERNAME'
    

  echochambersRooms:
    Type: 'String'
    Description: 'Parameter for ECHOCHAMBERS_ROOMS'
    

  echochambersPollInterval:
    Type: 'Number'
    Description: 'Parameter for ECHOCHAMBERS_POLL_INTERVAL'
    

  echochambersMaxMessages:
    Type: 'Number'
    Description: 'Parameter for ECHOCHAMBERS_MAX_MESSAGES'
    

  echochambersConversationStarterInterval:
    Type: 'Number'
    Description: 'Parameter for ECHOCHAMBERS_CONVERSATION_STARTER_INTERVAL'
    

  echochambersQuietPeriod:
    Type: 'Number'
    Description: 'Parameter for ECHOCHAMBERS_QUIET_PERIOD'
    

  alloraChainSlug:
    Type: 'String'
    Description: 'Parameter for ALLORA_CHAIN_SLUG'
    

  opacityCloudflareName:
    Type: 'String'
    Description: 'Parameter for OPACITY_CLOUDFLARE_NAME'
    

  opacityProverUrl:
    Type: 'String'
    Description: 'Parameter for OPACITY_PROVER_URL'
    

  devaApiBaseUrl:
    Type: 'String'
    Description: 'Parameter for DEVA_API_BASE_URL'
    

  qdrantKey:
    Type: 'String'
    Description: 'Parameter for QDRANT_KEY'
    

  qdrantPort:
    Type: 'Number'
    Description: 'Parameter for QDRANT_PORT'
    

  qdrantVectorSize:
    Type: 'Number'
    Description: 'Parameter for QDRANT_VECTOR_SIZE'
    

  autonomeRpc:
    Type: 'String'
    Description: 'Parameter for AUTONOME_RPC'
    

  akashNet:
    Type: 'String'
    Description: 'Parameter for AKASH_NET'
    

  rpcEndpoint:
    Type: 'String'
    Description: 'Parameter for RPC_ENDPOINT'
    

  akashGasPrices:
    Type: 'String'
    Description: 'Parameter for AKASH_GAS_PRICES'
    

  akashGasAdjustment:
    Type: 'Number'
    Description: 'Parameter for AKASH_GAS_ADJUSTMENT'
    

  akashKeyringBackend:
    Type: 'String'
    Description: 'Parameter for AKASH_KEYRING_BACKEND'
    

  akashFrom:
    Type: 'String'
    Description: 'Parameter for AKASH_FROM'
    

  akashFees:
    Type: 'String'
    Description: 'Parameter for AKASH_FEES'
    

  akashDeposit:
    Type: 'String'
    Description: 'Parameter for AKASH_DEPOSIT'
    

  akashMnemonic:
    Type: 'String'
    Description: 'Parameter for AKASH_MNEMONIC'
    

  akashWalletAddress:
    Type: 'String'
    Description: 'Parameter for AKASH_WALLET_ADDRESS'
    

  akashPricingApiUrl:
    Type: 'String'
    Description: 'Parameter for AKASH_PRICING_API_URL'
    

  akashDefaultCpu:
    Type: 'Number'
    Description: 'Parameter for AKASH_DEFAULT_CPU'
    

  akashDefaultMemory:
    Type: 'Number'
    Description: 'Parameter for AKASH_DEFAULT_MEMORY'
    

  akashDefaultStorage:
    Type: 'Number'
    Description: 'Parameter for AKASH_DEFAULT_STORAGE'
    

  akashSdl:
    Type: 'String'
    Description: 'Parameter for AKASH_SDL'
    

  akashCloseDep:
    Type: 'String'
    Description: 'Parameter for AKASH_CLOSE_DEP'
    

  akashCloseDseq:
    Type: 'String'
    Description: 'Parameter for AKASH_CLOSE_DSEQ'
    

  akashProviderInfo:
    Type: 'String'
    Description: 'Parameter for AKASH_PROVIDER_INFO'
    

  akashDepStatus:
    Type: 'String'
    Description: 'Parameter for AKASH_DEP_STATUS'
    

  akashDepDseq:
    Type: 'String'
    Description: 'Parameter for AKASH_DEP_DSEQ'
    

  akashGasOperation:
    Type: 'String'
    Description: 'Parameter for AKASH_GAS_OPERATION'
    

  akashGasDseq:
    Type: 'String'
    Description: 'Parameter for AKASH_GAS_DSEQ'
    

  akashManifestMode:
    Type: 'String'
    Description: 'Parameter for AKASH_MANIFEST_MODE'
    

  akashManifestPath:
    Type: 'String'
    Description: 'Parameter for AKASH_MANIFEST_PATH'
    

  akashManifestValidationLevel:
    Type: 'String'
    Description: 'Parameter for AKASH_MANIFEST_VALIDATION_LEVEL'
    

  quaiRpcUrl:
    Type: 'String'
    Description: 'Parameter for QUAI_RPC_URL'
    

  alchemyHttpTransportUrl:
    Type: 'String'
    Description: 'Parameter for ALCHEMY_HTTP_TRANSPORT_URL'
    

  pythMainnetHermesUrl:
    Type: 'String'
    Description: 'Parameter for PYTH_MAINNET_HERMES_URL'
    

  pythMainnetWssUrl:
    Type: 'String'
    Description: 'Parameter for PYTH_MAINNET_WSS_URL'
    

  pythMainnetPythnetUrl:
    Type: 'String'
    Description: 'Parameter for PYTH_MAINNET_PYTHNET_URL'
    

  pythMainnetContractRegistry:
    Type: 'String'
    Description: 'Parameter for PYTH_MAINNET_CONTRACT_REGISTRY'
    

  pythMainnetProgramKey:
    Type: 'String'
    Description: 'Parameter for PYTH_MAINNET_PROGRAM_KEY'
    

  pythTestnetHermesUrl:
    Type: 'String'
    Description: 'Parameter for PYTH_TESTNET_HERMES_URL'
    

  pythTestnetWssUrl:
    Type: 'String'
    Description: 'Parameter for PYTH_TESTNET_WSS_URL'
    

  pythTestnetPythnetUrl:
    Type: 'String'
    Description: 'Parameter for PYTH_TESTNET_PYTHNET_URL'
    

  pythTestnetContractRegistry:
    Type: 'String'
    Description: 'Parameter for PYTH_TESTNET_CONTRACT_REGISTRY'
    

  pythTestnetProgramKey:
    Type: 'String'
    Description: 'Parameter for PYTH_TESTNET_PROGRAM_KEY'
    

  pythMaxRetries:
    Type: 'Number'
    Description: 'Parameter for PYTH_MAX_RETRIES'
    

  pythRetryDelay:
    Type: 'Number'
    Description: 'Parameter for PYTH_RETRY_DELAY'
    

  pythTimeout:
    Type: 'Number'
    Description: 'Parameter for PYTH_TIMEOUT'
    

  pythGranularLog:
    Type: 'String'
    Description: 'Parameter for PYTH_GRANULAR_LOG'
    Default: 'false'

  pythLogLevel:
    Type: 'String'
    Description: 'Parameter for PYTH_LOG_LEVEL'
    

  runtimeCheckMode:
    Type: 'String'
    Description: 'Parameter for RUNTIME_CHECK_MODE'
    Default: 'false'

  pythEnablePriceStreaming:
    Type: 'String'
    Description: 'Parameter for PYTH_ENABLE_PRICE_STREAMING'
    Default: 'false'

  pythMaxPriceStreams:
    Type: 'Number'
    Description: 'Parameter for PYTH_MAX_PRICE_STREAMS'
    

  pythTestId01:
    Type: 'String'
    Description: 'Parameter for PYTH_TEST_ID01'
    

  pythTestId02:
    Type: 'String'
    Description: 'Parameter for PYTH_TEST_ID02'
    

  routerNitroEvmPrivateKey:
    Type: 'String'
    Description: 'Parameter for ROUTER_NITRO_EVM_PRIVATE_KEY'
    

  dkgHostname:
    Type: 'String'
    Description: 'Parameter for DKG_HOSTNAME'
    

  dkgPort:
    Type: 'String'
    Description: 'Parameter for DKG_PORT'
    

  dkgPublicKey:
    Type: 'String'
    Description: 'Parameter for DKG_PUBLIC_KEY'
    

  dkgPrivateKey:
    Type: 'String'
    Description: 'Parameter for DKG_PRIVATE_KEY'
    

  dkgBlockchainName:
    Type: 'String'
    Description: 'Parameter for DKG_BLOCKCHAIN_NAME'
    

  initiaNodeUrl:
    Type: 'String'
    Description: 'Parameter for INITIA_NODE_URL'
    

  initiaChainId:
    Type: 'String'
    Description: 'Parameter for INITIA_CHAIN_ID'
    

  nvidiaNimSpash:
    Type: 'String'
    Description: 'Parameter for NVIDIA_NIM_SPASH'
    Default: 'false'

  nvidiaNimApiKey:
    Type: 'String'
    Description: 'Parameter for NVIDIA_NIM_API_KEY'
    

  nvidiaNgcApiKey:
    Type: 'String'
    Description: 'Parameter for NVIDIA_NGC_API_KEY'
    

  nvidiaNimMaxRetries:
    Type: 'Number'
    Description: 'Parameter for NVIDIA_NIM_MAX_RETRIES'
    

  nvidiaNimRetryDelay:
    Type: 'Number'
    Description: 'Parameter for NVIDIA_NIM_RETRY_DELAY'
    

  nvidiaNimTimeout:
    Type: 'Number'
    Description: 'Parameter for NVIDIA_NIM_TIMEOUT'
    

  nvidiaGranularLog:
    Type: 'String'
    Description: 'Parameter for NVIDIA_GRANULAR_LOG'
    Default: 'false'

  nvidiaLogLevel:
    Type: 'String'
    Description: 'Parameter for NVIDIA_LOG_LEVEL'
    

  nvidiaOfftopicSystem:
    Type: 'String'
    Description: 'Parameter for NVIDIA_OFFTOPIC_SYSTEM'
    

  nvidiaOfftopicUser:
    Type: 'String'
    Description: 'Parameter for NVIDIA_OFFTOPIC_USER'
    

  nvidiaNimBaseVisionUrl:
    Type: 'String'
    Description: 'Parameter for NVIDIA_NIM_BASE_VISION_URL'
    

  nvidiaCosmosModel:
    Type: 'String'
    Description: 'Parameter for NVIDIA_COSMOS_MODEL'
    

  nvidiaCosmosInvokeUrl:
    Type: 'String'
    Description: 'Parameter for NVIDIA_COSMOS_INVOKE_URL'
    

  nvidiaCosmosAssetUrl:
    Type: 'String'
    Description: 'Parameter for NVIDIA_COSMOS_ASSET_URL'
    

  nvidiaCosmosMaxTokens:
    Type: 'Number'
    Description: 'Parameter for NVIDIA_COSMOS_MAX_TOKENS'
    

  emailOutgoingHost:
    Type: 'String'
    Description: 'Parameter for EMAIL_OUTGOING_HOST'
    

  emailOutgoingPort:
    Type: 'Number'
    Description: 'Parameter for EMAIL_OUTGOING_PORT'
    

  emailOutgoingUser:
    Type: 'String'
    Description: 'Parameter for EMAIL_OUTGOING_USER'
    

  emailOutgoingPass:
    Type: 'String'
    Description: 'Parameter for EMAIL_OUTGOING_PASS'
    

  emailIncomingService:
    Type: 'String'
    Description: 'Parameter for EMAIL_INCOMING_SERVICE'
    

  emailIncomingHost:
    Type: 'String'
    Description: 'Parameter for EMAIL_INCOMING_HOST'
    

  emailIncomingPort:
    Type: 'Number'
    Description: 'Parameter for EMAIL_INCOMING_PORT'
    

  emailIncomingUser:
    Type: 'String'
    Description: 'Parameter for EMAIL_INCOMING_USER'
    

  emailIncomingPass:
    Type: 'String'
    Description: 'Parameter for EMAIL_INCOMING_PASS'
    

  seiNetwork:
    Type: 'String'
    Description: 'Parameter for SEI_NETWORK'
    

  seiRpcUrl:
    Type: 'String'
    Description: 'Parameter for SEI_RPC_URL'
    

  omniflixMnemonic:
    Type: 'String'
    Description: 'Parameter for OMNIFLIX_MNEMONIC'
    

  omniflixRpcEndpoint:
    Type: 'String'
    Description: 'Parameter for OMNIFLIX_RPC_ENDPOINT'
    

  omniflixPrivateKey:
    Type: 'String'
    Description: 'Parameter for OMNIFLIX_PRIVATE_KEY'
    

  imgflipPassword:
    Type: 'String'
    Description: 'Parameter for IMGFLIP_PASSWORD'
    

  hyperliquidTestnet:
    Type: 'String'
    Description: 'Parameter for HYPERLIQUID_TESTNET'
    Default: 'false'

  evmRpcUrl:
    Type: 'String'
    Description: 'Parameter for EVM_RPC_URL'
    

  ethstorageAddress:
    Type: 'String'
    Description: 'Parameter for ETHSTORAGE_ADDRESS'
    

  ethstorageRpcUrl:
    Type: 'String'
    Description: 'Parameter for ETHSTORAGE_RPC_URL'
    

  defaultToEmail:
    Type: 'String'
    Description: 'Parameter for DEFAULT_TO_EMAIL'
    

  defaultFromEmail:
    Type: 'String'
    Description: 'Parameter for DEFAULT_FROM_EMAIL'
    

  emailAutomationEnabled:
    Type: 'String'
    Description: 'Parameter for EMAIL_AUTOMATION_ENABLED'
    Default: 'false'

  emailEvaluationPrompt:
    Type: 'String'
    Description: 'Parameter for EMAIL_EVALUATION_PROMPT'
    

  ankrWallet:
    Type: 'String'
    Description: 'Parameter for ANKR_WALLET'
    

  ankrMaxRetries:
    Type: 'Number'
    Description: 'Parameter for ANKR_MAX_RETRIES'
    

  ankrRetryDelay:
    Type: 'Number'
    Description: 'Parameter for ANKR_RETRY_DELAY'
    

  ankrTimeout:
    Type: 'Number'
    Description: 'Parameter for ANKR_TIMEOUT'
    

  ankrGranularLog:
    Type: 'String'
    Description: 'Parameter for ANKR_GRANULAR_LOG'
    Default: 'false'

  ankrLogLevel:
    Type: 'String'
    Description: 'Parameter for ANKR_LOG_LEVEL'
    

  ankrRuntimeCheckMode:
    Type: 'String'
    Description: 'Parameter for ANKR_RUNTIME_CHECK_MODE'
    Default: 'false'

  ankrSpash:
    Type: 'String'
    Description: 'Parameter for ANKR_SPASH'
    Default: 'false'

  dcapMode:
    Type: 'String'
    Description: 'Parameter for DCAP_MODE'
    

  btcPrivateKeyWif:
    Type: 'String'
    Description: 'Parameter for BTC_PRIVATE_KEY_WIF'
    

  btcAddress:
    Type: 'String'
    Description: 'Parameter for BTC_ADDRESS'
    

  btcMintCap:
    Type: 'Number'
    Description: 'Parameter for BTC_MINT_CAP'
    

  btcMintDeadline:
    Type: 'Number'
    Description: 'Parameter for BTC_MINT_DEADLINE'
    

  btcFundraisingCap:
    Type: 'Number'
    Description: 'Parameter for BTC_FUNDRAISING_CAP'
    

  trikonInitialBalance:
    Type: 'String'
    Description: 'Parameter for TRIKON_INITIAL_BALANCE'
    

  arbitrageEvmProviderUrl:
    Type: 'String'
    Description: 'Parameter for ARBITRAGE_EVM_PROVIDER_URL'
    

  arbitrageEvmPrivateKey:
    Type: 'String'
    Description: 'Parameter for ARBITRAGE_EVM_PRIVATE_KEY'
    

  flashbotsRelaySigningKey:
    Type: 'String'
    Description: 'Parameter for FLASHBOTS_RELAY_SIGNING_KEY'
    

  bundleExecutorAddress:
    Type: 'String'
    Description: 'Parameter for BUNDLE_EXECUTOR_ADDRESS'
    

  deskExchangeNetwork:
    Type: 'String'
    Description: 'Parameter for DESK_EXCHANGE_NETWORK'
    

  compassArbitrumRpcUrl:
    Type: 'String'
    Description: 'Parameter for COMPASS_ARBITRUM_RPC_URL'
    

  compassEthereumRpcUrl:
    Type: 'String'
    Description: 'Parameter for COMPASS_ETHEREUM_RPC_URL'
    

  compassBaseRpcUrl:
    Type: 'String'
    Description: 'Parameter for COMPASS_BASE_RPC_URL'
    

  dataAuthToken:
    Type: 'String'
    Description: 'Parameter for DATA_AUTH_TOKEN'
    

  nknClientId:
    Type: 'String'
    Description: 'Parameter for NKN_CLIENT_ID'
    


Conditions:

  HasCacheDir: !Not [!Equals [!Ref cacheDir, ""]]
  HasRedisUrl: !Not [!Equals [!Ref redisUrl, ""]]
  HasServerUrl: !Not [!Equals [!Ref serverUrl, ""]]
  HasServerPort: !Not [!Equals [!Ref serverPort, ""]]
  HasRemoteCharacterUrls: !Not [!Equals [!Ref remoteCharacterUrls, ""]]
  HasUseCharacterStorage: !Not [!Equals [!Ref useCharacterStorage, ""]]
  HasDefaultLogLevel: !Not [!Equals [!Ref defaultLogLevel, ""]]
  HasLogJsonFormat: !Not [!Equals [!Ref logJsonFormat, ""]]
  HasExpressMaxPayload: !Not [!Equals [!Ref expressMaxPayload, ""]]
  HasTranscriptionProvider: !Not [!Equals [!Ref transcriptionProvider, ""]]
  HasWalletPrivateKey: !Not [!Equals [!Ref walletPrivateKey, ""]]
  HasWalletPublicKey: !Not [!Equals [!Ref walletPublicKey, ""]]
  HasTokenizer: !Not [!Equals [!Ref tokenizer, ""]]
  HasCloudflare: !Not [!Equals [!Ref cloudflare, ""]]
  HasAws: !Not [!Equals [!Ref aws, ""]]
  HasVerifiableInference: !Not [!Equals [!Ref verifiableInference, ""]]
  HasSupabaseAnonKey: !Not [!Equals [!Ref supabaseAnonKey, ""]]
  HasMongodbDatabase: !Not [!Equals [!Ref mongodbDatabase, ""]]
  HasDiscordApiToken: !Not [!Equals [!Ref discordApiToken, ""]]
  HasDiscordVoiceChannelId: !Not [!Equals [!Ref discordVoiceChannelId, ""]]
  HasFarcasterNeynarApiKey: !Not [!Equals [!Ref farcasterNeynarApiKey, ""]]
  HasFarcasterNeynarSignerUuid: !Not [!Equals [!Ref farcasterNeynarSignerUuid, ""]]
  HasFarcasterDryRun: !Not [!Equals [!Ref farcasterDryRun, ""]]
  HasFarcasterPollInterval: !Not [!Equals [!Ref farcasterPollInterval, ""]]
  HasTelegramAccountPhone: !Not [!Equals [!Ref telegramAccountPhone, ""]]
  HasTelegramAccountAppId: !Not [!Equals [!Ref telegramAccountAppId, ""]]
  HasTelegramAccountAppHash: !Not [!Equals [!Ref telegramAccountAppHash, ""]]
  HasTelegramAccountDeviceModel: !Not [!Equals [!Ref telegramAccountDeviceModel, ""]]
  HasTelegramAccountSystemVersion: !Not [!Equals [!Ref telegramAccountSystemVersion, ""]]
  HasTwitterUsername: !Not [!Equals [!Ref twitterUsername, ""]]
  HasTwitterPassword: !Not [!Equals [!Ref twitterPassword, ""]]
  HasTwitterEmail: !Not [!Equals [!Ref twitterEmail, ""]]
  HasTwitter2faSecret: !Not [!Equals [!Ref twitter2faSecret, ""]]
  HasTwitterCookiesAuthToken: !Not [!Equals [!Ref twitterCookiesAuthToken, ""]]
  HasTwitterCookiesCt0: !Not [!Equals [!Ref twitterCookiesCt0, ""]]
  HasTwitterCookiesGuestId: !Not [!Equals [!Ref twitterCookiesGuestId, ""]]
  HasTwitterPollInterval: !Not [!Equals [!Ref twitterPollInterval, ""]]
  HasTwitterSearchEnable: !Not [!Equals [!Ref twitterSearchEnable, ""]]
  HasTwitterTargetUsers: !Not [!Equals [!Ref twitterTargetUsers, ""]]
  HasTwitterRetryLimit: !Not [!Equals [!Ref twitterRetryLimit, ""]]
  HasTwitterSpacesEnable: !Not [!Equals [!Ref twitterSpacesEnable, ""]]
  HasEnableTwitterPostGeneration: !Not [!Equals [!Ref enableTwitterPostGeneration, ""]]
  HasPostIntervalMin: !Not [!Equals [!Ref postIntervalMin, ""]]
  HasPostIntervalMax: !Not [!Equals [!Ref postIntervalMax, ""]]
  HasPostImmediately: !Not [!Equals [!Ref postImmediately, ""]]
  HasActionInterval: !Not [!Equals [!Ref actionInterval, ""]]
  HasEnableActionProcessing: !Not [!Equals [!Ref enableActionProcessing, ""]]
  HasMaxActionsProcessing: !Not [!Equals [!Ref maxActionsProcessing, ""]]
  HasActionTimelineType: !Not [!Equals [!Ref actionTimelineType, ""]]
  HasTwitterApprovalDiscordChannelId: !Not [!Equals [!Ref twitterApprovalDiscordChannelId, ""]]
  HasTwitterApprovalDiscordBotToken: !Not [!Equals [!Ref twitterApprovalDiscordBotToken, ""]]
  HasTwitterApprovalEnabled: !Not [!Equals [!Ref twitterApprovalEnabled, ""]]
  HasTwitterApprovalCheckInterval: !Not [!Equals [!Ref twitterApprovalCheckInterval, ""]]
  HasWhatsappPhoneNumberId: !Not [!Equals [!Ref whatsappPhoneNumberId, ""]]
  HasWhatsappBusinessAccountId: !Not [!Equals [!Ref whatsappBusinessAccountId, ""]]
  HasWhatsappWebhookVerifyToken: !Not [!Equals [!Ref whatsappWebhookVerifyToken, ""]]
  HasWhatsappApiVersion: !Not [!Equals [!Ref whatsappApiVersion, ""]]
  HasInstagramUsername: !Not [!Equals [!Ref instagramUsername, ""]]
  HasInstagramPassword: !Not [!Equals [!Ref instagramPassword, ""]]
  HasInstagramAppId: !Not [!Equals [!Ref instagramAppId, ""]]
  HasInstagramAppSecret: !Not [!Equals [!Ref instagramAppSecret, ""]]
  HasInstagramBusinessAccountId: !Not [!Equals [!Ref instagramBusinessAccountId, ""]]
  HasInstagramPostIntervalMin: !Not [!Equals [!Ref instagramPostIntervalMin, ""]]
  HasInstagramPostIntervalMax: !Not [!Equals [!Ref instagramPostIntervalMax, ""]]
  HasInstagramEnableActionProcessing: !Not [!Equals [!Ref instagramEnableActionProcessing, ""]]
  HasInstagramActionInterval: !Not [!Equals [!Ref instagramActionInterval, ""]]
  HasInstagramMaxActions: !Not [!Equals [!Ref instagramMaxActions, ""]]
  HasAlexaClientId: !Not [!Equals [!Ref alexaClientId, ""]]
  HasAlexaClientSecret: !Not [!Equals [!Ref alexaClientSecret, ""]]
  HasSimsaiAgentId: !Not [!Equals [!Ref simsaiAgentId, ""]]
  HasSimsaiUsername: !Not [!Equals [!Ref simsaiUsername, ""]]
  HasSimsaiDryRun: !Not [!Equals [!Ref simsaiDryRun, ""]]
  HasOpenaiApiUrl: !Not [!Equals [!Ref openaiApiUrl, ""]]
  HasSmallOpenaiModel: !Not [!Equals [!Ref smallOpenaiModel, ""]]
  HasMediumOpenaiModel: !Not [!Equals [!Ref mediumOpenaiModel, ""]]
  HasLargeOpenaiModel: !Not [!Equals [!Ref largeOpenaiModel, ""]]
  HasEmbeddingOpenaiModel: !Not [!Equals [!Ref embeddingOpenaiModel, ""]]
  HasImageOpenaiModel: !Not [!Equals [!Ref imageOpenaiModel, ""]]
  HasUseOpenaiEmbedding: !Not [!Equals [!Ref useOpenaiEmbedding, ""]]
  HasEnableOpenAiCommunityPlugin: !Not [!Equals [!Ref enableOpenAiCommunityPlugin, ""]]
  HasOpenaiDefaultModel: !Not [!Equals [!Ref openaiDefaultModel, ""]]
  HasOpenaiMaxTokens: !Not [!Equals [!Ref openaiMaxTokens, ""]]
  HasOpenaiTemperature: !Not [!Equals [!Ref openaiTemperature, ""]]
  HasAtomaApiUrl: !Not [!Equals [!Ref atomaApiUrl, ""]]
  HasSmallAtomaModel: !Not [!Equals [!Ref smallAtomaModel, ""]]
  HasMediumAtomaModel: !Not [!Equals [!Ref mediumAtomaModel, ""]]
  HasLargeAtomaModel: !Not [!Equals [!Ref largeAtomaModel, ""]]
  HasEternalaiModel: !Not [!Equals [!Ref eternalaiModel, ""]]
  HasEternalaiChainId: !Not [!Equals [!Ref eternalaiChainId, ""]]
  HasEternalaiRpcUrl: !Not [!Equals [!Ref eternalaiRpcUrl, ""]]
  HasEternalaiAgentContractAddress: !Not [!Equals [!Ref eternalaiAgentContractAddress, ""]]
  HasEternalaiAgentId: !Not [!Equals [!Ref eternalaiAgentId, ""]]
  HasEternalaiApiKey: !Not [!Equals [!Ref eternalaiApiKey, ""]]
  HasEternalaiLog: !Not [!Equals [!Ref eternalaiLog, ""]]
  HasHyperbolicModel: !Not [!Equals [!Ref hyperbolicModel, ""]]
  HasImageHyperbolicModel: !Not [!Equals [!Ref imageHyperbolicModel, ""]]
  HasSmallHyperbolicModel: !Not [!Equals [!Ref smallHyperbolicModel, ""]]
  HasMediumHyperbolicModel: !Not [!Equals [!Ref mediumHyperbolicModel, ""]]
  HasLargeHyperbolicModel: !Not [!Equals [!Ref largeHyperbolicModel, ""]]
  HasHyperbolicEnv: !Not [!Equals [!Ref hyperbolicEnv, ""]]
  HasHyperbolicGranularLog: !Not [!Equals [!Ref hyperbolicGranularLog, ""]]
  HasHyperbolicSpash: !Not [!Equals [!Ref hyperbolicSpash, ""]]
  HasHyperbolicLogLevel: !Not [!Equals [!Ref hyperbolicLogLevel, ""]]
  HasInferaModel: !Not [!Equals [!Ref inferaModel, ""]]
  HasInferaServerUrl: !Not [!Equals [!Ref inferaServerUrl, ""]]
  HasSmallInferaModel: !Not [!Equals [!Ref smallInferaModel, ""]]
  HasMediumInferaModel: !Not [!Equals [!Ref mediumInferaModel, ""]]
  HasLargeInferaModel: !Not [!Equals [!Ref largeInferaModel, ""]]
  HasSmallVeniceModel: !Not [!Equals [!Ref smallVeniceModel, ""]]
  HasMediumVeniceModel: !Not [!Equals [!Ref mediumVeniceModel, ""]]
  HasLargeVeniceModel: !Not [!Equals [!Ref largeVeniceModel, ""]]
  HasImageVeniceModel: !Not [!Equals [!Ref imageVeniceModel, ""]]
  HasSmallNineteenAiModel: !Not [!Equals [!Ref smallNineteenAiModel, ""]]
  HasMediumNineteenAiModel: !Not [!Equals [!Ref mediumNineteenAiModel, ""]]
  HasLargeNineteenAiModel: !Not [!Equals [!Ref largeNineteenAiModel, ""]]
  HasImageNineteenAiMode: !Not [!Equals [!Ref imageNineteenAiMode, ""]]
  HasSmallAkashChatApiModel: !Not [!Equals [!Ref smallAkashChatApiModel, ""]]
  HasMediumAkashChatApiModel: !Not [!Equals [!Ref mediumAkashChatApiModel, ""]]
  HasLargeAkashChatApiModel: !Not [!Equals [!Ref largeAkashChatApiModel, ""]]
  HasImageLivepeerModel: !Not [!Equals [!Ref imageLivepeerModel, ""]]
  HasSmallLivepeerModel: !Not [!Equals [!Ref smallLivepeerModel, ""]]
  HasMediumLivepeerModel: !Not [!Equals [!Ref mediumLivepeerModel, ""]]
  HasLargeLivepeerModel: !Not [!Equals [!Ref largeLivepeerModel, ""]]
  HasElevenlabsModelId: !Not [!Equals [!Ref elevenlabsModelId, ""]]
  HasElevenlabsVoiceId: !Not [!Equals [!Ref elevenlabsVoiceId, ""]]
  HasElevenlabsVoiceStability: !Not [!Equals [!Ref elevenlabsVoiceStability, ""]]
  HasElevenlabsVoiceSimilarityBoost: !Not [!Equals [!Ref elevenlabsVoiceSimilarityBoost, ""]]
  HasElevenlabsVoiceStyle: !Not [!Equals [!Ref elevenlabsVoiceStyle, ""]]
  HasElevenlabsVoiceUseSpeakerBoost: !Not [!Equals [!Ref elevenlabsVoiceUseSpeakerBoost, ""]]
  HasElevenlabsOptimizeStreamingLatency: !Not [!Equals [!Ref elevenlabsOptimizeStreamingLatency, ""]]
  HasElevenlabsOutputFormat: !Not [!Equals [!Ref elevenlabsOutputFormat, ""]]
  HasOpenrouterModel: !Not [!Equals [!Ref openrouterModel, ""]]
  HasSmallOpenrouterModel: !Not [!Equals [!Ref smallOpenrouterModel, ""]]
  HasMediumOpenrouterModel: !Not [!Equals [!Ref mediumOpenrouterModel, ""]]
  HasLargeOpenrouterModel: !Not [!Equals [!Ref largeOpenrouterModel, ""]]
  HasRedpillModel: !Not [!Equals [!Ref redpillModel, ""]]
  HasSmallRedpillModel: !Not [!Equals [!Ref smallRedpillModel, ""]]
  HasMediumRedpillModel: !Not [!Equals [!Ref mediumRedpillModel, ""]]
  HasLargeRedpillModel: !Not [!Equals [!Ref largeRedpillModel, ""]]
  HasSmallGrokModel: !Not [!Equals [!Ref smallGrokModel, ""]]
  HasMediumGrokModel: !Not [!Equals [!Ref mediumGrokModel, ""]]
  HasLargeGrokModel: !Not [!Equals [!Ref largeGrokModel, ""]]
  HasEmbeddingGrokModel: !Not [!Equals [!Ref embeddingGrokModel, ""]]
  HasOllamaModel: !Not [!Equals [!Ref ollamaModel, ""]]
  HasUseOllamaEmbedding: !Not [!Equals [!Ref useOllamaEmbedding, ""]]
  HasOllamaEmbeddingModel: !Not [!Equals [!Ref ollamaEmbeddingModel, ""]]
  HasSmallOllamaModel: !Not [!Equals [!Ref smallOllamaModel, ""]]
  HasMediumOllamaModel: !Not [!Equals [!Ref mediumOllamaModel, ""]]
  HasLargeOllamaModel: !Not [!Equals [!Ref largeOllamaModel, ""]]
  HasSmallGoogleModel: !Not [!Equals [!Ref smallGoogleModel, ""]]
  HasMediumGoogleModel: !Not [!Equals [!Ref mediumGoogleModel, ""]]
  HasLargeGoogleModel: !Not [!Equals [!Ref largeGoogleModel, ""]]
  HasEmbeddingGoogleModel: !Not [!Equals [!Ref embeddingGoogleModel, ""]]
  HasGoogleGenerativeAiApiKey: !Not [!Equals [!Ref googleGenerativeAiApiKey, ""]]
  HasSmallMistralModel: !Not [!Equals [!Ref smallMistralModel, ""]]
  HasMediumMistralModel: !Not [!Equals [!Ref mediumMistralModel, ""]]
  HasLargeMistralModel: !Not [!Equals [!Ref largeMistralModel, ""]]
  HasSmallGroqModel: !Not [!Equals [!Ref smallGroqModel, ""]]
  HasMediumGroqModel: !Not [!Equals [!Ref mediumGroqModel, ""]]
  HasLargeGroqModel: !Not [!Equals [!Ref largeGroqModel, ""]]
  HasEmbeddingGroqModel: !Not [!Equals [!Ref embeddingGroqModel, ""]]
  HasMediumNanogptModel: !Not [!Equals [!Ref mediumNanogptModel, ""]]
  HasLargeNanogptModel: !Not [!Equals [!Ref largeNanogptModel, ""]]
  HasNanogptApiKey: !Not [!Equals [!Ref nanogptApiKey, ""]]
  HasSmallAnthropicModel: !Not [!Equals [!Ref smallAnthropicModel, ""]]
  HasMediumAnthropicModel: !Not [!Equals [!Ref mediumAnthropicModel, ""]]
  HasLargeAnthropicModel: !Not [!Equals [!Ref largeAnthropicModel, ""]]
  HasSmallHeuristModel: !Not [!Equals [!Ref smallHeuristModel, ""]]
  HasMediumHeuristModel: !Not [!Equals [!Ref mediumHeuristModel, ""]]
  HasLargeHeuristModel: !Not [!Equals [!Ref largeHeuristModel, ""]]
  HasHeuristImageModel: !Not [!Equals [!Ref heuristImageModel, ""]]
  HasHeuristEmbeddingModel: !Not [!Equals [!Ref heuristEmbeddingModel, ""]]
  HasUseHeuristEmbedding: !Not [!Equals [!Ref useHeuristEmbedding, ""]]
  HasGaianetServerUrl: !Not [!Equals [!Ref gaianetServerUrl, ""]]
  HasSmallGaianetModel: !Not [!Equals [!Ref smallGaianetModel, ""]]
  HasSmallGaianetServerUrl: !Not [!Equals [!Ref smallGaianetServerUrl, ""]]
  HasMediumGaianetModel: !Not [!Equals [!Ref mediumGaianetModel, ""]]
  HasMediumGaianetServerUrl: !Not [!Equals [!Ref mediumGaianetServerUrl, ""]]
  HasLargeGaianetModel: !Not [!Equals [!Ref largeGaianetModel, ""]]
  HasLargeGaianetServerUrl: !Not [!Equals [!Ref largeGaianetServerUrl, ""]]
  HasGaianetEmbeddingModel: !Not [!Equals [!Ref gaianetEmbeddingModel, ""]]
  HasUseGaianetEmbedding: !Not [!Equals [!Ref useGaianetEmbedding, ""]]
  HasVolengineModel: !Not [!Equals [!Ref volengineModel, ""]]
  HasSmallVolengineModel: !Not [!Equals [!Ref smallVolengineModel, ""]]
  HasMediumVolengineModel: !Not [!Equals [!Ref mediumVolengineModel, ""]]
  HasLargeVolengineModel: !Not [!Equals [!Ref largeVolengineModel, ""]]
  HasVolengineEmbeddingModel: !Not [!Equals [!Ref volengineEmbeddingModel, ""]]
  HasDeepseekApiUrl: !Not [!Equals [!Ref deepseekApiUrl, ""]]
  HasSmallDeepseekModel: !Not [!Equals [!Ref smallDeepseekModel, ""]]
  HasMediumDeepseekModel: !Not [!Equals [!Ref mediumDeepseekModel, ""]]
  HasLargeDeepseekModel: !Not [!Equals [!Ref largeDeepseekModel, ""]]
  HasFalAiLoraPath: !Not [!Equals [!Ref falAiLoraPath, ""]]
  HasLetzaiModels: !Not [!Equals [!Ref letzaiModels, ""]]
  HasSmallGaladrielModel: !Not [!Equals [!Ref smallGaladrielModel, ""]]
  HasMediumGaladrielModel: !Not [!Equals [!Ref mediumGaladrielModel, ""]]
  HasLargeGaladrielModel: !Not [!Equals [!Ref largeGaladrielModel, ""]]
  HasGaladrielFineTuneApiKey: !Not [!Equals [!Ref galadrielFineTuneApiKey, ""]]
  HasLmstudioModel: !Not [!Equals [!Ref lmstudioModel, ""]]
  HasSmallLmstudioModel: !Not [!Equals [!Ref smallLmstudioModel, ""]]
  HasMediumLmstudioModel: !Not [!Equals [!Ref mediumLmstudioModel, ""]]
  HasLargeLmstudioModel: !Not [!Equals [!Ref largeLmstudioModel, ""]]
  HasSecretAiUrl: !Not [!Equals [!Ref secretAiUrl, ""]]
  HasSmallSecretAiModel: !Not [!Equals [!Ref smallSecretAiModel, ""]]
  HasMediumSecretAiModel: !Not [!Equals [!Ref mediumSecretAiModel, ""]]
  HasLargeSecretAiModel: !Not [!Equals [!Ref largeSecretAiModel, ""]]
  HasNearaiApiKey: !Not [!Equals [!Ref nearaiApiKey, ""]]
  HasNearaiModel: !Not [!Equals [!Ref nearaiModel, ""]]
  HasSmallNearaiModel: !Not [!Equals [!Ref smallNearaiModel, ""]]
  HasMediumNearaiModel: !Not [!Equals [!Ref mediumNearaiModel, ""]]
  HasLargeNearaiModel: !Not [!Equals [!Ref largeNearaiModel, ""]]
  HasImageNearaiModel: !Not [!Equals [!Ref imageNearaiModel, ""]]
  HasCoingeckoProApiKey: !Not [!Equals [!Ref coingeckoProApiKey, ""]]
  HasEvmProviderUrl: !Not [!Equals [!Ref evmProviderUrl, ""]]
  HasZilliqaProviderUrl: !Not [!Equals [!Ref zilliqaProviderUrl, ""]]
  HasAvalanchePublicKey: !Not [!Equals [!Ref avalanchePublicKey, ""]]
  HasSolanaPublicKey: !Not [!Equals [!Ref solanaPublicKey, ""]]
  HasSolanaCluster: !Not [!Equals [!Ref solanaCluster, ""]]
  HasSolanaAdminPrivateKey: !Not [!Equals [!Ref solanaAdminPrivateKey, ""]]
  HasSolanaAdminPublicKey: !Not [!Equals [!Ref solanaAdminPublicKey, ""]]
  HasSolanaVerifyToken: !Not [!Equals [!Ref solanaVerifyToken, ""]]
  HasSolAddress: !Not [!Equals [!Ref solAddress, ""]]
  HasSlippage: !Not [!Equals [!Ref slippage, ""]]
  HasBaseMint: !Not [!Equals [!Ref baseMint, ""]]
  HasSolanaRpcUrl: !Not [!Equals [!Ref solanaRpcUrl, ""]]
  HasHeliusApiKey: !Not [!Equals [!Ref heliusApiKey, ""]]
  HasInjectivePublicKey: !Not [!Equals [!Ref injectivePublicKey, ""]]
  HasInjectiveNetwork: !Not [!Equals [!Ref injectiveNetwork, ""]]
  HasAbstractPrivateKey: !Not [!Equals [!Ref abstractPrivateKey, ""]]
  HasAbstractRpcUrl: !Not [!Equals [!Ref abstractRpcUrl, ""]]
  HasStarknetPrivateKey: !Not [!Equals [!Ref starknetPrivateKey, ""]]
  HasStarknetRpcUrl: !Not [!Equals [!Ref starknetRpcUrl, ""]]
  HasLensPrivateKey: !Not [!Equals [!Ref lensPrivateKey, ""]]
  HasFormTestnet: !Not [!Equals [!Ref formTestnet, ""]]
  HasCoinbaseApiKey: !Not [!Equals [!Ref coinbaseApiKey, ""]]
  HasCoinbasePrivateKey: !Not [!Equals [!Ref coinbasePrivateKey, ""]]
  HasCoinbaseGeneratedWalletId: !Not [!Equals [!Ref coinbaseGeneratedWalletId, ""]]
  HasCoinbaseGeneratedWalletHexSeed: !Not [!Equals [!Ref coinbaseGeneratedWalletHexSeed, ""]]
  HasCoinbaseNotificationUri: !Not [!Equals [!Ref coinbaseNotificationUri, ""]]
  HasCdpApiKeyPrivateKey: !Not [!Equals [!Ref cdpApiKeyPrivateKey, ""]]
  HasCdpAgentKitNetwork: !Not [!Equals [!Ref cdpAgentKitNetwork, ""]]
  HasCharityAddressBase: !Not [!Equals [!Ref charityAddressBase, ""]]
  HasCharityAddressSol: !Not [!Equals [!Ref charityAddressSol, ""]]
  HasCharityAddressEth: !Not [!Equals [!Ref charityAddressEth, ""]]
  HasCharityAddressArb: !Not [!Equals [!Ref charityAddressArb, ""]]
  HasCharityAddressPol: !Not [!Equals [!Ref charityAddressPol, ""]]
  HasConfluxCoreSpaceRpcUrl: !Not [!Equals [!Ref confluxCoreSpaceRpcUrl, ""]]
  HasConfluxEspacePrivateKey: !Not [!Equals [!Ref confluxEspacePrivateKey, ""]]
  HasConfluxEspaceRpcUrl: !Not [!Equals [!Ref confluxEspaceRpcUrl, ""]]
  HasConfluxMemeContractAddress: !Not [!Equals [!Ref confluxMemeContractAddress, ""]]
  HasMindColdWalletAddress: !Not [!Equals [!Ref mindColdWalletAddress, ""]]
  HasZerogEvmRpc: !Not [!Equals [!Ref zerogEvmRpc, ""]]
  HasZerogPrivateKey: !Not [!Equals [!Ref zerogPrivateKey, ""]]
  HasZerogFlowAddress: !Not [!Equals [!Ref zerogFlowAddress, ""]]
  HasIqsolrpc: !Not [!Equals [!Ref iqsolrpc, ""]]
  HasSquidIntegratorId: !Not [!Equals [!Ref squidIntegratorId, ""]]
  HasSquidEvmAddress: !Not [!Equals [!Ref squidEvmAddress, ""]]
  HasSquidEvmPrivateKey: !Not [!Equals [!Ref squidEvmPrivateKey, ""]]
  HasSquidApiThrottleInterval: !Not [!Equals [!Ref squidApiThrottleInterval, ""]]
  HasWalletSecretSalt: !Not [!Equals [!Ref walletSecretSalt, ""]]
  HasTeeLogDbPath: !Not [!Equals [!Ref teeLogDbPath, ""]]
  HasVlog: !Not [!Equals [!Ref vlog, ""]]
  HasEnableTeeLog: !Not [!Equals [!Ref enableTeeLog, ""]]
  HasFlowPrivateKey: !Not [!Equals [!Ref flowPrivateKey, ""]]
  HasFlowNetwork: !Not [!Equals [!Ref flowNetwork, ""]]
  HasFlowEndpointUrl: !Not [!Equals [!Ref flowEndpointUrl, ""]]
  HasInternetComputerAddress: !Not [!Equals [!Ref internetComputerAddress, ""]]
  HasAptosNetwork: !Not [!Equals [!Ref aptosNetwork, ""]]
  HasMvxNetwork: !Not [!Equals [!Ref mvxNetwork, ""]]
  HasAccessTokenManagementTo: !Not [!Equals [!Ref accessTokenManagementTo, ""]]
  HasNearWalletPublicKey: !Not [!Equals [!Ref nearWalletPublicKey, ""]]
  HasNearAddress: !Not [!Equals [!Ref nearAddress, ""]]
  HasNearSlippage: !Not [!Equals [!Ref nearSlippage, ""]]
  HasNearRpcUrl: !Not [!Equals [!Ref nearRpcUrl, ""]]
  HasNearNetwork: !Not [!Equals [!Ref nearNetwork, ""]]
  HasZksyncPrivateKey: !Not [!Equals [!Ref zksyncPrivateKey, ""]]
  HasAvailSeed: !Not [!Equals [!Ref availSeed, ""]]
  HasAvailAppId: !Not [!Equals [!Ref availAppId, ""]]
  HasAvailRpcUrl: !Not [!Equals [!Ref availRpcUrl, ""]]
  HasTeeMarlinAttestationEndpoint: !Not [!Equals [!Ref teeMarlinAttestationEndpoint, ""]]
  HasTonRpcUrl: !Not [!Equals [!Ref tonRpcUrl, ""]]
  HasTonRpcApiKey: !Not [!Equals [!Ref tonRpcApiKey, ""]]
  HasTonNftImagesFolder: !Not [!Equals [!Ref tonNftImagesFolder, ""]]
  HasTonNftMetadataFolder: !Not [!Equals [!Ref tonNftMetadataFolder, ""]]
  HasPinataApiKey: !Not [!Equals [!Ref pinataApiKey, ""]]
  HasPinataApiSecret: !Not [!Equals [!Ref pinataApiSecret, ""]]
  HasSuiNetwork: !Not [!Equals [!Ref suiNetwork, ""]]
  HasMinaNetwork: !Not [!Equals [!Ref minaNetwork, ""]]
  HasStoryApiBaseUrl: !Not [!Equals [!Ref storyApiBaseUrl, ""]]
  HasStoryApiKey: !Not [!Equals [!Ref storyApiKey, ""]]
  HasPinataJwt: !Not [!Equals [!Ref pinataJwt, ""]]
  HasCosmosAvailableChains: !Not [!Equals [!Ref cosmosAvailableChains, ""]]
  HasCronoszkevmPrivateKey: !Not [!Equals [!Ref cronoszkevmPrivateKey, ""]]
  HasSpheronProviderProxyUrl: !Not [!Equals [!Ref spheronProviderProxyUrl, ""]]
  HasSpheronWalletAddress: !Not [!Equals [!Ref spheronWalletAddress, ""]]
  HasBnbPublicKey: !Not [!Equals [!Ref bnbPublicKey, ""]]
  HasBscProviderUrl: !Not [!Equals [!Ref bscProviderUrl, ""]]
  HasOpbnbProviderUrl: !Not [!Equals [!Ref opbnbProviderUrl, ""]]
  HasBitmindApiToken: !Not [!Equals [!Ref bitmindApiToken, ""]]
  HasPassportScorer: !Not [!Equals [!Ref passportScorer, ""]]
  HasEchochambersApiKey: !Not [!Equals [!Ref echochambersApiKey, ""]]
  HasEchochambersUsername: !Not [!Equals [!Ref echochambersUsername, ""]]
  HasEchochambersRooms: !Not [!Equals [!Ref echochambersRooms, ""]]
  HasEchochambersPollInterval: !Not [!Equals [!Ref echochambersPollInterval, ""]]
  HasEchochambersMaxMessages: !Not [!Equals [!Ref echochambersMaxMessages, ""]]
  HasEchochambersConversationStarterInterval: !Not [!Equals [!Ref echochambersConversationStarterInterval, ""]]
  HasEchochambersQuietPeriod: !Not [!Equals [!Ref echochambersQuietPeriod, ""]]
  HasAlloraChainSlug: !Not [!Equals [!Ref alloraChainSlug, ""]]
  HasOpacityCloudflareName: !Not [!Equals [!Ref opacityCloudflareName, ""]]
  HasOpacityProverUrl: !Not [!Equals [!Ref opacityProverUrl, ""]]
  HasDevaApiBaseUrl: !Not [!Equals [!Ref devaApiBaseUrl, ""]]
  HasQdrantKey: !Not [!Equals [!Ref qdrantKey, ""]]
  HasQdrantPort: !Not [!Equals [!Ref qdrantPort, ""]]
  HasQdrantVectorSize: !Not [!Equals [!Ref qdrantVectorSize, ""]]
  HasAutonomeRpc: !Not [!Equals [!Ref autonomeRpc, ""]]
  HasAkashNet: !Not [!Equals [!Ref akashNet, ""]]
  HasRpcEndpoint: !Not [!Equals [!Ref rpcEndpoint, ""]]
  HasAkashGasPrices: !Not [!Equals [!Ref akashGasPrices, ""]]
  HasAkashGasAdjustment: !Not [!Equals [!Ref akashGasAdjustment, ""]]
  HasAkashKeyringBackend: !Not [!Equals [!Ref akashKeyringBackend, ""]]
  HasAkashFrom: !Not [!Equals [!Ref akashFrom, ""]]
  HasAkashFees: !Not [!Equals [!Ref akashFees, ""]]
  HasAkashDeposit: !Not [!Equals [!Ref akashDeposit, ""]]
  HasAkashMnemonic: !Not [!Equals [!Ref akashMnemonic, ""]]
  HasAkashWalletAddress: !Not [!Equals [!Ref akashWalletAddress, ""]]
  HasAkashPricingApiUrl: !Not [!Equals [!Ref akashPricingApiUrl, ""]]
  HasAkashDefaultCpu: !Not [!Equals [!Ref akashDefaultCpu, ""]]
  HasAkashDefaultMemory: !Not [!Equals [!Ref akashDefaultMemory, ""]]
  HasAkashDefaultStorage: !Not [!Equals [!Ref akashDefaultStorage, ""]]
  HasAkashSdl: !Not [!Equals [!Ref akashSdl, ""]]
  HasAkashCloseDep: !Not [!Equals [!Ref akashCloseDep, ""]]
  HasAkashCloseDseq: !Not [!Equals [!Ref akashCloseDseq, ""]]
  HasAkashProviderInfo: !Not [!Equals [!Ref akashProviderInfo, ""]]
  HasAkashDepStatus: !Not [!Equals [!Ref akashDepStatus, ""]]
  HasAkashDepDseq: !Not [!Equals [!Ref akashDepDseq, ""]]
  HasAkashGasOperation: !Not [!Equals [!Ref akashGasOperation, ""]]
  HasAkashGasDseq: !Not [!Equals [!Ref akashGasDseq, ""]]
  HasAkashManifestMode: !Not [!Equals [!Ref akashManifestMode, ""]]
  HasAkashManifestPath: !Not [!Equals [!Ref akashManifestPath, ""]]
  HasAkashManifestValidationLevel: !Not [!Equals [!Ref akashManifestValidationLevel, ""]]
  HasQuaiRpcUrl: !Not [!Equals [!Ref quaiRpcUrl, ""]]
  HasAlchemyHttpTransportUrl: !Not [!Equals [!Ref alchemyHttpTransportUrl, ""]]
  HasPythMainnetHermesUrl: !Not [!Equals [!Ref pythMainnetHermesUrl, ""]]
  HasPythMainnetWssUrl: !Not [!Equals [!Ref pythMainnetWssUrl, ""]]
  HasPythMainnetPythnetUrl: !Not [!Equals [!Ref pythMainnetPythnetUrl, ""]]
  HasPythMainnetContractRegistry: !Not [!Equals [!Ref pythMainnetContractRegistry, ""]]
  HasPythMainnetProgramKey: !Not [!Equals [!Ref pythMainnetProgramKey, ""]]
  HasPythTestnetHermesUrl: !Not [!Equals [!Ref pythTestnetHermesUrl, ""]]
  HasPythTestnetWssUrl: !Not [!Equals [!Ref pythTestnetWssUrl, ""]]
  HasPythTestnetPythnetUrl: !Not [!Equals [!Ref pythTestnetPythnetUrl, ""]]
  HasPythTestnetContractRegistry: !Not [!Equals [!Ref pythTestnetContractRegistry, ""]]
  HasPythTestnetProgramKey: !Not [!Equals [!Ref pythTestnetProgramKey, ""]]
  HasPythMaxRetries: !Not [!Equals [!Ref pythMaxRetries, ""]]
  HasPythRetryDelay: !Not [!Equals [!Ref pythRetryDelay, ""]]
  HasPythTimeout: !Not [!Equals [!Ref pythTimeout, ""]]
  HasPythGranularLog: !Not [!Equals [!Ref pythGranularLog, ""]]
  HasPythLogLevel: !Not [!Equals [!Ref pythLogLevel, ""]]
  HasRuntimeCheckMode: !Not [!Equals [!Ref runtimeCheckMode, ""]]
  HasPythEnablePriceStreaming: !Not [!Equals [!Ref pythEnablePriceStreaming, ""]]
  HasPythMaxPriceStreams: !Not [!Equals [!Ref pythMaxPriceStreams, ""]]
  HasPythTestId01: !Not [!Equals [!Ref pythTestId01, ""]]
  HasPythTestId02: !Not [!Equals [!Ref pythTestId02, ""]]
  HasRouterNitroEvmPrivateKey: !Not [!Equals [!Ref routerNitroEvmPrivateKey, ""]]
  HasDkgHostname: !Not [!Equals [!Ref dkgHostname, ""]]
  HasDkgPort: !Not [!Equals [!Ref dkgPort, ""]]
  HasDkgPublicKey: !Not [!Equals [!Ref dkgPublicKey, ""]]
  HasDkgPrivateKey: !Not [!Equals [!Ref dkgPrivateKey, ""]]
  HasDkgBlockchainName: !Not [!Equals [!Ref dkgBlockchainName, ""]]
  HasInitiaNodeUrl: !Not [!Equals [!Ref initiaNodeUrl, ""]]
  HasInitiaChainId: !Not [!Equals [!Ref initiaChainId, ""]]
  HasNvidiaNimSpash: !Not [!Equals [!Ref nvidiaNimSpash, ""]]
  HasNvidiaNimApiKey: !Not [!Equals [!Ref nvidiaNimApiKey, ""]]
  HasNvidiaNgcApiKey: !Not [!Equals [!Ref nvidiaNgcApiKey, ""]]
  HasNvidiaNimMaxRetries: !Not [!Equals [!Ref nvidiaNimMaxRetries, ""]]
  HasNvidiaNimRetryDelay: !Not [!Equals [!Ref nvidiaNimRetryDelay, ""]]
  HasNvidiaNimTimeout: !Not [!Equals [!Ref nvidiaNimTimeout, ""]]
  HasNvidiaGranularLog: !Not [!Equals [!Ref nvidiaGranularLog, ""]]
  HasNvidiaLogLevel: !Not [!Equals [!Ref nvidiaLogLevel, ""]]
  HasNvidiaOfftopicSystem: !Not [!Equals [!Ref nvidiaOfftopicSystem, ""]]
  HasNvidiaOfftopicUser: !Not [!Equals [!Ref nvidiaOfftopicUser, ""]]
  HasNvidiaNimBaseVisionUrl: !Not [!Equals [!Ref nvidiaNimBaseVisionUrl, ""]]
  HasNvidiaCosmosModel: !Not [!Equals [!Ref nvidiaCosmosModel, ""]]
  HasNvidiaCosmosInvokeUrl: !Not [!Equals [!Ref nvidiaCosmosInvokeUrl, ""]]
  HasNvidiaCosmosAssetUrl: !Not [!Equals [!Ref nvidiaCosmosAssetUrl, ""]]
  HasNvidiaCosmosMaxTokens: !Not [!Equals [!Ref nvidiaCosmosMaxTokens, ""]]
  HasEmailOutgoingHost: !Not [!Equals [!Ref emailOutgoingHost, ""]]
  HasEmailOutgoingPort: !Not [!Equals [!Ref emailOutgoingPort, ""]]
  HasEmailOutgoingUser: !Not [!Equals [!Ref emailOutgoingUser, ""]]
  HasEmailOutgoingPass: !Not [!Equals [!Ref emailOutgoingPass, ""]]
  HasEmailIncomingService: !Not [!Equals [!Ref emailIncomingService, ""]]
  HasEmailIncomingHost: !Not [!Equals [!Ref emailIncomingHost, ""]]
  HasEmailIncomingPort: !Not [!Equals [!Ref emailIncomingPort, ""]]
  HasEmailIncomingUser: !Not [!Equals [!Ref emailIncomingUser, ""]]
  HasEmailIncomingPass: !Not [!Equals [!Ref emailIncomingPass, ""]]
  HasSeiNetwork: !Not [!Equals [!Ref seiNetwork, ""]]
  HasSeiRpcUrl: !Not [!Equals [!Ref seiRpcUrl, ""]]
  HasOmniflixMnemonic: !Not [!Equals [!Ref omniflixMnemonic, ""]]
  HasOmniflixRpcEndpoint: !Not [!Equals [!Ref omniflixRpcEndpoint, ""]]
  HasOmniflixPrivateKey: !Not [!Equals [!Ref omniflixPrivateKey, ""]]
  HasImgflipPassword: !Not [!Equals [!Ref imgflipPassword, ""]]
  HasHyperliquidTestnet: !Not [!Equals [!Ref hyperliquidTestnet, ""]]
  HasEvmRpcUrl: !Not [!Equals [!Ref evmRpcUrl, ""]]
  HasEthstorageAddress: !Not [!Equals [!Ref ethstorageAddress, ""]]
  HasEthstorageRpcUrl: !Not [!Equals [!Ref ethstorageRpcUrl, ""]]
  HasDefaultToEmail: !Not [!Equals [!Ref defaultToEmail, ""]]
  HasDefaultFromEmail: !Not [!Equals [!Ref defaultFromEmail, ""]]
  HasEmailAutomationEnabled: !Not [!Equals [!Ref emailAutomationEnabled, ""]]
  HasEmailEvaluationPrompt: !Not [!Equals [!Ref emailEvaluationPrompt, ""]]
  HasAnkrWallet: !Not [!Equals [!Ref ankrWallet, ""]]
  HasAnkrMaxRetries: !Not [!Equals [!Ref ankrMaxRetries, ""]]
  HasAnkrRetryDelay: !Not [!Equals [!Ref ankrRetryDelay, ""]]
  HasAnkrTimeout: !Not [!Equals [!Ref ankrTimeout, ""]]
  HasAnkrGranularLog: !Not [!Equals [!Ref ankrGranularLog, ""]]
  HasAnkrLogLevel: !Not [!Equals [!Ref ankrLogLevel, ""]]
  HasAnkrRuntimeCheckMode: !Not [!Equals [!Ref ankrRuntimeCheckMode, ""]]
  HasAnkrSpash: !Not [!Equals [!Ref ankrSpash, ""]]
  HasDcapMode: !Not [!Equals [!Ref dcapMode, ""]]
  HasBtcPrivateKeyWif: !Not [!Equals [!Ref btcPrivateKeyWif, ""]]
  HasBtcAddress: !Not [!Equals [!Ref btcAddress, ""]]
  HasBtcMintCap: !Not [!Equals [!Ref btcMintCap, ""]]
  HasBtcMintDeadline: !Not [!Equals [!Ref btcMintDeadline, ""]]
  HasBtcFundraisingCap: !Not [!Equals [!Ref btcFundraisingCap, ""]]
  HasTrikonInitialBalance: !Not [!Equals [!Ref trikonInitialBalance, ""]]
  HasArbitrageEvmProviderUrl: !Not [!Equals [!Ref arbitrageEvmProviderUrl, ""]]
  HasArbitrageEvmPrivateKey: !Not [!Equals [!Ref arbitrageEvmPrivateKey, ""]]
  HasFlashbotsRelaySigningKey: !Not [!Equals [!Ref flashbotsRelaySigningKey, ""]]
  HasBundleExecutorAddress: !Not [!Equals [!Ref bundleExecutorAddress, ""]]
  HasDeskExchangeNetwork: !Not [!Equals [!Ref deskExchangeNetwork, ""]]
  HasCompassArbitrumRpcUrl: !Not [!Equals [!Ref compassArbitrumRpcUrl, ""]]
  HasCompassEthereumRpcUrl: !Not [!Equals [!Ref compassEthereumRpcUrl, ""]]
  HasCompassBaseRpcUrl: !Not [!Equals [!Ref compassBaseRpcUrl, ""]]
  HasDataAuthToken: !Not [!Equals [!Ref dataAuthToken, ""]]
  HasNknClientId: !Not [!Equals [!Ref nknClientId, ""]]
  
Resources:
  
    AgentParamCacheDirParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCacheDir
      Properties:
        Name: !Sub '${AgentCodeName}_CACHE_DIR'
        Type: 'String'
        Value: !Ref cacheDir
        Tier: 'Standard'
        Description: 'Parameter for CACHE_DIR'

    AgentParamRedisUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasRedisUrl
      Properties:
        Name: !Sub '${AgentCodeName}_REDIS_URL'
        Type: 'String'
        Value: !Ref redisUrl
        Tier: 'Standard'
        Description: 'Parameter for REDIS_URL'

    AgentParamServerUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasServerUrl
      Properties:
        Name: !Sub '${AgentCodeName}_SERVER_URL'
        Type: 'String'
        Value: !Ref serverUrl
        Tier: 'Standard'
        Description: 'Parameter for SERVER_URL'

    AgentParamServerPortParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasServerPort
      Properties:
        Name: !Sub '${AgentCodeName}_SERVER_PORT'
        Type: 'String'
        Value: !Ref serverPort
        Tier: 'Standard'
        Description: 'Parameter for SERVER_PORT'

    AgentParamRemoteCharacterUrlsParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasRemoteCharacterUrls
      Properties:
        Name: !Sub '${AgentCodeName}_REMOTE_CHARACTER_URLS'
        Type: 'String'
        Value: !Ref remoteCharacterUrls
        Tier: 'Standard'
        Description: 'Parameter for REMOTE_CHARACTER_URLS'

    AgentParamUseCharacterStorageParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasUseCharacterStorage
      Properties:
        Name: !Sub '${AgentCodeName}_USE_CHARACTER_STORAGE'
        Type: 'String'
        Value: !Ref useCharacterStorage
        Tier: 'Standard'
        Description: 'Parameter for USE_CHARACTER_STORAGE'

    AgentParamDefaultLogLevelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDefaultLogLevel
      Properties:
        Name: !Sub '${AgentCodeName}_DEFAULT_LOG_LEVEL'
        Type: 'String'
        Value: !Ref defaultLogLevel
        Tier: 'Standard'
        Description: 'Parameter for DEFAULT_LOG_LEVEL'

    AgentParamLogJsonFormatParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLogJsonFormat
      Properties:
        Name: !Sub '${AgentCodeName}_LOG_JSON_FORMAT'
        Type: 'String'
        Value: !Ref logJsonFormat
        Tier: 'Standard'
        Description: 'Parameter for LOG_JSON_FORMAT'

    AgentParamExpressMaxPayloadParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasExpressMaxPayload
      Properties:
        Name: !Sub '${AgentCodeName}_EXPRESS_MAX_PAYLOAD'
        Type: 'String'
        Value: !Ref expressMaxPayload
        Tier: 'Standard'
        Description: 'Parameter for EXPRESS_MAX_PAYLOAD'

    AgentParamTranscriptionProviderParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTranscriptionProvider
      Properties:
        Name: !Sub '${AgentCodeName}_TRANSCRIPTION_PROVIDER'
        Type: 'String'
        Value: !Ref transcriptionProvider
        Tier: 'Standard'
        Description: 'Parameter for TRANSCRIPTION_PROVIDER'

    AgentParamWalletPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasWalletPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_WALLET_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref walletPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for WALLET_PRIVATE_KEY'

    AgentParamWalletPublicKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasWalletPublicKey
      Properties:
        Name: !Sub '${AgentCodeName}_WALLET_PUBLIC_KEY'
        Type: 'String'
        Value: !Ref walletPublicKey
        Tier: 'Standard'
        Description: 'Parameter for WALLET_PUBLIC_KEY'

    AgentParamTokenizerParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTokenizer
      Properties:
        Name: !Sub '${AgentCodeName}_tokenizer'
        Type: 'String'
        Value: !Ref tokenizer
        Tier: 'Standard'
        Description: 'Parameter for tokenizer'

    AgentParamCloudflareParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCloudflare
      Properties:
        Name: !Sub '${AgentCodeName}_cloudflare'
        Type: 'String'
        Value: !Ref cloudflare
        Tier: 'Standard'
        Description: 'Parameter for cloudflare'

    AgentParamAwsParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAws
      Properties:
        Name: !Sub '${AgentCodeName}_aws'
        Type: 'String'
        Value: !Ref aws
        Tier: 'Standard'
        Description: 'Parameter for aws'

    AgentParamVerifiableInferenceParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasVerifiableInference
      Properties:
        Name: !Sub '${AgentCodeName}_verifiable_inference'
        Type: 'String'
        Value: !Ref verifiableInference
        Tier: 'Standard'
        Description: 'Parameter for verifiable_inference'

    AgentParamSupabaseAnonKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSupabaseAnonKey
      Properties:
        Name: !Sub '${AgentCodeName}_SUPABASE_ANON_KEY'
        Type: 'String'
        Value: !Ref supabaseAnonKey
        Tier: 'Standard'
        Description: 'Parameter for SUPABASE_ANON_KEY'

    AgentParamMongodbDatabaseParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMongodbDatabase
      Properties:
        Name: !Sub '${AgentCodeName}_MONGODB_DATABASE'
        Type: 'String'
        Value: !Ref mongodbDatabase
        Tier: 'Standard'
        Description: 'Parameter for MONGODB_DATABASE'

    AgentParamDiscordApiTokenParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDiscordApiToken
      Properties:
        Name: !Sub '${AgentCodeName}_DISCORD_API_TOKEN'
        Type: 'String'
        Value: !Ref discordApiToken
        Tier: 'Standard'
        Description: 'Parameter for DISCORD_API_TOKEN'

    AgentParamDiscordVoiceChannelIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDiscordVoiceChannelId
      Properties:
        Name: !Sub '${AgentCodeName}_DISCORD_VOICE_CHANNEL_ID'
        Type: 'String'
        Value: !Ref discordVoiceChannelId
        Tier: 'Standard'
        Description: 'Parameter for DISCORD_VOICE_CHANNEL_ID'

    AgentParamFarcasterNeynarApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasFarcasterNeynarApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_FARCASTER_NEYNAR_API_KEY'
        Type: 'String'
        Value: !Ref farcasterNeynarApiKey
        Tier: 'Standard'
        Description: 'Parameter for FARCASTER_NEYNAR_API_KEY'

    AgentParamFarcasterNeynarSignerUuidParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasFarcasterNeynarSignerUuid
      Properties:
        Name: !Sub '${AgentCodeName}_FARCASTER_NEYNAR_SIGNER_UUID'
        Type: 'String'
        Value: !Ref farcasterNeynarSignerUuid
        Tier: 'Standard'
        Description: 'Parameter for FARCASTER_NEYNAR_SIGNER_UUID'

    AgentParamFarcasterDryRunParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasFarcasterDryRun
      Properties:
        Name: !Sub '${AgentCodeName}_FARCASTER_DRY_RUN'
        Type: 'String'
        Value: !Ref farcasterDryRun
        Tier: 'Standard'
        Description: 'Parameter for FARCASTER_DRY_RUN'

    AgentParamFarcasterPollIntervalParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasFarcasterPollInterval
      Properties:
        Name: !Sub '${AgentCodeName}_FARCASTER_POLL_INTERVAL'
        Type: 'String'
        Value: !Ref farcasterPollInterval
        Tier: 'Standard'
        Description: 'Parameter for FARCASTER_POLL_INTERVAL'

    AgentParamTelegramAccountPhoneParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTelegramAccountPhone
      Properties:
        Name: !Sub '${AgentCodeName}_TELEGRAM_ACCOUNT_PHONE'
        Type: 'String'
        Value: !Ref telegramAccountPhone
        Tier: 'Standard'
        Description: 'Parameter for TELEGRAM_ACCOUNT_PHONE'

    AgentParamTelegramAccountAppIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTelegramAccountAppId
      Properties:
        Name: !Sub '${AgentCodeName}_TELEGRAM_ACCOUNT_APP_ID'
        Type: 'String'
        Value: !Ref telegramAccountAppId
        Tier: 'Standard'
        Description: 'Parameter for TELEGRAM_ACCOUNT_APP_ID'

    AgentParamTelegramAccountAppHashParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTelegramAccountAppHash
      Properties:
        Name: !Sub '${AgentCodeName}_TELEGRAM_ACCOUNT_APP_HASH'
        Type: 'String'
        Value: !Ref telegramAccountAppHash
        Tier: 'Standard'
        Description: 'Parameter for TELEGRAM_ACCOUNT_APP_HASH'

    AgentParamTelegramAccountDeviceModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTelegramAccountDeviceModel
      Properties:
        Name: !Sub '${AgentCodeName}_TELEGRAM_ACCOUNT_DEVICE_MODEL'
        Type: 'String'
        Value: !Ref telegramAccountDeviceModel
        Tier: 'Standard'
        Description: 'Parameter for TELEGRAM_ACCOUNT_DEVICE_MODEL'

    AgentParamTelegramAccountSystemVersionParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTelegramAccountSystemVersion
      Properties:
        Name: !Sub '${AgentCodeName}_TELEGRAM_ACCOUNT_SYSTEM_VERSION'
        Type: 'String'
        Value: !Ref telegramAccountSystemVersion
        Tier: 'Standard'
        Description: 'Parameter for TELEGRAM_ACCOUNT_SYSTEM_VERSION'

    AgentParamTwitterUsernameParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterUsername
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_USERNAME'
        Type: 'String'
        Value: !Ref twitterUsername
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_USERNAME'

    AgentParamTwitterPasswordParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterPassword
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_PASSWORD'
        Type: 'String'
        Value: !Ref twitterPassword
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_PASSWORD'

    AgentParamTwitterEmailParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterEmail
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_EMAIL'
        Type: 'String'
        Value: !Ref twitterEmail
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_EMAIL'

    AgentParamTwitter2faSecretParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitter2faSecret
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_2FA_SECRET'
        Type: 'String'
        Value: !Ref twitter2faSecret
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_2FA_SECRET'

    AgentParamTwitterCookiesAuthTokenParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterCookiesAuthToken
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_COOKIES_AUTH_TOKEN'
        Type: 'String'
        Value: !Ref twitterCookiesAuthToken
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_COOKIES_AUTH_TOKEN'

    AgentParamTwitterCookiesCt0Parameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterCookiesCt0
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_COOKIES_CT0'
        Type: 'String'
        Value: !Ref twitterCookiesCt0
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_COOKIES_CT0'

    AgentParamTwitterCookiesGuestIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterCookiesGuestId
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_COOKIES_GUEST_ID'
        Type: 'String'
        Value: !Ref twitterCookiesGuestId
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_COOKIES_GUEST_ID'

    AgentParamTwitterPollIntervalParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterPollInterval
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_POLL_INTERVAL'
        Type: 'String'
        Value: !Ref twitterPollInterval
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_POLL_INTERVAL'

    AgentParamTwitterSearchEnableParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterSearchEnable
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_SEARCH_ENABLE'
        Type: 'String'
        Value: !Ref twitterSearchEnable
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_SEARCH_ENABLE'

    AgentParamTwitterTargetUsersParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterTargetUsers
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_TARGET_USERS'
        Type: 'String'
        Value: !Ref twitterTargetUsers
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_TARGET_USERS'

    AgentParamTwitterRetryLimitParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterRetryLimit
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_RETRY_LIMIT'
        Type: 'String'
        Value: !Ref twitterRetryLimit
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_RETRY_LIMIT'

    AgentParamTwitterSpacesEnableParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterSpacesEnable
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_SPACES_ENABLE'
        Type: 'String'
        Value: !Ref twitterSpacesEnable
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_SPACES_ENABLE'

    AgentParamEnableTwitterPostGenerationParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEnableTwitterPostGeneration
      Properties:
        Name: !Sub '${AgentCodeName}_ENABLE_TWITTER_POST_GENERATION'
        Type: 'String'
        Value: !Ref enableTwitterPostGeneration
        Tier: 'Standard'
        Description: 'Parameter for ENABLE_TWITTER_POST_GENERATION'

    AgentParamPostIntervalMinParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPostIntervalMin
      Properties:
        Name: !Sub '${AgentCodeName}_POST_INTERVAL_MIN'
        Type: 'String'
        Value: !Ref postIntervalMin
        Tier: 'Standard'
        Description: 'Parameter for POST_INTERVAL_MIN'

    AgentParamPostIntervalMaxParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPostIntervalMax
      Properties:
        Name: !Sub '${AgentCodeName}_POST_INTERVAL_MAX'
        Type: 'String'
        Value: !Ref postIntervalMax
        Tier: 'Standard'
        Description: 'Parameter for POST_INTERVAL_MAX'

    AgentParamPostImmediatelyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPostImmediately
      Properties:
        Name: !Sub '${AgentCodeName}_POST_IMMEDIATELY'
        Type: 'String'
        Value: !Ref postImmediately
        Tier: 'Standard'
        Description: 'Parameter for POST_IMMEDIATELY'

    AgentParamActionIntervalParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasActionInterval
      Properties:
        Name: !Sub '${AgentCodeName}_ACTION_INTERVAL'
        Type: 'String'
        Value: !Ref actionInterval
        Tier: 'Standard'
        Description: 'Parameter for ACTION_INTERVAL'

    AgentParamEnableActionProcessingParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEnableActionProcessing
      Properties:
        Name: !Sub '${AgentCodeName}_ENABLE_ACTION_PROCESSING'
        Type: 'String'
        Value: !Ref enableActionProcessing
        Tier: 'Standard'
        Description: 'Parameter for ENABLE_ACTION_PROCESSING'

    AgentParamMaxActionsProcessingParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMaxActionsProcessing
      Properties:
        Name: !Sub '${AgentCodeName}_MAX_ACTIONS_PROCESSING'
        Type: 'String'
        Value: !Ref maxActionsProcessing
        Tier: 'Standard'
        Description: 'Parameter for MAX_ACTIONS_PROCESSING'

    AgentParamActionTimelineTypeParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasActionTimelineType
      Properties:
        Name: !Sub '${AgentCodeName}_ACTION_TIMELINE_TYPE'
        Type: 'String'
        Value: !Ref actionTimelineType
        Tier: 'Standard'
        Description: 'Parameter for ACTION_TIMELINE_TYPE'

    AgentParamTwitterApprovalDiscordChannelIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterApprovalDiscordChannelId
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_APPROVAL_DISCORD_CHANNEL_ID'
        Type: 'String'
        Value: !Ref twitterApprovalDiscordChannelId
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_APPROVAL_DISCORD_CHANNEL_ID'

    AgentParamTwitterApprovalDiscordBotTokenParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterApprovalDiscordBotToken
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_APPROVAL_DISCORD_BOT_TOKEN'
        Type: 'String'
        Value: !Ref twitterApprovalDiscordBotToken
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_APPROVAL_DISCORD_BOT_TOKEN'

    AgentParamTwitterApprovalEnabledParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterApprovalEnabled
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_APPROVAL_ENABLED'
        Type: 'String'
        Value: !Ref twitterApprovalEnabled
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_APPROVAL_ENABLED'

    AgentParamTwitterApprovalCheckIntervalParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTwitterApprovalCheckInterval
      Properties:
        Name: !Sub '${AgentCodeName}_TWITTER_APPROVAL_CHECK_INTERVAL'
        Type: 'String'
        Value: !Ref twitterApprovalCheckInterval
        Tier: 'Standard'
        Description: 'Parameter for TWITTER_APPROVAL_CHECK_INTERVAL'

    AgentParamWhatsappPhoneNumberIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasWhatsappPhoneNumberId
      Properties:
        Name: !Sub '${AgentCodeName}_WHATSAPP_PHONE_NUMBER_ID'
        Type: 'String'
        Value: !Ref whatsappPhoneNumberId
        Tier: 'Standard'
        Description: 'Parameter for WHATSAPP_PHONE_NUMBER_ID'

    AgentParamWhatsappBusinessAccountIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasWhatsappBusinessAccountId
      Properties:
        Name: !Sub '${AgentCodeName}_WHATSAPP_BUSINESS_ACCOUNT_ID'
        Type: 'String'
        Value: !Ref whatsappBusinessAccountId
        Tier: 'Standard'
        Description: 'Parameter for WHATSAPP_BUSINESS_ACCOUNT_ID'

    AgentParamWhatsappWebhookVerifyTokenParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasWhatsappWebhookVerifyToken
      Properties:
        Name: !Sub '${AgentCodeName}_WHATSAPP_WEBHOOK_VERIFY_TOKEN'
        Type: 'String'
        Value: !Ref whatsappWebhookVerifyToken
        Tier: 'Standard'
        Description: 'Parameter for WHATSAPP_WEBHOOK_VERIFY_TOKEN'

    AgentParamWhatsappApiVersionParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasWhatsappApiVersion
      Properties:
        Name: !Sub '${AgentCodeName}_WHATSAPP_API_VERSION'
        Type: 'String'
        Value: !Ref whatsappApiVersion
        Tier: 'Standard'
        Description: 'Parameter for WHATSAPP_API_VERSION'

    AgentParamInstagramUsernameParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInstagramUsername
      Properties:
        Name: !Sub '${AgentCodeName}_INSTAGRAM_USERNAME'
        Type: 'String'
        Value: !Ref instagramUsername
        Tier: 'Standard'
        Description: 'Parameter for INSTAGRAM_USERNAME'

    AgentParamInstagramPasswordParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInstagramPassword
      Properties:
        Name: !Sub '${AgentCodeName}_INSTAGRAM_PASSWORD'
        Type: 'String'
        Value: !Ref instagramPassword
        Tier: 'Standard'
        Description: 'Parameter for INSTAGRAM_PASSWORD'

    AgentParamInstagramAppIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInstagramAppId
      Properties:
        Name: !Sub '${AgentCodeName}_INSTAGRAM_APP_ID'
        Type: 'String'
        Value: !Ref instagramAppId
        Tier: 'Standard'
        Description: 'Parameter for INSTAGRAM_APP_ID'

    AgentParamInstagramAppSecretParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInstagramAppSecret
      Properties:
        Name: !Sub '${AgentCodeName}_INSTAGRAM_APP_SECRET'
        Type: 'String'
        Value: !Ref instagramAppSecret
        Tier: 'Standard'
        Description: 'Parameter for INSTAGRAM_APP_SECRET'

    AgentParamInstagramBusinessAccountIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInstagramBusinessAccountId
      Properties:
        Name: !Sub '${AgentCodeName}_INSTAGRAM_BUSINESS_ACCOUNT_ID'
        Type: 'String'
        Value: !Ref instagramBusinessAccountId
        Tier: 'Standard'
        Description: 'Parameter for INSTAGRAM_BUSINESS_ACCOUNT_ID'

    AgentParamInstagramPostIntervalMinParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInstagramPostIntervalMin
      Properties:
        Name: !Sub '${AgentCodeName}_INSTAGRAM_POST_INTERVAL_MIN'
        Type: 'String'
        Value: !Ref instagramPostIntervalMin
        Tier: 'Standard'
        Description: 'Parameter for INSTAGRAM_POST_INTERVAL_MIN'

    AgentParamInstagramPostIntervalMaxParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInstagramPostIntervalMax
      Properties:
        Name: !Sub '${AgentCodeName}_INSTAGRAM_POST_INTERVAL_MAX'
        Type: 'String'
        Value: !Ref instagramPostIntervalMax
        Tier: 'Standard'
        Description: 'Parameter for INSTAGRAM_POST_INTERVAL_MAX'

    AgentParamInstagramEnableActionProcessingParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInstagramEnableActionProcessing
      Properties:
        Name: !Sub '${AgentCodeName}_INSTAGRAM_ENABLE_ACTION_PROCESSING'
        Type: 'String'
        Value: !Ref instagramEnableActionProcessing
        Tier: 'Standard'
        Description: 'Parameter for INSTAGRAM_ENABLE_ACTION_PROCESSING'

    AgentParamInstagramActionIntervalParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInstagramActionInterval
      Properties:
        Name: !Sub '${AgentCodeName}_INSTAGRAM_ACTION_INTERVAL'
        Type: 'String'
        Value: !Ref instagramActionInterval
        Tier: 'Standard'
        Description: 'Parameter for INSTAGRAM_ACTION_INTERVAL'

    AgentParamInstagramMaxActionsParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInstagramMaxActions
      Properties:
        Name: !Sub '${AgentCodeName}_INSTAGRAM_MAX_ACTIONS'
        Type: 'String'
        Value: !Ref instagramMaxActions
        Tier: 'Standard'
        Description: 'Parameter for INSTAGRAM_MAX_ACTIONS'

    AgentParamAlexaClientIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAlexaClientId
      Properties:
        Name: !Sub '${AgentCodeName}_ALEXA_CLIENT_ID'
        Type: 'String'
        Value: !Ref alexaClientId
        Tier: 'Standard'
        Description: 'Parameter for ALEXA_CLIENT_ID'

    AgentParamAlexaClientSecretParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAlexaClientSecret
      Properties:
        Name: !Sub '${AgentCodeName}_ALEXA_CLIENT_SECRET'
        Type: 'String'
        Value: !Ref alexaClientSecret
        Tier: 'Standard'
        Description: 'Parameter for ALEXA_CLIENT_SECRET'

    AgentParamSimsaiAgentIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSimsaiAgentId
      Properties:
        Name: !Sub '${AgentCodeName}_SIMSAI_AGENT_ID'
        Type: 'String'
        Value: !Ref simsaiAgentId
        Tier: 'Standard'
        Description: 'Parameter for SIMSAI_AGENT_ID'

    AgentParamSimsaiUsernameParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSimsaiUsername
      Properties:
        Name: !Sub '${AgentCodeName}_SIMSAI_USERNAME'
        Type: 'String'
        Value: !Ref simsaiUsername
        Tier: 'Standard'
        Description: 'Parameter for SIMSAI_USERNAME'

    AgentParamSimsaiDryRunParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSimsaiDryRun
      Properties:
        Name: !Sub '${AgentCodeName}_SIMSAI_DRY_RUN'
        Type: 'String'
        Value: !Ref simsaiDryRun
        Tier: 'Standard'
        Description: 'Parameter for SIMSAI_DRY_RUN'

    AgentParamOpenaiApiUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOpenaiApiUrl
      Properties:
        Name: !Sub '${AgentCodeName}_OPENAI_API_URL'
        Type: 'String'
        Value: !Ref openaiApiUrl
        Tier: 'Standard'
        Description: 'Parameter for OPENAI_API_URL'

    AgentParamSmallOpenaiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallOpenaiModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_OPENAI_MODEL'
        Type: 'String'
        Value: !Ref smallOpenaiModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_OPENAI_MODEL'

    AgentParamMediumOpenaiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumOpenaiModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_OPENAI_MODEL'
        Type: 'String'
        Value: !Ref mediumOpenaiModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_OPENAI_MODEL'

    AgentParamLargeOpenaiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeOpenaiModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_OPENAI_MODEL'
        Type: 'String'
        Value: !Ref largeOpenaiModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_OPENAI_MODEL'

    AgentParamEmbeddingOpenaiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmbeddingOpenaiModel
      Properties:
        Name: !Sub '${AgentCodeName}_EMBEDDING_OPENAI_MODEL'
        Type: 'String'
        Value: !Ref embeddingOpenaiModel
        Tier: 'Standard'
        Description: 'Parameter for EMBEDDING_OPENAI_MODEL'

    AgentParamImageOpenaiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasImageOpenaiModel
      Properties:
        Name: !Sub '${AgentCodeName}_IMAGE_OPENAI_MODEL'
        Type: 'String'
        Value: !Ref imageOpenaiModel
        Tier: 'Standard'
        Description: 'Parameter for IMAGE_OPENAI_MODEL'

    AgentParamUseOpenaiEmbeddingParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasUseOpenaiEmbedding
      Properties:
        Name: !Sub '${AgentCodeName}_USE_OPENAI_EMBEDDING'
        Type: 'String'
        Value: !Ref useOpenaiEmbedding
        Tier: 'Standard'
        Description: 'Parameter for USE_OPENAI_EMBEDDING'

    AgentParamEnableOpenAiCommunityPluginParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEnableOpenAiCommunityPlugin
      Properties:
        Name: !Sub '${AgentCodeName}_ENABLE_OPEN_AI_COMMUNITY_PLUGIN'
        Type: 'String'
        Value: !Ref enableOpenAiCommunityPlugin
        Tier: 'Standard'
        Description: 'Parameter for ENABLE_OPEN_AI_COMMUNITY_PLUGIN'

    AgentParamOpenaiDefaultModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOpenaiDefaultModel
      Properties:
        Name: !Sub '${AgentCodeName}_OPENAI_DEFAULT_MODEL'
        Type: 'String'
        Value: !Ref openaiDefaultModel
        Tier: 'Standard'
        Description: 'Parameter for OPENAI_DEFAULT_MODEL'

    AgentParamOpenaiMaxTokensParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOpenaiMaxTokens
      Properties:
        Name: !Sub '${AgentCodeName}_OPENAI_MAX_TOKENS'
        Type: 'String'
        Value: !Ref openaiMaxTokens
        Tier: 'Standard'
        Description: 'Parameter for OPENAI_MAX_TOKENS'

    AgentParamOpenaiTemperatureParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOpenaiTemperature
      Properties:
        Name: !Sub '${AgentCodeName}_OPENAI_TEMPERATURE'
        Type: 'String'
        Value: !Ref openaiTemperature
        Tier: 'Standard'
        Description: 'Parameter for OPENAI_TEMPERATURE'

    AgentParamAtomaApiUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAtomaApiUrl
      Properties:
        Name: !Sub '${AgentCodeName}_ATOMA_API_URL'
        Type: 'String'
        Value: !Ref atomaApiUrl
        Tier: 'Standard'
        Description: 'Parameter for ATOMA_API_URL'

    AgentParamSmallAtomaModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallAtomaModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_ATOMA_MODEL'
        Type: 'String'
        Value: !Ref smallAtomaModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_ATOMA_MODEL'

    AgentParamMediumAtomaModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumAtomaModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_ATOMA_MODEL'
        Type: 'String'
        Value: !Ref mediumAtomaModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_ATOMA_MODEL'

    AgentParamLargeAtomaModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeAtomaModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_ATOMA_MODEL'
        Type: 'String'
        Value: !Ref largeAtomaModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_ATOMA_MODEL'

    AgentParamEternalaiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEternalaiModel
      Properties:
        Name: !Sub '${AgentCodeName}_ETERNALAI_MODEL'
        Type: 'String'
        Value: !Ref eternalaiModel
        Tier: 'Standard'
        Description: 'Parameter for ETERNALAI_MODEL'

    AgentParamEternalaiChainIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEternalaiChainId
      Properties:
        Name: !Sub '${AgentCodeName}_ETERNALAI_CHAIN_ID'
        Type: 'String'
        Value: !Ref eternalaiChainId
        Tier: 'Standard'
        Description: 'Parameter for ETERNALAI_CHAIN_ID'

    AgentParamEternalaiRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEternalaiRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_ETERNALAI_RPC_URL'
        Type: 'String'
        Value: !Ref eternalaiRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for ETERNALAI_RPC_URL'

    AgentParamEternalaiAgentContractAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEternalaiAgentContractAddress
      Properties:
        Name: !Sub '${AgentCodeName}_ETERNALAI_AGENT_CONTRACT_ADDRESS'
        Type: 'String'
        Value: !Ref eternalaiAgentContractAddress
        Tier: 'Standard'
        Description: 'Parameter for ETERNALAI_AGENT_CONTRACT_ADDRESS'

    AgentParamEternalaiAgentIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEternalaiAgentId
      Properties:
        Name: !Sub '${AgentCodeName}_ETERNALAI_AGENT_ID'
        Type: 'String'
        Value: !Ref eternalaiAgentId
        Tier: 'Standard'
        Description: 'Parameter for ETERNALAI_AGENT_ID'

    AgentParamEternalaiApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEternalaiApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_ETERNALAI_API_KEY'
        Type: 'String'
        Value: !Ref eternalaiApiKey
        Tier: 'Standard'
        Description: 'Parameter for ETERNALAI_API_KEY'

    AgentParamEternalaiLogParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEternalaiLog
      Properties:
        Name: !Sub '${AgentCodeName}_ETERNALAI_LOG'
        Type: 'String'
        Value: !Ref eternalaiLog
        Tier: 'Standard'
        Description: 'Parameter for ETERNALAI_LOG'

    AgentParamHyperbolicModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasHyperbolicModel
      Properties:
        Name: !Sub '${AgentCodeName}_HYPERBOLIC_MODEL'
        Type: 'String'
        Value: !Ref hyperbolicModel
        Tier: 'Standard'
        Description: 'Parameter for HYPERBOLIC_MODEL'

    AgentParamImageHyperbolicModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasImageHyperbolicModel
      Properties:
        Name: !Sub '${AgentCodeName}_IMAGE_HYPERBOLIC_MODEL'
        Type: 'String'
        Value: !Ref imageHyperbolicModel
        Tier: 'Standard'
        Description: 'Parameter for IMAGE_HYPERBOLIC_MODEL'

    AgentParamSmallHyperbolicModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallHyperbolicModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_HYPERBOLIC_MODEL'
        Type: 'String'
        Value: !Ref smallHyperbolicModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_HYPERBOLIC_MODEL'

    AgentParamMediumHyperbolicModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumHyperbolicModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_HYPERBOLIC_MODEL'
        Type: 'String'
        Value: !Ref mediumHyperbolicModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_HYPERBOLIC_MODEL'

    AgentParamLargeHyperbolicModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeHyperbolicModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_HYPERBOLIC_MODEL'
        Type: 'String'
        Value: !Ref largeHyperbolicModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_HYPERBOLIC_MODEL'

    AgentParamHyperbolicEnvParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasHyperbolicEnv
      Properties:
        Name: !Sub '${AgentCodeName}_HYPERBOLIC_ENV'
        Type: 'String'
        Value: !Ref hyperbolicEnv
        Tier: 'Standard'
        Description: 'Parameter for HYPERBOLIC_ENV'

    AgentParamHyperbolicGranularLogParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasHyperbolicGranularLog
      Properties:
        Name: !Sub '${AgentCodeName}_HYPERBOLIC_GRANULAR_LOG'
        Type: 'String'
        Value: !Ref hyperbolicGranularLog
        Tier: 'Standard'
        Description: 'Parameter for HYPERBOLIC_GRANULAR_LOG'

    AgentParamHyperbolicSpashParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasHyperbolicSpash
      Properties:
        Name: !Sub '${AgentCodeName}_HYPERBOLIC_SPASH'
        Type: 'String'
        Value: !Ref hyperbolicSpash
        Tier: 'Standard'
        Description: 'Parameter for HYPERBOLIC_SPASH'

    AgentParamHyperbolicLogLevelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasHyperbolicLogLevel
      Properties:
        Name: !Sub '${AgentCodeName}_HYPERBOLIC_LOG_LEVEL'
        Type: 'String'
        Value: !Ref hyperbolicLogLevel
        Tier: 'Standard'
        Description: 'Parameter for HYPERBOLIC_LOG_LEVEL'

    AgentParamInferaModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInferaModel
      Properties:
        Name: !Sub '${AgentCodeName}_INFERA_MODEL'
        Type: 'String'
        Value: !Ref inferaModel
        Tier: 'Standard'
        Description: 'Parameter for INFERA_MODEL'

    AgentParamInferaServerUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInferaServerUrl
      Properties:
        Name: !Sub '${AgentCodeName}_INFERA_SERVER_URL'
        Type: 'String'
        Value: !Ref inferaServerUrl
        Tier: 'Standard'
        Description: 'Parameter for INFERA_SERVER_URL'

    AgentParamSmallInferaModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallInferaModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_INFERA_MODEL'
        Type: 'String'
        Value: !Ref smallInferaModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_INFERA_MODEL'

    AgentParamMediumInferaModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumInferaModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_INFERA_MODEL'
        Type: 'String'
        Value: !Ref mediumInferaModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_INFERA_MODEL'

    AgentParamLargeInferaModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeInferaModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_INFERA_MODEL'
        Type: 'String'
        Value: !Ref largeInferaModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_INFERA_MODEL'

    AgentParamSmallVeniceModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallVeniceModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_VENICE_MODEL'
        Type: 'String'
        Value: !Ref smallVeniceModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_VENICE_MODEL'

    AgentParamMediumVeniceModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumVeniceModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_VENICE_MODEL'
        Type: 'String'
        Value: !Ref mediumVeniceModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_VENICE_MODEL'

    AgentParamLargeVeniceModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeVeniceModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_VENICE_MODEL'
        Type: 'String'
        Value: !Ref largeVeniceModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_VENICE_MODEL'

    AgentParamImageVeniceModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasImageVeniceModel
      Properties:
        Name: !Sub '${AgentCodeName}_IMAGE_VENICE_MODEL'
        Type: 'String'
        Value: !Ref imageVeniceModel
        Tier: 'Standard'
        Description: 'Parameter for IMAGE_VENICE_MODEL'

    AgentParamSmallNineteenAiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallNineteenAiModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_NINETEEN_AI_MODEL'
        Type: 'String'
        Value: !Ref smallNineteenAiModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_NINETEEN_AI_MODEL'

    AgentParamMediumNineteenAiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumNineteenAiModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_NINETEEN_AI_MODEL'
        Type: 'String'
        Value: !Ref mediumNineteenAiModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_NINETEEN_AI_MODEL'

    AgentParamLargeNineteenAiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeNineteenAiModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_NINETEEN_AI_MODEL'
        Type: 'String'
        Value: !Ref largeNineteenAiModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_NINETEEN_AI_MODEL'

    AgentParamImageNineteenAiModeParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasImageNineteenAiMode
      Properties:
        Name: !Sub '${AgentCodeName}_IMAGE_NINETEEN_AI_MODE'
        Type: 'String'
        Value: !Ref imageNineteenAiMode
        Tier: 'Standard'
        Description: 'Parameter for IMAGE_NINETEEN_AI_MODE'

    AgentParamSmallAkashChatApiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallAkashChatApiModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_AKASH_CHAT_API_MODEL'
        Type: 'String'
        Value: !Ref smallAkashChatApiModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_AKASH_CHAT_API_MODEL'

    AgentParamMediumAkashChatApiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumAkashChatApiModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_AKASH_CHAT_API_MODEL'
        Type: 'String'
        Value: !Ref mediumAkashChatApiModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_AKASH_CHAT_API_MODEL'

    AgentParamLargeAkashChatApiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeAkashChatApiModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_AKASH_CHAT_API_MODEL'
        Type: 'String'
        Value: !Ref largeAkashChatApiModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_AKASH_CHAT_API_MODEL'

    AgentParamImageLivepeerModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasImageLivepeerModel
      Properties:
        Name: !Sub '${AgentCodeName}_IMAGE_LIVEPEER_MODEL'
        Type: 'String'
        Value: !Ref imageLivepeerModel
        Tier: 'Standard'
        Description: 'Parameter for IMAGE_LIVEPEER_MODEL'

    AgentParamSmallLivepeerModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallLivepeerModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_LIVEPEER_MODEL'
        Type: 'String'
        Value: !Ref smallLivepeerModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_LIVEPEER_MODEL'

    AgentParamMediumLivepeerModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumLivepeerModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_LIVEPEER_MODEL'
        Type: 'String'
        Value: !Ref mediumLivepeerModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_LIVEPEER_MODEL'

    AgentParamLargeLivepeerModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeLivepeerModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_LIVEPEER_MODEL'
        Type: 'String'
        Value: !Ref largeLivepeerModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_LIVEPEER_MODEL'

    AgentParamElevenlabsModelIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasElevenlabsModelId
      Properties:
        Name: !Sub '${AgentCodeName}_ELEVENLABS_MODEL_ID'
        Type: 'String'
        Value: !Ref elevenlabsModelId
        Tier: 'Standard'
        Description: 'Parameter for ELEVENLABS_MODEL_ID'

    AgentParamElevenlabsVoiceIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasElevenlabsVoiceId
      Properties:
        Name: !Sub '${AgentCodeName}_ELEVENLABS_VOICE_ID'
        Type: 'String'
        Value: !Ref elevenlabsVoiceId
        Tier: 'Standard'
        Description: 'Parameter for ELEVENLABS_VOICE_ID'

    AgentParamElevenlabsVoiceStabilityParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasElevenlabsVoiceStability
      Properties:
        Name: !Sub '${AgentCodeName}_ELEVENLABS_VOICE_STABILITY'
        Type: 'String'
        Value: !Ref elevenlabsVoiceStability
        Tier: 'Standard'
        Description: 'Parameter for ELEVENLABS_VOICE_STABILITY'

    AgentParamElevenlabsVoiceSimilarityBoostParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasElevenlabsVoiceSimilarityBoost
      Properties:
        Name: !Sub '${AgentCodeName}_ELEVENLABS_VOICE_SIMILARITY_BOOST'
        Type: 'String'
        Value: !Ref elevenlabsVoiceSimilarityBoost
        Tier: 'Standard'
        Description: 'Parameter for ELEVENLABS_VOICE_SIMILARITY_BOOST'

    AgentParamElevenlabsVoiceStyleParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasElevenlabsVoiceStyle
      Properties:
        Name: !Sub '${AgentCodeName}_ELEVENLABS_VOICE_STYLE'
        Type: 'String'
        Value: !Ref elevenlabsVoiceStyle
        Tier: 'Standard'
        Description: 'Parameter for ELEVENLABS_VOICE_STYLE'

    AgentParamElevenlabsVoiceUseSpeakerBoostParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasElevenlabsVoiceUseSpeakerBoost
      Properties:
        Name: !Sub '${AgentCodeName}_ELEVENLABS_VOICE_USE_SPEAKER_BOOST'
        Type: 'String'
        Value: !Ref elevenlabsVoiceUseSpeakerBoost
        Tier: 'Standard'
        Description: 'Parameter for ELEVENLABS_VOICE_USE_SPEAKER_BOOST'

    AgentParamElevenlabsOptimizeStreamingLatencyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasElevenlabsOptimizeStreamingLatency
      Properties:
        Name: !Sub '${AgentCodeName}_ELEVENLABS_OPTIMIZE_STREAMING_LATENCY'
        Type: 'String'
        Value: !Ref elevenlabsOptimizeStreamingLatency
        Tier: 'Standard'
        Description: 'Parameter for ELEVENLABS_OPTIMIZE_STREAMING_LATENCY'

    AgentParamElevenlabsOutputFormatParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasElevenlabsOutputFormat
      Properties:
        Name: !Sub '${AgentCodeName}_ELEVENLABS_OUTPUT_FORMAT'
        Type: 'String'
        Value: !Ref elevenlabsOutputFormat
        Tier: 'Standard'
        Description: 'Parameter for ELEVENLABS_OUTPUT_FORMAT'

    AgentParamOpenrouterModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOpenrouterModel
      Properties:
        Name: !Sub '${AgentCodeName}_OPENROUTER_MODEL'
        Type: 'String'
        Value: !Ref openrouterModel
        Tier: 'Standard'
        Description: 'Parameter for OPENROUTER_MODEL'

    AgentParamSmallOpenrouterModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallOpenrouterModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_OPENROUTER_MODEL'
        Type: 'String'
        Value: !Ref smallOpenrouterModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_OPENROUTER_MODEL'

    AgentParamMediumOpenrouterModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumOpenrouterModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_OPENROUTER_MODEL'
        Type: 'String'
        Value: !Ref mediumOpenrouterModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_OPENROUTER_MODEL'

    AgentParamLargeOpenrouterModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeOpenrouterModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_OPENROUTER_MODEL'
        Type: 'String'
        Value: !Ref largeOpenrouterModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_OPENROUTER_MODEL'

    AgentParamRedpillModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasRedpillModel
      Properties:
        Name: !Sub '${AgentCodeName}_REDPILL_MODEL'
        Type: 'String'
        Value: !Ref redpillModel
        Tier: 'Standard'
        Description: 'Parameter for REDPILL_MODEL'

    AgentParamSmallRedpillModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallRedpillModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_REDPILL_MODEL'
        Type: 'String'
        Value: !Ref smallRedpillModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_REDPILL_MODEL'

    AgentParamMediumRedpillModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumRedpillModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_REDPILL_MODEL'
        Type: 'String'
        Value: !Ref mediumRedpillModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_REDPILL_MODEL'

    AgentParamLargeRedpillModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeRedpillModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_REDPILL_MODEL'
        Type: 'String'
        Value: !Ref largeRedpillModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_REDPILL_MODEL'

    AgentParamSmallGrokModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallGrokModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_GROK_MODEL'
        Type: 'String'
        Value: !Ref smallGrokModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_GROK_MODEL'

    AgentParamMediumGrokModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumGrokModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_GROK_MODEL'
        Type: 'String'
        Value: !Ref mediumGrokModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_GROK_MODEL'

    AgentParamLargeGrokModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeGrokModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_GROK_MODEL'
        Type: 'String'
        Value: !Ref largeGrokModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_GROK_MODEL'

    AgentParamEmbeddingGrokModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmbeddingGrokModel
      Properties:
        Name: !Sub '${AgentCodeName}_EMBEDDING_GROK_MODEL'
        Type: 'String'
        Value: !Ref embeddingGrokModel
        Tier: 'Standard'
        Description: 'Parameter for EMBEDDING_GROK_MODEL'

    AgentParamOllamaModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOllamaModel
      Properties:
        Name: !Sub '${AgentCodeName}_OLLAMA_MODEL'
        Type: 'String'
        Value: !Ref ollamaModel
        Tier: 'Standard'
        Description: 'Parameter for OLLAMA_MODEL'

    AgentParamUseOllamaEmbeddingParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasUseOllamaEmbedding
      Properties:
        Name: !Sub '${AgentCodeName}_USE_OLLAMA_EMBEDDING'
        Type: 'String'
        Value: !Ref useOllamaEmbedding
        Tier: 'Standard'
        Description: 'Parameter for USE_OLLAMA_EMBEDDING'

    AgentParamOllamaEmbeddingModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOllamaEmbeddingModel
      Properties:
        Name: !Sub '${AgentCodeName}_OLLAMA_EMBEDDING_MODEL'
        Type: 'String'
        Value: !Ref ollamaEmbeddingModel
        Tier: 'Standard'
        Description: 'Parameter for OLLAMA_EMBEDDING_MODEL'

    AgentParamSmallOllamaModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallOllamaModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_OLLAMA_MODEL'
        Type: 'String'
        Value: !Ref smallOllamaModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_OLLAMA_MODEL'

    AgentParamMediumOllamaModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumOllamaModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_OLLAMA_MODEL'
        Type: 'String'
        Value: !Ref mediumOllamaModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_OLLAMA_MODEL'

    AgentParamLargeOllamaModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeOllamaModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_OLLAMA_MODEL'
        Type: 'String'
        Value: !Ref largeOllamaModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_OLLAMA_MODEL'

    AgentParamSmallGoogleModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallGoogleModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_GOOGLE_MODEL'
        Type: 'String'
        Value: !Ref smallGoogleModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_GOOGLE_MODEL'

    AgentParamMediumGoogleModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumGoogleModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_GOOGLE_MODEL'
        Type: 'String'
        Value: !Ref mediumGoogleModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_GOOGLE_MODEL'

    AgentParamLargeGoogleModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeGoogleModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_GOOGLE_MODEL'
        Type: 'String'
        Value: !Ref largeGoogleModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_GOOGLE_MODEL'

    AgentParamEmbeddingGoogleModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmbeddingGoogleModel
      Properties:
        Name: !Sub '${AgentCodeName}_EMBEDDING_GOOGLE_MODEL'
        Type: 'String'
        Value: !Ref embeddingGoogleModel
        Tier: 'Standard'
        Description: 'Parameter for EMBEDDING_GOOGLE_MODEL'

    AgentParamGoogleGenerativeAiApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasGoogleGenerativeAiApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_GOOGLE_GENERATIVE_AI_API_KEY'
        Type: 'String'
        Value: !Ref googleGenerativeAiApiKey
        Tier: 'Standard'
        Description: 'Parameter for GOOGLE_GENERATIVE_AI_API_KEY'

    AgentParamSmallMistralModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallMistralModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_MISTRAL_MODEL'
        Type: 'String'
        Value: !Ref smallMistralModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_MISTRAL_MODEL'

    AgentParamMediumMistralModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumMistralModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_MISTRAL_MODEL'
        Type: 'String'
        Value: !Ref mediumMistralModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_MISTRAL_MODEL'

    AgentParamLargeMistralModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeMistralModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_MISTRAL_MODEL'
        Type: 'String'
        Value: !Ref largeMistralModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_MISTRAL_MODEL'

    AgentParamSmallGroqModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallGroqModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_GROQ_MODEL'
        Type: 'String'
        Value: !Ref smallGroqModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_GROQ_MODEL'

    AgentParamMediumGroqModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumGroqModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_GROQ_MODEL'
        Type: 'String'
        Value: !Ref mediumGroqModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_GROQ_MODEL'

    AgentParamLargeGroqModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeGroqModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_GROQ_MODEL'
        Type: 'String'
        Value: !Ref largeGroqModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_GROQ_MODEL'

    AgentParamEmbeddingGroqModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmbeddingGroqModel
      Properties:
        Name: !Sub '${AgentCodeName}_EMBEDDING_GROQ_MODEL'
        Type: 'String'
        Value: !Ref embeddingGroqModel
        Tier: 'Standard'
        Description: 'Parameter for EMBEDDING_GROQ_MODEL'

    AgentParamMediumNanogptModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumNanogptModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_NANOGPT_MODEL'
        Type: 'String'
        Value: !Ref mediumNanogptModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_NANOGPT_MODEL'

    AgentParamLargeNanogptModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeNanogptModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_NANOGPT_MODEL'
        Type: 'String'
        Value: !Ref largeNanogptModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_NANOGPT_MODEL'

    AgentParamNanogptApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNanogptApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_NANOGPT_API_KEY'
        Type: 'String'
        Value: !Ref nanogptApiKey
        Tier: 'Standard'
        Description: 'Parameter for NANOGPT_API_KEY'

    AgentParamSmallAnthropicModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallAnthropicModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_ANTHROPIC_MODEL'
        Type: 'String'
        Value: !Ref smallAnthropicModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_ANTHROPIC_MODEL'

    AgentParamMediumAnthropicModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumAnthropicModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_ANTHROPIC_MODEL'
        Type: 'String'
        Value: !Ref mediumAnthropicModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_ANTHROPIC_MODEL'

    AgentParamLargeAnthropicModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeAnthropicModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_ANTHROPIC_MODEL'
        Type: 'String'
        Value: !Ref largeAnthropicModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_ANTHROPIC_MODEL'

    AgentParamSmallHeuristModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallHeuristModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_HEURIST_MODEL'
        Type: 'String'
        Value: !Ref smallHeuristModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_HEURIST_MODEL'

    AgentParamMediumHeuristModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumHeuristModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_HEURIST_MODEL'
        Type: 'String'
        Value: !Ref mediumHeuristModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_HEURIST_MODEL'

    AgentParamLargeHeuristModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeHeuristModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_HEURIST_MODEL'
        Type: 'String'
        Value: !Ref largeHeuristModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_HEURIST_MODEL'

    AgentParamHeuristImageModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasHeuristImageModel
      Properties:
        Name: !Sub '${AgentCodeName}_HEURIST_IMAGE_MODEL'
        Type: 'String'
        Value: !Ref heuristImageModel
        Tier: 'Standard'
        Description: 'Parameter for HEURIST_IMAGE_MODEL'

    AgentParamHeuristEmbeddingModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasHeuristEmbeddingModel
      Properties:
        Name: !Sub '${AgentCodeName}_HEURIST_EMBEDDING_MODEL'
        Type: 'String'
        Value: !Ref heuristEmbeddingModel
        Tier: 'Standard'
        Description: 'Parameter for HEURIST_EMBEDDING_MODEL'

    AgentParamUseHeuristEmbeddingParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasUseHeuristEmbedding
      Properties:
        Name: !Sub '${AgentCodeName}_USE_HEURIST_EMBEDDING'
        Type: 'String'
        Value: !Ref useHeuristEmbedding
        Tier: 'Standard'
        Description: 'Parameter for USE_HEURIST_EMBEDDING'

    AgentParamGaianetServerUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasGaianetServerUrl
      Properties:
        Name: !Sub '${AgentCodeName}_GAIANET_SERVER_URL'
        Type: 'String'
        Value: !Ref gaianetServerUrl
        Tier: 'Standard'
        Description: 'Parameter for GAIANET_SERVER_URL'

    AgentParamSmallGaianetModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallGaianetModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_GAIANET_MODEL'
        Type: 'String'
        Value: !Ref smallGaianetModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_GAIANET_MODEL'

    AgentParamSmallGaianetServerUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallGaianetServerUrl
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_GAIANET_SERVER_URL'
        Type: 'String'
        Value: !Ref smallGaianetServerUrl
        Tier: 'Standard'
        Description: 'Parameter for SMALL_GAIANET_SERVER_URL'

    AgentParamMediumGaianetModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumGaianetModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_GAIANET_MODEL'
        Type: 'String'
        Value: !Ref mediumGaianetModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_GAIANET_MODEL'

    AgentParamMediumGaianetServerUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumGaianetServerUrl
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_GAIANET_SERVER_URL'
        Type: 'String'
        Value: !Ref mediumGaianetServerUrl
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_GAIANET_SERVER_URL'

    AgentParamLargeGaianetModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeGaianetModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_GAIANET_MODEL'
        Type: 'String'
        Value: !Ref largeGaianetModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_GAIANET_MODEL'

    AgentParamLargeGaianetServerUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeGaianetServerUrl
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_GAIANET_SERVER_URL'
        Type: 'String'
        Value: !Ref largeGaianetServerUrl
        Tier: 'Standard'
        Description: 'Parameter for LARGE_GAIANET_SERVER_URL'

    AgentParamGaianetEmbeddingModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasGaianetEmbeddingModel
      Properties:
        Name: !Sub '${AgentCodeName}_GAIANET_EMBEDDING_MODEL'
        Type: 'String'
        Value: !Ref gaianetEmbeddingModel
        Tier: 'Standard'
        Description: 'Parameter for GAIANET_EMBEDDING_MODEL'

    AgentParamUseGaianetEmbeddingParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasUseGaianetEmbedding
      Properties:
        Name: !Sub '${AgentCodeName}_USE_GAIANET_EMBEDDING'
        Type: 'String'
        Value: !Ref useGaianetEmbedding
        Tier: 'Standard'
        Description: 'Parameter for USE_GAIANET_EMBEDDING'

    AgentParamVolengineModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasVolengineModel
      Properties:
        Name: !Sub '${AgentCodeName}_VOLENGINE_MODEL'
        Type: 'String'
        Value: !Ref volengineModel
        Tier: 'Standard'
        Description: 'Parameter for VOLENGINE_MODEL'

    AgentParamSmallVolengineModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallVolengineModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_VOLENGINE_MODEL'
        Type: 'String'
        Value: !Ref smallVolengineModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_VOLENGINE_MODEL'

    AgentParamMediumVolengineModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumVolengineModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_VOLENGINE_MODEL'
        Type: 'String'
        Value: !Ref mediumVolengineModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_VOLENGINE_MODEL'

    AgentParamLargeVolengineModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeVolengineModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_VOLENGINE_MODEL'
        Type: 'String'
        Value: !Ref largeVolengineModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_VOLENGINE_MODEL'

    AgentParamVolengineEmbeddingModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasVolengineEmbeddingModel
      Properties:
        Name: !Sub '${AgentCodeName}_VOLENGINE_EMBEDDING_MODEL'
        Type: 'String'
        Value: !Ref volengineEmbeddingModel
        Tier: 'Standard'
        Description: 'Parameter for VOLENGINE_EMBEDDING_MODEL'

    AgentParamDeepseekApiUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDeepseekApiUrl
      Properties:
        Name: !Sub '${AgentCodeName}_DEEPSEEK_API_URL'
        Type: 'String'
        Value: !Ref deepseekApiUrl
        Tier: 'Standard'
        Description: 'Parameter for DEEPSEEK_API_URL'

    AgentParamSmallDeepseekModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallDeepseekModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_DEEPSEEK_MODEL'
        Type: 'String'
        Value: !Ref smallDeepseekModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_DEEPSEEK_MODEL'

    AgentParamMediumDeepseekModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumDeepseekModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_DEEPSEEK_MODEL'
        Type: 'String'
        Value: !Ref mediumDeepseekModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_DEEPSEEK_MODEL'

    AgentParamLargeDeepseekModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeDeepseekModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_DEEPSEEK_MODEL'
        Type: 'String'
        Value: !Ref largeDeepseekModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_DEEPSEEK_MODEL'

    AgentParamFalAiLoraPathParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasFalAiLoraPath
      Properties:
        Name: !Sub '${AgentCodeName}_FAL_AI_LORA_PATH'
        Type: 'String'
        Value: !Ref falAiLoraPath
        Tier: 'Standard'
        Description: 'Parameter for FAL_AI_LORA_PATH'

    AgentParamLetzaiModelsParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLetzaiModels
      Properties:
        Name: !Sub '${AgentCodeName}_LETZAI_MODELS'
        Type: 'String'
        Value: !Ref letzaiModels
        Tier: 'Standard'
        Description: 'Parameter for LETZAI_MODELS'

    AgentParamSmallGaladrielModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallGaladrielModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_GALADRIEL_MODEL'
        Type: 'String'
        Value: !Ref smallGaladrielModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_GALADRIEL_MODEL'

    AgentParamMediumGaladrielModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumGaladrielModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_GALADRIEL_MODEL'
        Type: 'String'
        Value: !Ref mediumGaladrielModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_GALADRIEL_MODEL'

    AgentParamLargeGaladrielModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeGaladrielModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_GALADRIEL_MODEL'
        Type: 'String'
        Value: !Ref largeGaladrielModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_GALADRIEL_MODEL'

    AgentParamGaladrielFineTuneApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasGaladrielFineTuneApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_GALADRIEL_FINE_TUNE_API_KEY'
        Type: 'String'
        Value: !Ref galadrielFineTuneApiKey
        Tier: 'Standard'
        Description: 'Parameter for GALADRIEL_FINE_TUNE_API_KEY'

    AgentParamLmstudioModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLmstudioModel
      Properties:
        Name: !Sub '${AgentCodeName}_LMSTUDIO_MODEL'
        Type: 'String'
        Value: !Ref lmstudioModel
        Tier: 'Standard'
        Description: 'Parameter for LMSTUDIO_MODEL'

    AgentParamSmallLmstudioModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallLmstudioModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_LMSTUDIO_MODEL'
        Type: 'String'
        Value: !Ref smallLmstudioModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_LMSTUDIO_MODEL'

    AgentParamMediumLmstudioModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumLmstudioModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_LMSTUDIO_MODEL'
        Type: 'String'
        Value: !Ref mediumLmstudioModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_LMSTUDIO_MODEL'

    AgentParamLargeLmstudioModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeLmstudioModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_LMSTUDIO_MODEL'
        Type: 'String'
        Value: !Ref largeLmstudioModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_LMSTUDIO_MODEL'

    AgentParamSecretAiUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSecretAiUrl
      Properties:
        Name: !Sub '${AgentCodeName}_SECRET_AI_URL'
        Type: 'String'
        Value: !Ref secretAiUrl
        Tier: 'Standard'
        Description: 'Parameter for SECRET_AI_URL'

    AgentParamSmallSecretAiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallSecretAiModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_SECRET_AI_MODEL'
        Type: 'String'
        Value: !Ref smallSecretAiModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_SECRET_AI_MODEL'

    AgentParamMediumSecretAiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumSecretAiModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_SECRET_AI_MODEL'
        Type: 'String'
        Value: !Ref mediumSecretAiModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_SECRET_AI_MODEL'

    AgentParamLargeSecretAiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeSecretAiModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_SECRET_AI_MODEL'
        Type: 'String'
        Value: !Ref largeSecretAiModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_SECRET_AI_MODEL'

    AgentParamNearaiApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNearaiApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_NEARAI_API_KEY'
        Type: 'String'
        Value: !Ref nearaiApiKey
        Tier: 'Standard'
        Description: 'Parameter for NEARAI_API_KEY'

    AgentParamNearaiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNearaiModel
      Properties:
        Name: !Sub '${AgentCodeName}_NEARAI_MODEL'
        Type: 'String'
        Value: !Ref nearaiModel
        Tier: 'Standard'
        Description: 'Parameter for NEARAI_MODEL'

    AgentParamSmallNearaiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSmallNearaiModel
      Properties:
        Name: !Sub '${AgentCodeName}_SMALL_NEARAI_MODEL'
        Type: 'String'
        Value: !Ref smallNearaiModel
        Tier: 'Standard'
        Description: 'Parameter for SMALL_NEARAI_MODEL'

    AgentParamMediumNearaiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMediumNearaiModel
      Properties:
        Name: !Sub '${AgentCodeName}_MEDIUM_NEARAI_MODEL'
        Type: 'String'
        Value: !Ref mediumNearaiModel
        Tier: 'Standard'
        Description: 'Parameter for MEDIUM_NEARAI_MODEL'

    AgentParamLargeNearaiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLargeNearaiModel
      Properties:
        Name: !Sub '${AgentCodeName}_LARGE_NEARAI_MODEL'
        Type: 'String'
        Value: !Ref largeNearaiModel
        Tier: 'Standard'
        Description: 'Parameter for LARGE_NEARAI_MODEL'

    AgentParamImageNearaiModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasImageNearaiModel
      Properties:
        Name: !Sub '${AgentCodeName}_IMAGE_NEARAI_MODEL'
        Type: 'String'
        Value: !Ref imageNearaiModel
        Tier: 'Standard'
        Description: 'Parameter for IMAGE_NEARAI_MODEL'

    AgentParamCoingeckoProApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCoingeckoProApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_COINGECKO_PRO_API_KEY'
        Type: 'String'
        Value: !Ref coingeckoProApiKey
        Tier: 'Standard'
        Description: 'Parameter for COINGECKO_PRO_API_KEY'

    AgentParamEvmProviderUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEvmProviderUrl
      Properties:
        Name: !Sub '${AgentCodeName}_EVM_PROVIDER_URL'
        Type: 'String'
        Value: !Ref evmProviderUrl
        Tier: 'Standard'
        Description: 'Parameter for EVM_PROVIDER_URL'

    AgentParamZilliqaProviderUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasZilliqaProviderUrl
      Properties:
        Name: !Sub '${AgentCodeName}_ZILLIQA_PROVIDER_URL'
        Type: 'String'
        Value: !Ref zilliqaProviderUrl
        Tier: 'Standard'
        Description: 'Parameter for ZILLIQA_PROVIDER_URL'

    AgentParamAvalanchePublicKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAvalanchePublicKey
      Properties:
        Name: !Sub '${AgentCodeName}_AVALANCHE_PUBLIC_KEY'
        Type: 'String'
        Value: !Ref avalanchePublicKey
        Tier: 'Standard'
        Description: 'Parameter for AVALANCHE_PUBLIC_KEY'

    AgentParamSolanaPublicKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSolanaPublicKey
      Properties:
        Name: !Sub '${AgentCodeName}_SOLANA_PUBLIC_KEY'
        Type: 'String'
        Value: !Ref solanaPublicKey
        Tier: 'Standard'
        Description: 'Parameter for SOLANA_PUBLIC_KEY'

    AgentParamSolanaClusterParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSolanaCluster
      Properties:
        Name: !Sub '${AgentCodeName}_SOLANA_CLUSTER'
        Type: 'String'
        Value: !Ref solanaCluster
        Tier: 'Standard'
        Description: 'Parameter for SOLANA_CLUSTER'

    AgentParamSolanaAdminPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSolanaAdminPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_SOLANA_ADMIN_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref solanaAdminPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for SOLANA_ADMIN_PRIVATE_KEY'

    AgentParamSolanaAdminPublicKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSolanaAdminPublicKey
      Properties:
        Name: !Sub '${AgentCodeName}_SOLANA_ADMIN_PUBLIC_KEY'
        Type: 'String'
        Value: !Ref solanaAdminPublicKey
        Tier: 'Standard'
        Description: 'Parameter for SOLANA_ADMIN_PUBLIC_KEY'

    AgentParamSolanaVerifyTokenParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSolanaVerifyToken
      Properties:
        Name: !Sub '${AgentCodeName}_SOLANA_VERIFY_TOKEN'
        Type: 'String'
        Value: !Ref solanaVerifyToken
        Tier: 'Standard'
        Description: 'Parameter for SOLANA_VERIFY_TOKEN'

    AgentParamSolAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSolAddress
      Properties:
        Name: !Sub '${AgentCodeName}_SOL_ADDRESS'
        Type: 'String'
        Value: !Ref solAddress
        Tier: 'Standard'
        Description: 'Parameter for SOL_ADDRESS'

    AgentParamSlippageParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSlippage
      Properties:
        Name: !Sub '${AgentCodeName}_SLIPPAGE'
        Type: 'String'
        Value: !Ref slippage
        Tier: 'Standard'
        Description: 'Parameter for SLIPPAGE'

    AgentParamBaseMintParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasBaseMint
      Properties:
        Name: !Sub '${AgentCodeName}_BASE_MINT'
        Type: 'String'
        Value: !Ref baseMint
        Tier: 'Standard'
        Description: 'Parameter for BASE_MINT'

    AgentParamSolanaRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSolanaRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_SOLANA_RPC_URL'
        Type: 'String'
        Value: !Ref solanaRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for SOLANA_RPC_URL'

    AgentParamHeliusApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasHeliusApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_HELIUS_API_KEY'
        Type: 'String'
        Value: !Ref heliusApiKey
        Tier: 'Standard'
        Description: 'Parameter for HELIUS_API_KEY'

    AgentParamInjectivePublicKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInjectivePublicKey
      Properties:
        Name: !Sub '${AgentCodeName}_INJECTIVE_PUBLIC_KEY'
        Type: 'String'
        Value: !Ref injectivePublicKey
        Tier: 'Standard'
        Description: 'Parameter for INJECTIVE_PUBLIC_KEY'

    AgentParamInjectiveNetworkParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInjectiveNetwork
      Properties:
        Name: !Sub '${AgentCodeName}_INJECTIVE_NETWORK'
        Type: 'String'
        Value: !Ref injectiveNetwork
        Tier: 'Standard'
        Description: 'Parameter for INJECTIVE_NETWORK'

    AgentParamAbstractPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAbstractPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_ABSTRACT_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref abstractPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for ABSTRACT_PRIVATE_KEY'

    AgentParamAbstractRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAbstractRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_ABSTRACT_RPC_URL'
        Type: 'String'
        Value: !Ref abstractRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for ABSTRACT_RPC_URL'

    AgentParamStarknetPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasStarknetPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_STARKNET_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref starknetPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for STARKNET_PRIVATE_KEY'

    AgentParamStarknetRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasStarknetRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_STARKNET_RPC_URL'
        Type: 'String'
        Value: !Ref starknetRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for STARKNET_RPC_URL'

    AgentParamLensPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasLensPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_LENS_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref lensPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for LENS_PRIVATE_KEY'

    AgentParamFormTestnetParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasFormTestnet
      Properties:
        Name: !Sub '${AgentCodeName}_FORM_TESTNET'
        Type: 'String'
        Value: !Ref formTestnet
        Tier: 'Standard'
        Description: 'Parameter for FORM_TESTNET'

    AgentParamCoinbaseApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCoinbaseApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_COINBASE_API_KEY'
        Type: 'String'
        Value: !Ref coinbaseApiKey
        Tier: 'Standard'
        Description: 'Parameter for COINBASE_API_KEY'

    AgentParamCoinbasePrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCoinbasePrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_COINBASE_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref coinbasePrivateKey
        Tier: 'Standard'
        Description: 'Parameter for COINBASE_PRIVATE_KEY'

    AgentParamCoinbaseGeneratedWalletIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCoinbaseGeneratedWalletId
      Properties:
        Name: !Sub '${AgentCodeName}_COINBASE_GENERATED_WALLET_ID'
        Type: 'String'
        Value: !Ref coinbaseGeneratedWalletId
        Tier: 'Standard'
        Description: 'Parameter for COINBASE_GENERATED_WALLET_ID'

    AgentParamCoinbaseGeneratedWalletHexSeedParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCoinbaseGeneratedWalletHexSeed
      Properties:
        Name: !Sub '${AgentCodeName}_COINBASE_GENERATED_WALLET_HEX_SEED'
        Type: 'String'
        Value: !Ref coinbaseGeneratedWalletHexSeed
        Tier: 'Standard'
        Description: 'Parameter for COINBASE_GENERATED_WALLET_HEX_SEED'

    AgentParamCoinbaseNotificationUriParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCoinbaseNotificationUri
      Properties:
        Name: !Sub '${AgentCodeName}_COINBASE_NOTIFICATION_URI'
        Type: 'String'
        Value: !Ref coinbaseNotificationUri
        Tier: 'Standard'
        Description: 'Parameter for COINBASE_NOTIFICATION_URI'

    AgentParamCdpApiKeyPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCdpApiKeyPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_CDP_API_KEY_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref cdpApiKeyPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for CDP_API_KEY_PRIVATE_KEY'

    AgentParamCdpAgentKitNetworkParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCdpAgentKitNetwork
      Properties:
        Name: !Sub '${AgentCodeName}_CDP_AGENT_KIT_NETWORK'
        Type: 'String'
        Value: !Ref cdpAgentKitNetwork
        Tier: 'Standard'
        Description: 'Parameter for CDP_AGENT_KIT_NETWORK'

    AgentParamCharityAddressBaseParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCharityAddressBase
      Properties:
        Name: !Sub '${AgentCodeName}_CHARITY_ADDRESS_BASE'
        Type: 'String'
        Value: !Ref charityAddressBase
        Tier: 'Standard'
        Description: 'Parameter for CHARITY_ADDRESS_BASE'

    AgentParamCharityAddressSolParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCharityAddressSol
      Properties:
        Name: !Sub '${AgentCodeName}_CHARITY_ADDRESS_SOL'
        Type: 'String'
        Value: !Ref charityAddressSol
        Tier: 'Standard'
        Description: 'Parameter for CHARITY_ADDRESS_SOL'

    AgentParamCharityAddressEthParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCharityAddressEth
      Properties:
        Name: !Sub '${AgentCodeName}_CHARITY_ADDRESS_ETH'
        Type: 'String'
        Value: !Ref charityAddressEth
        Tier: 'Standard'
        Description: 'Parameter for CHARITY_ADDRESS_ETH'

    AgentParamCharityAddressArbParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCharityAddressArb
      Properties:
        Name: !Sub '${AgentCodeName}_CHARITY_ADDRESS_ARB'
        Type: 'String'
        Value: !Ref charityAddressArb
        Tier: 'Standard'
        Description: 'Parameter for CHARITY_ADDRESS_ARB'

    AgentParamCharityAddressPolParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCharityAddressPol
      Properties:
        Name: !Sub '${AgentCodeName}_CHARITY_ADDRESS_POL'
        Type: 'String'
        Value: !Ref charityAddressPol
        Tier: 'Standard'
        Description: 'Parameter for CHARITY_ADDRESS_POL'

    AgentParamConfluxCoreSpaceRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasConfluxCoreSpaceRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_CONFLUX_CORE_SPACE_RPC_URL'
        Type: 'String'
        Value: !Ref confluxCoreSpaceRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for CONFLUX_CORE_SPACE_RPC_URL'

    AgentParamConfluxEspacePrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasConfluxEspacePrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_CONFLUX_ESPACE_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref confluxEspacePrivateKey
        Tier: 'Standard'
        Description: 'Parameter for CONFLUX_ESPACE_PRIVATE_KEY'

    AgentParamConfluxEspaceRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasConfluxEspaceRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_CONFLUX_ESPACE_RPC_URL'
        Type: 'String'
        Value: !Ref confluxEspaceRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for CONFLUX_ESPACE_RPC_URL'

    AgentParamConfluxMemeContractAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasConfluxMemeContractAddress
      Properties:
        Name: !Sub '${AgentCodeName}_CONFLUX_MEME_CONTRACT_ADDRESS'
        Type: 'String'
        Value: !Ref confluxMemeContractAddress
        Tier: 'Standard'
        Description: 'Parameter for CONFLUX_MEME_CONTRACT_ADDRESS'

    AgentParamMindColdWalletAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMindColdWalletAddress
      Properties:
        Name: !Sub '${AgentCodeName}_MIND_COLD_WALLET_ADDRESS'
        Type: 'String'
        Value: !Ref mindColdWalletAddress
        Tier: 'Standard'
        Description: 'Parameter for MIND_COLD_WALLET_ADDRESS'

    AgentParamZerogEvmRpcParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasZerogEvmRpc
      Properties:
        Name: !Sub '${AgentCodeName}_ZEROG_EVM_RPC'
        Type: 'String'
        Value: !Ref zerogEvmRpc
        Tier: 'Standard'
        Description: 'Parameter for ZEROG_EVM_RPC'

    AgentParamZerogPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasZerogPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_ZEROG_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref zerogPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for ZEROG_PRIVATE_KEY'

    AgentParamZerogFlowAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasZerogFlowAddress
      Properties:
        Name: !Sub '${AgentCodeName}_ZEROG_FLOW_ADDRESS'
        Type: 'String'
        Value: !Ref zerogFlowAddress
        Tier: 'Standard'
        Description: 'Parameter for ZEROG_FLOW_ADDRESS'

    AgentParamIqsolrpcParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasIqsolrpc
      Properties:
        Name: !Sub '${AgentCodeName}_IQSOlRPC'
        Type: 'String'
        Value: !Ref iqsolrpc
        Tier: 'Standard'
        Description: 'Parameter for IQSOlRPC'

    AgentParamSquidIntegratorIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSquidIntegratorId
      Properties:
        Name: !Sub '${AgentCodeName}_SQUID_INTEGRATOR_ID'
        Type: 'String'
        Value: !Ref squidIntegratorId
        Tier: 'Standard'
        Description: 'Parameter for SQUID_INTEGRATOR_ID'

    AgentParamSquidEvmAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSquidEvmAddress
      Properties:
        Name: !Sub '${AgentCodeName}_SQUID_EVM_ADDRESS'
        Type: 'String'
        Value: !Ref squidEvmAddress
        Tier: 'Standard'
        Description: 'Parameter for SQUID_EVM_ADDRESS'

    AgentParamSquidEvmPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSquidEvmPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_SQUID_EVM_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref squidEvmPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for SQUID_EVM_PRIVATE_KEY'

    AgentParamSquidApiThrottleIntervalParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSquidApiThrottleInterval
      Properties:
        Name: !Sub '${AgentCodeName}_SQUID_API_THROTTLE_INTERVAL'
        Type: 'String'
        Value: !Ref squidApiThrottleInterval
        Tier: 'Standard'
        Description: 'Parameter for SQUID_API_THROTTLE_INTERVAL'

    AgentParamWalletSecretSaltParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasWalletSecretSalt
      Properties:
        Name: !Sub '${AgentCodeName}_WALLET_SECRET_SALT'
        Type: 'String'
        Value: !Ref walletSecretSalt
        Tier: 'Standard'
        Description: 'Parameter for WALLET_SECRET_SALT'

    AgentParamTeeLogDbPathParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTeeLogDbPath
      Properties:
        Name: !Sub '${AgentCodeName}_TEE_LOG_DB_PATH'
        Type: 'String'
        Value: !Ref teeLogDbPath
        Tier: 'Standard'
        Description: 'Parameter for TEE_LOG_DB_PATH'

    AgentParamVlogParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasVlog
      Properties:
        Name: !Sub '${AgentCodeName}_VLOG'
        Type: 'String'
        Value: !Ref vlog
        Tier: 'Standard'
        Description: 'Parameter for VLOG'

    AgentParamEnableTeeLogParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEnableTeeLog
      Properties:
        Name: !Sub '${AgentCodeName}_ENABLE_TEE_LOG'
        Type: 'String'
        Value: !Ref enableTeeLog
        Tier: 'Standard'
        Description: 'Parameter for ENABLE_TEE_LOG'

    AgentParamFlowPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasFlowPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_FLOW_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref flowPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for FLOW_PRIVATE_KEY'

    AgentParamFlowNetworkParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasFlowNetwork
      Properties:
        Name: !Sub '${AgentCodeName}_FLOW_NETWORK'
        Type: 'String'
        Value: !Ref flowNetwork
        Tier: 'Standard'
        Description: 'Parameter for FLOW_NETWORK'

    AgentParamFlowEndpointUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasFlowEndpointUrl
      Properties:
        Name: !Sub '${AgentCodeName}_FLOW_ENDPOINT_URL'
        Type: 'String'
        Value: !Ref flowEndpointUrl
        Tier: 'Standard'
        Description: 'Parameter for FLOW_ENDPOINT_URL'

    AgentParamInternetComputerAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInternetComputerAddress
      Properties:
        Name: !Sub '${AgentCodeName}_INTERNET_COMPUTER_ADDRESS'
        Type: 'String'
        Value: !Ref internetComputerAddress
        Tier: 'Standard'
        Description: 'Parameter for INTERNET_COMPUTER_ADDRESS'

    AgentParamAptosNetworkParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAptosNetwork
      Properties:
        Name: !Sub '${AgentCodeName}_APTOS_NETWORK'
        Type: 'String'
        Value: !Ref aptosNetwork
        Tier: 'Standard'
        Description: 'Parameter for APTOS_NETWORK'

    AgentParamMvxNetworkParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMvxNetwork
      Properties:
        Name: !Sub '${AgentCodeName}_MVX_NETWORK'
        Type: 'String'
        Value: !Ref mvxNetwork
        Tier: 'Standard'
        Description: 'Parameter for MVX_NETWORK'

    AgentParamAccessTokenManagementToParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAccessTokenManagementTo
      Properties:
        Name: !Sub '${AgentCodeName}_ACCESS_TOKEN_MANAGEMENT_TO'
        Type: 'String'
        Value: !Ref accessTokenManagementTo
        Tier: 'Standard'
        Description: 'Parameter for ACCESS_TOKEN_MANAGEMENT_TO'

    AgentParamNearWalletPublicKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNearWalletPublicKey
      Properties:
        Name: !Sub '${AgentCodeName}_NEAR_WALLET_PUBLIC_KEY'
        Type: 'String'
        Value: !Ref nearWalletPublicKey
        Tier: 'Standard'
        Description: 'Parameter for NEAR_WALLET_PUBLIC_KEY'

    AgentParamNearAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNearAddress
      Properties:
        Name: !Sub '${AgentCodeName}_NEAR_ADDRESS'
        Type: 'String'
        Value: !Ref nearAddress
        Tier: 'Standard'
        Description: 'Parameter for NEAR_ADDRESS'

    AgentParamNearSlippageParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNearSlippage
      Properties:
        Name: !Sub '${AgentCodeName}_NEAR_SLIPPAGE'
        Type: 'String'
        Value: !Ref nearSlippage
        Tier: 'Standard'
        Description: 'Parameter for NEAR_SLIPPAGE'

    AgentParamNearRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNearRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_NEAR_RPC_URL'
        Type: 'String'
        Value: !Ref nearRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for NEAR_RPC_URL'

    AgentParamNearNetworkParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNearNetwork
      Properties:
        Name: !Sub '${AgentCodeName}_NEAR_NETWORK'
        Type: 'String'
        Value: !Ref nearNetwork
        Tier: 'Standard'
        Description: 'Parameter for NEAR_NETWORK'

    AgentParamZksyncPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasZksyncPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_ZKSYNC_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref zksyncPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for ZKSYNC_PRIVATE_KEY'

    AgentParamAvailSeedParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAvailSeed
      Properties:
        Name: !Sub '${AgentCodeName}_AVAIL_SEED'
        Type: 'String'
        Value: !Ref availSeed
        Tier: 'Standard'
        Description: 'Parameter for AVAIL_SEED'

    AgentParamAvailAppIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAvailAppId
      Properties:
        Name: !Sub '${AgentCodeName}_AVAIL_APP_ID'
        Type: 'String'
        Value: !Ref availAppId
        Tier: 'Standard'
        Description: 'Parameter for AVAIL_APP_ID'

    AgentParamAvailRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAvailRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_AVAIL_RPC_URL'
        Type: 'String'
        Value: !Ref availRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for AVAIL_RPC_URL'

    AgentParamTeeMarlinAttestationEndpointParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTeeMarlinAttestationEndpoint
      Properties:
        Name: !Sub '${AgentCodeName}_TEE_MARLIN_ATTESTATION_ENDPOINT'
        Type: 'String'
        Value: !Ref teeMarlinAttestationEndpoint
        Tier: 'Standard'
        Description: 'Parameter for TEE_MARLIN_ATTESTATION_ENDPOINT'

    AgentParamTonRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTonRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_TON_RPC_URL'
        Type: 'String'
        Value: !Ref tonRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for TON_RPC_URL'

    AgentParamTonRpcApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTonRpcApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_TON_RPC_API_KEY'
        Type: 'String'
        Value: !Ref tonRpcApiKey
        Tier: 'Standard'
        Description: 'Parameter for TON_RPC_API_KEY'

    AgentParamTonNftImagesFolderParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTonNftImagesFolder
      Properties:
        Name: !Sub '${AgentCodeName}_TON_NFT_IMAGES_FOLDER'
        Type: 'String'
        Value: !Ref tonNftImagesFolder
        Tier: 'Standard'
        Description: 'Parameter for TON_NFT_IMAGES_FOLDER'

    AgentParamTonNftMetadataFolderParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTonNftMetadataFolder
      Properties:
        Name: !Sub '${AgentCodeName}_TON_NFT_METADATA_FOLDER'
        Type: 'String'
        Value: !Ref tonNftMetadataFolder
        Tier: 'Standard'
        Description: 'Parameter for TON_NFT_METADATA_FOLDER'

    AgentParamPinataApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPinataApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_PINATA_API_KEY'
        Type: 'String'
        Value: !Ref pinataApiKey
        Tier: 'Standard'
        Description: 'Parameter for PINATA_API_KEY'

    AgentParamPinataApiSecretParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPinataApiSecret
      Properties:
        Name: !Sub '${AgentCodeName}_PINATA_API_SECRET'
        Type: 'String'
        Value: !Ref pinataApiSecret
        Tier: 'Standard'
        Description: 'Parameter for PINATA_API_SECRET'

    AgentParamSuiNetworkParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSuiNetwork
      Properties:
        Name: !Sub '${AgentCodeName}_SUI_NETWORK'
        Type: 'String'
        Value: !Ref suiNetwork
        Tier: 'Standard'
        Description: 'Parameter for SUI_NETWORK'

    AgentParamMinaNetworkParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasMinaNetwork
      Properties:
        Name: !Sub '${AgentCodeName}_MINA_NETWORK'
        Type: 'String'
        Value: !Ref minaNetwork
        Tier: 'Standard'
        Description: 'Parameter for MINA_NETWORK'

    AgentParamStoryApiBaseUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasStoryApiBaseUrl
      Properties:
        Name: !Sub '${AgentCodeName}_STORY_API_BASE_URL'
        Type: 'String'
        Value: !Ref storyApiBaseUrl
        Tier: 'Standard'
        Description: 'Parameter for STORY_API_BASE_URL'

    AgentParamStoryApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasStoryApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_STORY_API_KEY'
        Type: 'String'
        Value: !Ref storyApiKey
        Tier: 'Standard'
        Description: 'Parameter for STORY_API_KEY'

    AgentParamPinataJwtParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPinataJwt
      Properties:
        Name: !Sub '${AgentCodeName}_PINATA_JWT'
        Type: 'String'
        Value: !Ref pinataJwt
        Tier: 'Standard'
        Description: 'Parameter for PINATA_JWT'

    AgentParamCosmosAvailableChainsParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCosmosAvailableChains
      Properties:
        Name: !Sub '${AgentCodeName}_COSMOS_AVAILABLE_CHAINS'
        Type: 'String'
        Value: !Ref cosmosAvailableChains
        Tier: 'Standard'
        Description: 'Parameter for COSMOS_AVAILABLE_CHAINS'

    AgentParamCronoszkevmPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCronoszkevmPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_CRONOSZKEVM_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref cronoszkevmPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for CRONOSZKEVM_PRIVATE_KEY'

    AgentParamSpheronProviderProxyUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSpheronProviderProxyUrl
      Properties:
        Name: !Sub '${AgentCodeName}_SPHERON_PROVIDER_PROXY_URL'
        Type: 'String'
        Value: !Ref spheronProviderProxyUrl
        Tier: 'Standard'
        Description: 'Parameter for SPHERON_PROVIDER_PROXY_URL'

    AgentParamSpheronWalletAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSpheronWalletAddress
      Properties:
        Name: !Sub '${AgentCodeName}_SPHERON_WALLET_ADDRESS'
        Type: 'String'
        Value: !Ref spheronWalletAddress
        Tier: 'Standard'
        Description: 'Parameter for SPHERON_WALLET_ADDRESS'

    AgentParamBnbPublicKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasBnbPublicKey
      Properties:
        Name: !Sub '${AgentCodeName}_BNB_PUBLIC_KEY'
        Type: 'String'
        Value: !Ref bnbPublicKey
        Tier: 'Standard'
        Description: 'Parameter for BNB_PUBLIC_KEY'

    AgentParamBscProviderUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasBscProviderUrl
      Properties:
        Name: !Sub '${AgentCodeName}_BSC_PROVIDER_URL'
        Type: 'String'
        Value: !Ref bscProviderUrl
        Tier: 'Standard'
        Description: 'Parameter for BSC_PROVIDER_URL'

    AgentParamOpbnbProviderUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOpbnbProviderUrl
      Properties:
        Name: !Sub '${AgentCodeName}_OPBNB_PROVIDER_URL'
        Type: 'String'
        Value: !Ref opbnbProviderUrl
        Tier: 'Standard'
        Description: 'Parameter for OPBNB_PROVIDER_URL'

    AgentParamBitmindApiTokenParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasBitmindApiToken
      Properties:
        Name: !Sub '${AgentCodeName}_BITMIND_API_TOKEN'
        Type: 'String'
        Value: !Ref bitmindApiToken
        Tier: 'Standard'
        Description: 'Parameter for BITMIND_API_TOKEN'

    AgentParamPassportScorerParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPassportScorer
      Properties:
        Name: !Sub '${AgentCodeName}_PASSPORT_SCORER'
        Type: 'String'
        Value: !Ref passportScorer
        Tier: 'Standard'
        Description: 'Parameter for PASSPORT_SCORER'

    AgentParamEchochambersApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEchochambersApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_ECHOCHAMBERS_API_KEY'
        Type: 'String'
        Value: !Ref echochambersApiKey
        Tier: 'Standard'
        Description: 'Parameter for ECHOCHAMBERS_API_KEY'

    AgentParamEchochambersUsernameParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEchochambersUsername
      Properties:
        Name: !Sub '${AgentCodeName}_ECHOCHAMBERS_USERNAME'
        Type: 'String'
        Value: !Ref echochambersUsername
        Tier: 'Standard'
        Description: 'Parameter for ECHOCHAMBERS_USERNAME'

    AgentParamEchochambersRoomsParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEchochambersRooms
      Properties:
        Name: !Sub '${AgentCodeName}_ECHOCHAMBERS_ROOMS'
        Type: 'String'
        Value: !Ref echochambersRooms
        Tier: 'Standard'
        Description: 'Parameter for ECHOCHAMBERS_ROOMS'

    AgentParamEchochambersPollIntervalParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEchochambersPollInterval
      Properties:
        Name: !Sub '${AgentCodeName}_ECHOCHAMBERS_POLL_INTERVAL'
        Type: 'String'
        Value: !Ref echochambersPollInterval
        Tier: 'Standard'
        Description: 'Parameter for ECHOCHAMBERS_POLL_INTERVAL'

    AgentParamEchochambersMaxMessagesParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEchochambersMaxMessages
      Properties:
        Name: !Sub '${AgentCodeName}_ECHOCHAMBERS_MAX_MESSAGES'
        Type: 'String'
        Value: !Ref echochambersMaxMessages
        Tier: 'Standard'
        Description: 'Parameter for ECHOCHAMBERS_MAX_MESSAGES'

    AgentParamEchochambersConversationStarterIntervalParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEchochambersConversationStarterInterval
      Properties:
        Name: !Sub '${AgentCodeName}_ECHOCHAMBERS_CONVERSATION_STARTER_INTERVAL'
        Type: 'String'
        Value: !Ref echochambersConversationStarterInterval
        Tier: 'Standard'
        Description: 'Parameter for ECHOCHAMBERS_CONVERSATION_STARTER_INTERVAL'

    AgentParamEchochambersQuietPeriodParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEchochambersQuietPeriod
      Properties:
        Name: !Sub '${AgentCodeName}_ECHOCHAMBERS_QUIET_PERIOD'
        Type: 'String'
        Value: !Ref echochambersQuietPeriod
        Tier: 'Standard'
        Description: 'Parameter for ECHOCHAMBERS_QUIET_PERIOD'

    AgentParamAlloraChainSlugParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAlloraChainSlug
      Properties:
        Name: !Sub '${AgentCodeName}_ALLORA_CHAIN_SLUG'
        Type: 'String'
        Value: !Ref alloraChainSlug
        Tier: 'Standard'
        Description: 'Parameter for ALLORA_CHAIN_SLUG'

    AgentParamOpacityCloudflareNameParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOpacityCloudflareName
      Properties:
        Name: !Sub '${AgentCodeName}_OPACITY_CLOUDFLARE_NAME'
        Type: 'String'
        Value: !Ref opacityCloudflareName
        Tier: 'Standard'
        Description: 'Parameter for OPACITY_CLOUDFLARE_NAME'

    AgentParamOpacityProverUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOpacityProverUrl
      Properties:
        Name: !Sub '${AgentCodeName}_OPACITY_PROVER_URL'
        Type: 'String'
        Value: !Ref opacityProverUrl
        Tier: 'Standard'
        Description: 'Parameter for OPACITY_PROVER_URL'

    AgentParamDevaApiBaseUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDevaApiBaseUrl
      Properties:
        Name: !Sub '${AgentCodeName}_DEVA_API_BASE_URL'
        Type: 'String'
        Value: !Ref devaApiBaseUrl
        Tier: 'Standard'
        Description: 'Parameter for DEVA_API_BASE_URL'

    AgentParamQdrantKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasQdrantKey
      Properties:
        Name: !Sub '${AgentCodeName}_QDRANT_KEY'
        Type: 'String'
        Value: !Ref qdrantKey
        Tier: 'Standard'
        Description: 'Parameter for QDRANT_KEY'

    AgentParamQdrantPortParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasQdrantPort
      Properties:
        Name: !Sub '${AgentCodeName}_QDRANT_PORT'
        Type: 'String'
        Value: !Ref qdrantPort
        Tier: 'Standard'
        Description: 'Parameter for QDRANT_PORT'

    AgentParamQdrantVectorSizeParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasQdrantVectorSize
      Properties:
        Name: !Sub '${AgentCodeName}_QDRANT_VECTOR_SIZE'
        Type: 'String'
        Value: !Ref qdrantVectorSize
        Tier: 'Standard'
        Description: 'Parameter for QDRANT_VECTOR_SIZE'

    AgentParamAutonomeRpcParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAutonomeRpc
      Properties:
        Name: !Sub '${AgentCodeName}_AUTONOME_RPC'
        Type: 'String'
        Value: !Ref autonomeRpc
        Tier: 'Standard'
        Description: 'Parameter for AUTONOME_RPC'

    AgentParamAkashNetParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashNet
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_NET'
        Type: 'String'
        Value: !Ref akashNet
        Tier: 'Standard'
        Description: 'Parameter for AKASH_NET'

    AgentParamRpcEndpointParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasRpcEndpoint
      Properties:
        Name: !Sub '${AgentCodeName}_RPC_ENDPOINT'
        Type: 'String'
        Value: !Ref rpcEndpoint
        Tier: 'Standard'
        Description: 'Parameter for RPC_ENDPOINT'

    AgentParamAkashGasPricesParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashGasPrices
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_GAS_PRICES'
        Type: 'String'
        Value: !Ref akashGasPrices
        Tier: 'Standard'
        Description: 'Parameter for AKASH_GAS_PRICES'

    AgentParamAkashGasAdjustmentParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashGasAdjustment
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_GAS_ADJUSTMENT'
        Type: 'String'
        Value: !Ref akashGasAdjustment
        Tier: 'Standard'
        Description: 'Parameter for AKASH_GAS_ADJUSTMENT'

    AgentParamAkashKeyringBackendParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashKeyringBackend
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_KEYRING_BACKEND'
        Type: 'String'
        Value: !Ref akashKeyringBackend
        Tier: 'Standard'
        Description: 'Parameter for AKASH_KEYRING_BACKEND'

    AgentParamAkashFromParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashFrom
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_FROM'
        Type: 'String'
        Value: !Ref akashFrom
        Tier: 'Standard'
        Description: 'Parameter for AKASH_FROM'

    AgentParamAkashFeesParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashFees
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_FEES'
        Type: 'String'
        Value: !Ref akashFees
        Tier: 'Standard'
        Description: 'Parameter for AKASH_FEES'

    AgentParamAkashDepositParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashDeposit
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_DEPOSIT'
        Type: 'String'
        Value: !Ref akashDeposit
        Tier: 'Standard'
        Description: 'Parameter for AKASH_DEPOSIT'

    AgentParamAkashMnemonicParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashMnemonic
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_MNEMONIC'
        Type: 'String'
        Value: !Ref akashMnemonic
        Tier: 'Standard'
        Description: 'Parameter for AKASH_MNEMONIC'

    AgentParamAkashWalletAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashWalletAddress
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_WALLET_ADDRESS'
        Type: 'String'
        Value: !Ref akashWalletAddress
        Tier: 'Standard'
        Description: 'Parameter for AKASH_WALLET_ADDRESS'

    AgentParamAkashPricingApiUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashPricingApiUrl
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_PRICING_API_URL'
        Type: 'String'
        Value: !Ref akashPricingApiUrl
        Tier: 'Standard'
        Description: 'Parameter for AKASH_PRICING_API_URL'

    AgentParamAkashDefaultCpuParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashDefaultCpu
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_DEFAULT_CPU'
        Type: 'String'
        Value: !Ref akashDefaultCpu
        Tier: 'Standard'
        Description: 'Parameter for AKASH_DEFAULT_CPU'

    AgentParamAkashDefaultMemoryParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashDefaultMemory
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_DEFAULT_MEMORY'
        Type: 'String'
        Value: !Ref akashDefaultMemory
        Tier: 'Standard'
        Description: 'Parameter for AKASH_DEFAULT_MEMORY'

    AgentParamAkashDefaultStorageParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashDefaultStorage
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_DEFAULT_STORAGE'
        Type: 'String'
        Value: !Ref akashDefaultStorage
        Tier: 'Standard'
        Description: 'Parameter for AKASH_DEFAULT_STORAGE'

    AgentParamAkashSdlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashSdl
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_SDL'
        Type: 'String'
        Value: !Ref akashSdl
        Tier: 'Standard'
        Description: 'Parameter for AKASH_SDL'

    AgentParamAkashCloseDepParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashCloseDep
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_CLOSE_DEP'
        Type: 'String'
        Value: !Ref akashCloseDep
        Tier: 'Standard'
        Description: 'Parameter for AKASH_CLOSE_DEP'

    AgentParamAkashCloseDseqParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashCloseDseq
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_CLOSE_DSEQ'
        Type: 'String'
        Value: !Ref akashCloseDseq
        Tier: 'Standard'
        Description: 'Parameter for AKASH_CLOSE_DSEQ'

    AgentParamAkashProviderInfoParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashProviderInfo
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_PROVIDER_INFO'
        Type: 'String'
        Value: !Ref akashProviderInfo
        Tier: 'Standard'
        Description: 'Parameter for AKASH_PROVIDER_INFO'

    AgentParamAkashDepStatusParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashDepStatus
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_DEP_STATUS'
        Type: 'String'
        Value: !Ref akashDepStatus
        Tier: 'Standard'
        Description: 'Parameter for AKASH_DEP_STATUS'

    AgentParamAkashDepDseqParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashDepDseq
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_DEP_DSEQ'
        Type: 'String'
        Value: !Ref akashDepDseq
        Tier: 'Standard'
        Description: 'Parameter for AKASH_DEP_DSEQ'

    AgentParamAkashGasOperationParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashGasOperation
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_GAS_OPERATION'
        Type: 'String'
        Value: !Ref akashGasOperation
        Tier: 'Standard'
        Description: 'Parameter for AKASH_GAS_OPERATION'

    AgentParamAkashGasDseqParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashGasDseq
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_GAS_DSEQ'
        Type: 'String'
        Value: !Ref akashGasDseq
        Tier: 'Standard'
        Description: 'Parameter for AKASH_GAS_DSEQ'

    AgentParamAkashManifestModeParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashManifestMode
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_MANIFEST_MODE'
        Type: 'String'
        Value: !Ref akashManifestMode
        Tier: 'Standard'
        Description: 'Parameter for AKASH_MANIFEST_MODE'

    AgentParamAkashManifestPathParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashManifestPath
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_MANIFEST_PATH'
        Type: 'String'
        Value: !Ref akashManifestPath
        Tier: 'Standard'
        Description: 'Parameter for AKASH_MANIFEST_PATH'

    AgentParamAkashManifestValidationLevelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAkashManifestValidationLevel
      Properties:
        Name: !Sub '${AgentCodeName}_AKASH_MANIFEST_VALIDATION_LEVEL'
        Type: 'String'
        Value: !Ref akashManifestValidationLevel
        Tier: 'Standard'
        Description: 'Parameter for AKASH_MANIFEST_VALIDATION_LEVEL'

    AgentParamQuaiRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasQuaiRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_QUAI_RPC_URL'
        Type: 'String'
        Value: !Ref quaiRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for QUAI_RPC_URL'

    AgentParamAlchemyHttpTransportUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAlchemyHttpTransportUrl
      Properties:
        Name: !Sub '${AgentCodeName}_ALCHEMY_HTTP_TRANSPORT_URL'
        Type: 'String'
        Value: !Ref alchemyHttpTransportUrl
        Tier: 'Standard'
        Description: 'Parameter for ALCHEMY_HTTP_TRANSPORT_URL'

    AgentParamPythMainnetHermesUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythMainnetHermesUrl
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_MAINNET_HERMES_URL'
        Type: 'String'
        Value: !Ref pythMainnetHermesUrl
        Tier: 'Standard'
        Description: 'Parameter for PYTH_MAINNET_HERMES_URL'

    AgentParamPythMainnetWssUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythMainnetWssUrl
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_MAINNET_WSS_URL'
        Type: 'String'
        Value: !Ref pythMainnetWssUrl
        Tier: 'Standard'
        Description: 'Parameter for PYTH_MAINNET_WSS_URL'

    AgentParamPythMainnetPythnetUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythMainnetPythnetUrl
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_MAINNET_PYTHNET_URL'
        Type: 'String'
        Value: !Ref pythMainnetPythnetUrl
        Tier: 'Standard'
        Description: 'Parameter for PYTH_MAINNET_PYTHNET_URL'

    AgentParamPythMainnetContractRegistryParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythMainnetContractRegistry
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_MAINNET_CONTRACT_REGISTRY'
        Type: 'String'
        Value: !Ref pythMainnetContractRegistry
        Tier: 'Standard'
        Description: 'Parameter for PYTH_MAINNET_CONTRACT_REGISTRY'

    AgentParamPythMainnetProgramKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythMainnetProgramKey
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_MAINNET_PROGRAM_KEY'
        Type: 'String'
        Value: !Ref pythMainnetProgramKey
        Tier: 'Standard'
        Description: 'Parameter for PYTH_MAINNET_PROGRAM_KEY'

    AgentParamPythTestnetHermesUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythTestnetHermesUrl
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_TESTNET_HERMES_URL'
        Type: 'String'
        Value: !Ref pythTestnetHermesUrl
        Tier: 'Standard'
        Description: 'Parameter for PYTH_TESTNET_HERMES_URL'

    AgentParamPythTestnetWssUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythTestnetWssUrl
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_TESTNET_WSS_URL'
        Type: 'String'
        Value: !Ref pythTestnetWssUrl
        Tier: 'Standard'
        Description: 'Parameter for PYTH_TESTNET_WSS_URL'

    AgentParamPythTestnetPythnetUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythTestnetPythnetUrl
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_TESTNET_PYTHNET_URL'
        Type: 'String'
        Value: !Ref pythTestnetPythnetUrl
        Tier: 'Standard'
        Description: 'Parameter for PYTH_TESTNET_PYTHNET_URL'

    AgentParamPythTestnetContractRegistryParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythTestnetContractRegistry
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_TESTNET_CONTRACT_REGISTRY'
        Type: 'String'
        Value: !Ref pythTestnetContractRegistry
        Tier: 'Standard'
        Description: 'Parameter for PYTH_TESTNET_CONTRACT_REGISTRY'

    AgentParamPythTestnetProgramKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythTestnetProgramKey
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_TESTNET_PROGRAM_KEY'
        Type: 'String'
        Value: !Ref pythTestnetProgramKey
        Tier: 'Standard'
        Description: 'Parameter for PYTH_TESTNET_PROGRAM_KEY'

    AgentParamPythMaxRetriesParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythMaxRetries
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_MAX_RETRIES'
        Type: 'String'
        Value: !Ref pythMaxRetries
        Tier: 'Standard'
        Description: 'Parameter for PYTH_MAX_RETRIES'

    AgentParamPythRetryDelayParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythRetryDelay
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_RETRY_DELAY'
        Type: 'String'
        Value: !Ref pythRetryDelay
        Tier: 'Standard'
        Description: 'Parameter for PYTH_RETRY_DELAY'

    AgentParamPythTimeoutParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythTimeout
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_TIMEOUT'
        Type: 'String'
        Value: !Ref pythTimeout
        Tier: 'Standard'
        Description: 'Parameter for PYTH_TIMEOUT'

    AgentParamPythGranularLogParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythGranularLog
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_GRANULAR_LOG'
        Type: 'String'
        Value: !Ref pythGranularLog
        Tier: 'Standard'
        Description: 'Parameter for PYTH_GRANULAR_LOG'

    AgentParamPythLogLevelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythLogLevel
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_LOG_LEVEL'
        Type: 'String'
        Value: !Ref pythLogLevel
        Tier: 'Standard'
        Description: 'Parameter for PYTH_LOG_LEVEL'

    AgentParamRuntimeCheckModeParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasRuntimeCheckMode
      Properties:
        Name: !Sub '${AgentCodeName}_RUNTIME_CHECK_MODE'
        Type: 'String'
        Value: !Ref runtimeCheckMode
        Tier: 'Standard'
        Description: 'Parameter for RUNTIME_CHECK_MODE'

    AgentParamPythEnablePriceStreamingParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythEnablePriceStreaming
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_ENABLE_PRICE_STREAMING'
        Type: 'String'
        Value: !Ref pythEnablePriceStreaming
        Tier: 'Standard'
        Description: 'Parameter for PYTH_ENABLE_PRICE_STREAMING'

    AgentParamPythMaxPriceStreamsParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythMaxPriceStreams
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_MAX_PRICE_STREAMS'
        Type: 'String'
        Value: !Ref pythMaxPriceStreams
        Tier: 'Standard'
        Description: 'Parameter for PYTH_MAX_PRICE_STREAMS'

    AgentParamPythTestId01Parameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythTestId01
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_TEST_ID01'
        Type: 'String'
        Value: !Ref pythTestId01
        Tier: 'Standard'
        Description: 'Parameter for PYTH_TEST_ID01'

    AgentParamPythTestId02Parameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasPythTestId02
      Properties:
        Name: !Sub '${AgentCodeName}_PYTH_TEST_ID02'
        Type: 'String'
        Value: !Ref pythTestId02
        Tier: 'Standard'
        Description: 'Parameter for PYTH_TEST_ID02'

    AgentParamRouterNitroEvmPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasRouterNitroEvmPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_ROUTER_NITRO_EVM_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref routerNitroEvmPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for ROUTER_NITRO_EVM_PRIVATE_KEY'

    AgentParamDkgHostnameParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDkgHostname
      Properties:
        Name: !Sub '${AgentCodeName}_DKG_HOSTNAME'
        Type: 'String'
        Value: !Ref dkgHostname
        Tier: 'Standard'
        Description: 'Parameter for DKG_HOSTNAME'

    AgentParamDkgPortParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDkgPort
      Properties:
        Name: !Sub '${AgentCodeName}_DKG_PORT'
        Type: 'String'
        Value: !Ref dkgPort
        Tier: 'Standard'
        Description: 'Parameter for DKG_PORT'

    AgentParamDkgPublicKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDkgPublicKey
      Properties:
        Name: !Sub '${AgentCodeName}_DKG_PUBLIC_KEY'
        Type: 'String'
        Value: !Ref dkgPublicKey
        Tier: 'Standard'
        Description: 'Parameter for DKG_PUBLIC_KEY'

    AgentParamDkgPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDkgPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_DKG_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref dkgPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for DKG_PRIVATE_KEY'

    AgentParamDkgBlockchainNameParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDkgBlockchainName
      Properties:
        Name: !Sub '${AgentCodeName}_DKG_BLOCKCHAIN_NAME'
        Type: 'String'
        Value: !Ref dkgBlockchainName
        Tier: 'Standard'
        Description: 'Parameter for DKG_BLOCKCHAIN_NAME'

    AgentParamInitiaNodeUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInitiaNodeUrl
      Properties:
        Name: !Sub '${AgentCodeName}_INITIA_NODE_URL'
        Type: 'String'
        Value: !Ref initiaNodeUrl
        Tier: 'Standard'
        Description: 'Parameter for INITIA_NODE_URL'

    AgentParamInitiaChainIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasInitiaChainId
      Properties:
        Name: !Sub '${AgentCodeName}_INITIA_CHAIN_ID'
        Type: 'String'
        Value: !Ref initiaChainId
        Tier: 'Standard'
        Description: 'Parameter for INITIA_CHAIN_ID'

    AgentParamNvidiaNimSpashParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaNimSpash
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_NIM_SPASH'
        Type: 'String'
        Value: !Ref nvidiaNimSpash
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_NIM_SPASH'

    AgentParamNvidiaNimApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaNimApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_NIM_API_KEY'
        Type: 'String'
        Value: !Ref nvidiaNimApiKey
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_NIM_API_KEY'

    AgentParamNvidiaNgcApiKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaNgcApiKey
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_NGC_API_KEY'
        Type: 'String'
        Value: !Ref nvidiaNgcApiKey
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_NGC_API_KEY'

    AgentParamNvidiaNimMaxRetriesParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaNimMaxRetries
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_NIM_MAX_RETRIES'
        Type: 'String'
        Value: !Ref nvidiaNimMaxRetries
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_NIM_MAX_RETRIES'

    AgentParamNvidiaNimRetryDelayParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaNimRetryDelay
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_NIM_RETRY_DELAY'
        Type: 'String'
        Value: !Ref nvidiaNimRetryDelay
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_NIM_RETRY_DELAY'

    AgentParamNvidiaNimTimeoutParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaNimTimeout
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_NIM_TIMEOUT'
        Type: 'String'
        Value: !Ref nvidiaNimTimeout
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_NIM_TIMEOUT'

    AgentParamNvidiaGranularLogParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaGranularLog
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_GRANULAR_LOG'
        Type: 'String'
        Value: !Ref nvidiaGranularLog
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_GRANULAR_LOG'

    AgentParamNvidiaLogLevelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaLogLevel
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_LOG_LEVEL'
        Type: 'String'
        Value: !Ref nvidiaLogLevel
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_LOG_LEVEL'

    AgentParamNvidiaOfftopicSystemParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaOfftopicSystem
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_OFFTOPIC_SYSTEM'
        Type: 'String'
        Value: !Ref nvidiaOfftopicSystem
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_OFFTOPIC_SYSTEM'

    AgentParamNvidiaOfftopicUserParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaOfftopicUser
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_OFFTOPIC_USER'
        Type: 'String'
        Value: !Ref nvidiaOfftopicUser
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_OFFTOPIC_USER'

    AgentParamNvidiaNimBaseVisionUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaNimBaseVisionUrl
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_NIM_BASE_VISION_URL'
        Type: 'String'
        Value: !Ref nvidiaNimBaseVisionUrl
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_NIM_BASE_VISION_URL'

    AgentParamNvidiaCosmosModelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaCosmosModel
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_COSMOS_MODEL'
        Type: 'String'
        Value: !Ref nvidiaCosmosModel
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_COSMOS_MODEL'

    AgentParamNvidiaCosmosInvokeUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaCosmosInvokeUrl
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_COSMOS_INVOKE_URL'
        Type: 'String'
        Value: !Ref nvidiaCosmosInvokeUrl
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_COSMOS_INVOKE_URL'

    AgentParamNvidiaCosmosAssetUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaCosmosAssetUrl
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_COSMOS_ASSET_URL'
        Type: 'String'
        Value: !Ref nvidiaCosmosAssetUrl
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_COSMOS_ASSET_URL'

    AgentParamNvidiaCosmosMaxTokensParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNvidiaCosmosMaxTokens
      Properties:
        Name: !Sub '${AgentCodeName}_NVIDIA_COSMOS_MAX_TOKENS'
        Type: 'String'
        Value: !Ref nvidiaCosmosMaxTokens
        Tier: 'Standard'
        Description: 'Parameter for NVIDIA_COSMOS_MAX_TOKENS'

    AgentParamEmailOutgoingHostParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmailOutgoingHost
      Properties:
        Name: !Sub '${AgentCodeName}_EMAIL_OUTGOING_HOST'
        Type: 'String'
        Value: !Ref emailOutgoingHost
        Tier: 'Standard'
        Description: 'Parameter for EMAIL_OUTGOING_HOST'

    AgentParamEmailOutgoingPortParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmailOutgoingPort
      Properties:
        Name: !Sub '${AgentCodeName}_EMAIL_OUTGOING_PORT'
        Type: 'String'
        Value: !Ref emailOutgoingPort
        Tier: 'Standard'
        Description: 'Parameter for EMAIL_OUTGOING_PORT'

    AgentParamEmailOutgoingUserParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmailOutgoingUser
      Properties:
        Name: !Sub '${AgentCodeName}_EMAIL_OUTGOING_USER'
        Type: 'String'
        Value: !Ref emailOutgoingUser
        Tier: 'Standard'
        Description: 'Parameter for EMAIL_OUTGOING_USER'

    AgentParamEmailOutgoingPassParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmailOutgoingPass
      Properties:
        Name: !Sub '${AgentCodeName}_EMAIL_OUTGOING_PASS'
        Type: 'String'
        Value: !Ref emailOutgoingPass
        Tier: 'Standard'
        Description: 'Parameter for EMAIL_OUTGOING_PASS'

    AgentParamEmailIncomingServiceParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmailIncomingService
      Properties:
        Name: !Sub '${AgentCodeName}_EMAIL_INCOMING_SERVICE'
        Type: 'String'
        Value: !Ref emailIncomingService
        Tier: 'Standard'
        Description: 'Parameter for EMAIL_INCOMING_SERVICE'

    AgentParamEmailIncomingHostParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmailIncomingHost
      Properties:
        Name: !Sub '${AgentCodeName}_EMAIL_INCOMING_HOST'
        Type: 'String'
        Value: !Ref emailIncomingHost
        Tier: 'Standard'
        Description: 'Parameter for EMAIL_INCOMING_HOST'

    AgentParamEmailIncomingPortParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmailIncomingPort
      Properties:
        Name: !Sub '${AgentCodeName}_EMAIL_INCOMING_PORT'
        Type: 'String'
        Value: !Ref emailIncomingPort
        Tier: 'Standard'
        Description: 'Parameter for EMAIL_INCOMING_PORT'

    AgentParamEmailIncomingUserParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmailIncomingUser
      Properties:
        Name: !Sub '${AgentCodeName}_EMAIL_INCOMING_USER'
        Type: 'String'
        Value: !Ref emailIncomingUser
        Tier: 'Standard'
        Description: 'Parameter for EMAIL_INCOMING_USER'

    AgentParamEmailIncomingPassParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmailIncomingPass
      Properties:
        Name: !Sub '${AgentCodeName}_EMAIL_INCOMING_PASS'
        Type: 'String'
        Value: !Ref emailIncomingPass
        Tier: 'Standard'
        Description: 'Parameter for EMAIL_INCOMING_PASS'

    AgentParamSeiNetworkParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSeiNetwork
      Properties:
        Name: !Sub '${AgentCodeName}_SEI_NETWORK'
        Type: 'String'
        Value: !Ref seiNetwork
        Tier: 'Standard'
        Description: 'Parameter for SEI_NETWORK'

    AgentParamSeiRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasSeiRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_SEI_RPC_URL'
        Type: 'String'
        Value: !Ref seiRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for SEI_RPC_URL'

    AgentParamOmniflixMnemonicParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOmniflixMnemonic
      Properties:
        Name: !Sub '${AgentCodeName}_OMNIFLIX_MNEMONIC'
        Type: 'String'
        Value: !Ref omniflixMnemonic
        Tier: 'Standard'
        Description: 'Parameter for OMNIFLIX_MNEMONIC'

    AgentParamOmniflixRpcEndpointParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOmniflixRpcEndpoint
      Properties:
        Name: !Sub '${AgentCodeName}_OMNIFLIX_RPC_ENDPOINT'
        Type: 'String'
        Value: !Ref omniflixRpcEndpoint
        Tier: 'Standard'
        Description: 'Parameter for OMNIFLIX_RPC_ENDPOINT'

    AgentParamOmniflixPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasOmniflixPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_OMNIFLIX_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref omniflixPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for OMNIFLIX_PRIVATE_KEY'

    AgentParamImgflipPasswordParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasImgflipPassword
      Properties:
        Name: !Sub '${AgentCodeName}_IMGFLIP_PASSWORD'
        Type: 'String'
        Value: !Ref imgflipPassword
        Tier: 'Standard'
        Description: 'Parameter for IMGFLIP_PASSWORD'

    AgentParamHyperliquidTestnetParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasHyperliquidTestnet
      Properties:
        Name: !Sub '${AgentCodeName}_HYPERLIQUID_TESTNET'
        Type: 'String'
        Value: !Ref hyperliquidTestnet
        Tier: 'Standard'
        Description: 'Parameter for HYPERLIQUID_TESTNET'

    AgentParamEvmRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEvmRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_EVM_RPC_URL'
        Type: 'String'
        Value: !Ref evmRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for EVM_RPC_URL'

    AgentParamEthstorageAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEthstorageAddress
      Properties:
        Name: !Sub '${AgentCodeName}_ETHSTORAGE_ADDRESS'
        Type: 'String'
        Value: !Ref ethstorageAddress
        Tier: 'Standard'
        Description: 'Parameter for ETHSTORAGE_ADDRESS'

    AgentParamEthstorageRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEthstorageRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_ETHSTORAGE_RPC_URL'
        Type: 'String'
        Value: !Ref ethstorageRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for ETHSTORAGE_RPC_URL'

    AgentParamDefaultToEmailParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDefaultToEmail
      Properties:
        Name: !Sub '${AgentCodeName}_DEFAULT_TO_EMAIL'
        Type: 'String'
        Value: !Ref defaultToEmail
        Tier: 'Standard'
        Description: 'Parameter for DEFAULT_TO_EMAIL'

    AgentParamDefaultFromEmailParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDefaultFromEmail
      Properties:
        Name: !Sub '${AgentCodeName}_DEFAULT_FROM_EMAIL'
        Type: 'String'
        Value: !Ref defaultFromEmail
        Tier: 'Standard'
        Description: 'Parameter for DEFAULT_FROM_EMAIL'

    AgentParamEmailAutomationEnabledParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmailAutomationEnabled
      Properties:
        Name: !Sub '${AgentCodeName}_EMAIL_AUTOMATION_ENABLED'
        Type: 'String'
        Value: !Ref emailAutomationEnabled
        Tier: 'Standard'
        Description: 'Parameter for EMAIL_AUTOMATION_ENABLED'

    AgentParamEmailEvaluationPromptParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasEmailEvaluationPrompt
      Properties:
        Name: !Sub '${AgentCodeName}_EMAIL_EVALUATION_PROMPT'
        Type: 'String'
        Value: !Ref emailEvaluationPrompt
        Tier: 'Standard'
        Description: 'Parameter for EMAIL_EVALUATION_PROMPT'

    AgentParamAnkrWalletParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAnkrWallet
      Properties:
        Name: !Sub '${AgentCodeName}_ANKR_WALLET'
        Type: 'String'
        Value: !Ref ankrWallet
        Tier: 'Standard'
        Description: 'Parameter for ANKR_WALLET'

    AgentParamAnkrMaxRetriesParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAnkrMaxRetries
      Properties:
        Name: !Sub '${AgentCodeName}_ANKR_MAX_RETRIES'
        Type: 'String'
        Value: !Ref ankrMaxRetries
        Tier: 'Standard'
        Description: 'Parameter for ANKR_MAX_RETRIES'

    AgentParamAnkrRetryDelayParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAnkrRetryDelay
      Properties:
        Name: !Sub '${AgentCodeName}_ANKR_RETRY_DELAY'
        Type: 'String'
        Value: !Ref ankrRetryDelay
        Tier: 'Standard'
        Description: 'Parameter for ANKR_RETRY_DELAY'

    AgentParamAnkrTimeoutParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAnkrTimeout
      Properties:
        Name: !Sub '${AgentCodeName}_ANKR_TIMEOUT'
        Type: 'String'
        Value: !Ref ankrTimeout
        Tier: 'Standard'
        Description: 'Parameter for ANKR_TIMEOUT'

    AgentParamAnkrGranularLogParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAnkrGranularLog
      Properties:
        Name: !Sub '${AgentCodeName}_ANKR_GRANULAR_LOG'
        Type: 'String'
        Value: !Ref ankrGranularLog
        Tier: 'Standard'
        Description: 'Parameter for ANKR_GRANULAR_LOG'

    AgentParamAnkrLogLevelParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAnkrLogLevel
      Properties:
        Name: !Sub '${AgentCodeName}_ANKR_LOG_LEVEL'
        Type: 'String'
        Value: !Ref ankrLogLevel
        Tier: 'Standard'
        Description: 'Parameter for ANKR_LOG_LEVEL'

    AgentParamAnkrRuntimeCheckModeParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAnkrRuntimeCheckMode
      Properties:
        Name: !Sub '${AgentCodeName}_ANKR_RUNTIME_CHECK_MODE'
        Type: 'String'
        Value: !Ref ankrRuntimeCheckMode
        Tier: 'Standard'
        Description: 'Parameter for ANKR_RUNTIME_CHECK_MODE'

    AgentParamAnkrSpashParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasAnkrSpash
      Properties:
        Name: !Sub '${AgentCodeName}_ANKR_SPASH'
        Type: 'String'
        Value: !Ref ankrSpash
        Tier: 'Standard'
        Description: 'Parameter for ANKR_SPASH'

    AgentParamDcapModeParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDcapMode
      Properties:
        Name: !Sub '${AgentCodeName}_DCAP_MODE'
        Type: 'String'
        Value: !Ref dcapMode
        Tier: 'Standard'
        Description: 'Parameter for DCAP_MODE'

    AgentParamBtcPrivateKeyWifParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasBtcPrivateKeyWif
      Properties:
        Name: !Sub '${AgentCodeName}_BTC_PRIVATE_KEY_WIF'
        Type: 'String'
        Value: !Ref btcPrivateKeyWif
        Tier: 'Standard'
        Description: 'Parameter for BTC_PRIVATE_KEY_WIF'

    AgentParamBtcAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasBtcAddress
      Properties:
        Name: !Sub '${AgentCodeName}_BTC_ADDRESS'
        Type: 'String'
        Value: !Ref btcAddress
        Tier: 'Standard'
        Description: 'Parameter for BTC_ADDRESS'

    AgentParamBtcMintCapParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasBtcMintCap
      Properties:
        Name: !Sub '${AgentCodeName}_BTC_MINT_CAP'
        Type: 'String'
        Value: !Ref btcMintCap
        Tier: 'Standard'
        Description: 'Parameter for BTC_MINT_CAP'

    AgentParamBtcMintDeadlineParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasBtcMintDeadline
      Properties:
        Name: !Sub '${AgentCodeName}_BTC_MINT_DEADLINE'
        Type: 'String'
        Value: !Ref btcMintDeadline
        Tier: 'Standard'
        Description: 'Parameter for BTC_MINT_DEADLINE'

    AgentParamBtcFundraisingCapParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasBtcFundraisingCap
      Properties:
        Name: !Sub '${AgentCodeName}_BTC_FUNDRAISING_CAP'
        Type: 'String'
        Value: !Ref btcFundraisingCap
        Tier: 'Standard'
        Description: 'Parameter for BTC_FUNDRAISING_CAP'

    AgentParamTrikonInitialBalanceParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasTrikonInitialBalance
      Properties:
        Name: !Sub '${AgentCodeName}_TRIKON_INITIAL_BALANCE'
        Type: 'String'
        Value: !Ref trikonInitialBalance
        Tier: 'Standard'
        Description: 'Parameter for TRIKON_INITIAL_BALANCE'

    AgentParamArbitrageEvmProviderUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasArbitrageEvmProviderUrl
      Properties:
        Name: !Sub '${AgentCodeName}_ARBITRAGE_EVM_PROVIDER_URL'
        Type: 'String'
        Value: !Ref arbitrageEvmProviderUrl
        Tier: 'Standard'
        Description: 'Parameter for ARBITRAGE_EVM_PROVIDER_URL'

    AgentParamArbitrageEvmPrivateKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasArbitrageEvmPrivateKey
      Properties:
        Name: !Sub '${AgentCodeName}_ARBITRAGE_EVM_PRIVATE_KEY'
        Type: 'String'
        Value: !Ref arbitrageEvmPrivateKey
        Tier: 'Standard'
        Description: 'Parameter for ARBITRAGE_EVM_PRIVATE_KEY'

    AgentParamFlashbotsRelaySigningKeyParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasFlashbotsRelaySigningKey
      Properties:
        Name: !Sub '${AgentCodeName}_FLASHBOTS_RELAY_SIGNING_KEY'
        Type: 'String'
        Value: !Ref flashbotsRelaySigningKey
        Tier: 'Standard'
        Description: 'Parameter for FLASHBOTS_RELAY_SIGNING_KEY'

    AgentParamBundleExecutorAddressParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasBundleExecutorAddress
      Properties:
        Name: !Sub '${AgentCodeName}_BUNDLE_EXECUTOR_ADDRESS'
        Type: 'String'
        Value: !Ref bundleExecutorAddress
        Tier: 'Standard'
        Description: 'Parameter for BUNDLE_EXECUTOR_ADDRESS'

    AgentParamDeskExchangeNetworkParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDeskExchangeNetwork
      Properties:
        Name: !Sub '${AgentCodeName}_DESK_EXCHANGE_NETWORK'
        Type: 'String'
        Value: !Ref deskExchangeNetwork
        Tier: 'Standard'
        Description: 'Parameter for DESK_EXCHANGE_NETWORK'

    AgentParamCompassArbitrumRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCompassArbitrumRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_COMPASS_ARBITRUM_RPC_URL'
        Type: 'String'
        Value: !Ref compassArbitrumRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for COMPASS_ARBITRUM_RPC_URL'

    AgentParamCompassEthereumRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCompassEthereumRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_COMPASS_ETHEREUM_RPC_URL'
        Type: 'String'
        Value: !Ref compassEthereumRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for COMPASS_ETHEREUM_RPC_URL'

    AgentParamCompassBaseRpcUrlParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasCompassBaseRpcUrl
      Properties:
        Name: !Sub '${AgentCodeName}_COMPASS_BASE_RPC_URL'
        Type: 'String'
        Value: !Ref compassBaseRpcUrl
        Tier: 'Standard'
        Description: 'Parameter for COMPASS_BASE_RPC_URL'

    AgentParamDataAuthTokenParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasDataAuthToken
      Properties:
        Name: !Sub '${AgentCodeName}_DATA_AUTH_TOKEN'
        Type: 'String'
        Value: !Ref dataAuthToken
        Tier: 'Standard'
        Description: 'Parameter for DATA_AUTH_TOKEN'

    AgentParamNknClientIdParameter:
      Type: 'AWS::SSM::Parameter'
      Condition: HasNknClientId
      Properties:
        Name: !Sub '${AgentCodeName}_NKN_CLIENT_ID'
        Type: 'String'
        Value: !Ref nknClientId
        Tier: 'Standard'
        Description: 'Parameter for NKN_CLIENT_ID'
